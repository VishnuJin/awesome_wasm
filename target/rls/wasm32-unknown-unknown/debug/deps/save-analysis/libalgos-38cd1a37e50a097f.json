{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0","program":"/home/suru/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","algos","--edition=2018","/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"big_num\"","--cfg","feature=\"default\"","--cfg","feature=\"num\"","-C","metadata=38cd1a37e50a097f","-C","extra-filename=-38cd1a37e50a097f","--out-dir","/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps","--target","wasm32-unknown-unknown","-L","dependency=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps","-L","dependency=/home/suru/Documents/awesome_wasm/target/rls/debug/deps","--extern","num=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/libnum-45b1489d393508ec.rmeta","--extern","rand=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/librand-6d4c82853bea1db8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/suru/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/libalgos-38cd1a37e50a097f.rmeta"},"prelude":{"crate_id":{"name":"algos","disambiguator":[8221951162691637188,1202411972655519388]},"crate_root":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src","external_crates":[{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17568117084726535670,18291600942983091792]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11708719394972853161,10740351817569260753]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11739846921667929886,4899200388694349132]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10483847702699074036,9448700856939319914]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13547053222791032196,5616744556569750145]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1671359507371111213,8555349780106746800]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10553035774617414455,11464508503641710306]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12030632638709788125,179720963704046562]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17497149768326916465,12808847267177544861]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16272633320396836489,9042107923364971302]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8020748326108297999,16907006358149453028]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","num":12,"id":{"name":"dlmalloc","disambiguator":[14908421788973856670,17807852881498547973]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","num":13,"id":{"name":"num","disambiguator":[16157028200555532072,3580212222760778291]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","num":14,"id":{"name":"num_bigint","disambiguator":[2716809419038565466,4573236123954305594]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","num":15,"id":{"name":"num_integer","disambiguator":[4059326051056361053,6264944459348715946]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","num":16,"id":{"name":"num_traits","disambiguator":[10136725111933920827,11215299027748122273]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","num":17,"id":{"name":"num_complex","disambiguator":[11983199427962327116,16737520904975420407]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","num":18,"id":{"name":"num_iter","disambiguator":[6606383654665283707,1512530169052725766]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","num":19,"id":{"name":"num_rational","disambiguator":[5141809185658865332,11030112496762611836]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","num":20,"id":{"name":"rand","disambiguator":[15826484504518146525,10983195085228617911]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","num":21,"id":{"name":"rand_core","disambiguator":[2915259234656009499,3155586842560050950]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","num":22,"id":{"name":"getrandom","disambiguator":[17344996705228163398,12958067115305631173]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","num":23,"id":{"name":"cfg_if","disambiguator":[3327276768833609390,4213488046245644274]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","num":24,"id":{"name":"rand_chacha","disambiguator":[6172962513041018207,10858514425386189059]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","num":25,"id":{"name":"ppv_lite86","disambiguator":[12345016396709675239,14513763404299466368]}}],"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":0,"byte_end":592,"line_start":1,"line_end":18,"column_start":1,"column_end":14}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","byte_start":781,"byte_end":793,"line_start":9,"line_end":9,"column_start":20,"column_end":32},"alias_span":null,"name":"BigFactorial","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","byte_start":842,"byte_end":848,"line_start":11,"line_end":11,"column_start":20,"column_end":26},"alias_span":null,"name":"BigFib","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","byte_start":897,"byte_end":909,"line_start":13,"line_end":13,"column_start":20,"column_end":32},"alias_span":null,"name":"BigPrimorial","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","byte_start":931,"byte_end":934,"line_start":15,"line_end":15,"column_start":20,"column_end":23},"alias_span":null,"name":"Fib","value":"","parent":{"krate":0,"index":3}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":0,"byte_end":592,"line_start":1,"line_end":18,"column_start":1,"column_end":14},"name":"","qualname":"::","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":72},{"krate":0,"index":86},{"krate":0,"index":95}],"decl_id":null,"docs":" This crate is a collection of algorithms, mostly intended as learning exercise.","sig":null,"attributes":[{"value":"/ This crate is a collection of algorithms, mostly intended as learning exercise.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":0,"byte_end":83,"line_start":1,"line_end":1,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":84,"byte_end":87,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What is implemented:","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":88,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/  - Several sort algorithms","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":116,"byte_end":146,"line_start":4,"line_end":4,"column_start":1,"column_end":31}},{"value":"/  - Some search algorithms","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":147,"byte_end":176,"line_start":5,"line_end":5,"column_start":1,"column_end":30}},{"value":"/  - Some pattern algorithms","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":177,"byte_end":207,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/  - Some numeric sequence algorithms","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":208,"byte_end":247,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":248,"byte_end":251,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":252,"byte_end":267,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/ This crate have a feature called `big_num` and it is active by default.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":268,"byte_end":343,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":344,"byte_end":347,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ In case your needs don't require using big numbers and you want to reduce the crate","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":348,"byte_end":435,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"/ numbers to be compiled and the compile time, you can disactivate the default features.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":436,"byte_end":526,"line_start":13,"line_end":13,"column_start":1,"column_end":91}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"numerics","qualname":"::numerics","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":15},{"krate":0,"index":42},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"decl_id":null,"docs":" Module for numeric algorithms ans some iterators\n","sig":null,"attributes":[{"value":"/ Module for numeric algorithms ans some iterators","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","byte_start":594,"byte_end":646,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"factorial","qualname":"::numerics::factorial","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":129},{"krate":0,"index":134},{"krate":0,"index":132},{"krate":0,"index":8},{"krate":0,"index":12}],"decl_id":null,"docs":" Factorial module.","sig":null,"attributes":[{"value":"cfg(feature = \"big_num\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","byte_start":648,"byte_end":675,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/ Factorial module.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":937,"byte_end":958,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":959,"byte_end":962,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Since calculate fatorial is simple enought, we will only implement the iterator that","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":963,"byte_end":1051,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/ keeps giving a ever increasing number.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1052,"byte_end":1094,"line_start":4,"line_end":4,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1095,"byte_end":1098,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ _Only implement for big numbers cause the number grows big super fast._","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1099,"byte_end":1174,"line_start":6,"line_end":6,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":129},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1523,"byte_end":1535,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"BigFactorial","qualname":"::numerics::factorial::BigFactorial","value":"BigFactorial {  }","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"decl_id":null,"docs":" Factorial iterator using big numbers.","sig":null,"attributes":[{"value":"/ Factorial iterator using big numbers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1202,"byte_end":1243,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1244,"byte_end":1247,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1248,"byte_end":1261,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ Print the 100 first factorial numbers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1262,"byte_end":1304,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1305,"byte_end":1308,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1309,"byte_end":1320,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # use algos::numerics::BigFactorial;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1321,"byte_end":1361,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1362,"byte_end":1379,"line_start":17,"line_end":17,"column_start":1,"column_end":18}},{"value":"/ BigFactorial::new().enumerate().take(100).for_each(|(i, v)| println!(\"{}!: {}\", i, v));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1380,"byte_end":1471,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ # }","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1472,"byte_end":1479,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1480,"byte_end":1487,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1876,"byte_end":1879,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<BigFactorial>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator starting at the first number of the sequence.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator starting at the first number of the sequence.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1792,"byte_end":1864,"line_start":34,"line_end":34,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":2059,"byte_end":2061,"line_start":39,"line_end":39,"column_start":12,"column_end":14},"name":"at","qualname":"<BigFactorial>::at","value":"pub fn at<impl Into<u128>: Into<u128>>(impl Into<u128>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator with the first factorial number beeing the `nth` factorial\n number.\n","sig":null,"attributes":[{"value":"/ Create a new iterator with the first factorial number beeing the `nth` factorial","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1947,"byte_end":2031,"line_start":37,"line_end":37,"column_start":5,"column_end":89}},{"value":"/ number.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":2036,"byte_end":2047,"line_start":38,"line_end":38,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fibonacci","qualname":"::numerics::fibonacci","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":163},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":136},{"krate":0,"index":142},{"krate":0,"index":140},{"krate":0,"index":138},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":144},{"krate":0,"index":150},{"krate":0,"index":148},{"krate":0,"index":146},{"krate":0,"index":28},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":41}],"decl_id":null,"docs":" Fibonacci sequence algorithms.\n","sig":null,"attributes":[{"value":"/ Fibonacci sequence algorithms.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3266,"byte_end":3300,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3920,"byte_end":3923,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"Fib","qualname":"::numerics::fibonacci::Fib","value":"Fib {  }","parent":null,"children":[{"krate":0,"index":137}],"decl_id":null,"docs":" A Iterator for the fibonacci sequence.","sig":null,"attributes":[{"value":"/ A Iterator for the fibonacci sequence.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3383,"byte_end":3425,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3426,"byte_end":3429,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3430,"byte_end":3443,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/ Note that due to using `u128` primitive, you cannot take more than the first 186","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3444,"byte_end":3528,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"/ fibonacci numbers. If you need to go past that, use [`BigFib`] iterator.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3529,"byte_end":3605,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3606,"byte_end":3609,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`BigFib`]: ./struct.BigFib.html","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3610,"byte_end":3646,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3647,"byte_end":3650,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3651,"byte_end":3664,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/ Print the 100 first fibonacci numbers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3665,"byte_end":3707,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3708,"byte_end":3711,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3712,"byte_end":3723,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # use algos::numerics::Fib;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3724,"byte_end":3755,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3756,"byte_end":3773,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ Fib::new().enumerate().take(100).for_each(|(i, v)| println!(\"Fib {}: {}\", i, v));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3774,"byte_end":3859,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/ # }","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3860,"byte_end":3867,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3868,"byte_end":3875,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4050,"byte_end":4053,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Fib>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator starting at the first fibonacci number, zero.\n","sig":null,"attributes":[{"value":"/ Create a new iterator starting at the first fibonacci number, zero.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3967,"byte_end":4038,"line_start":30,"line_end":30,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4206,"byte_end":4208,"line_start":35,"line_end":35,"column_start":12,"column_end":14},"name":"at","qualname":"<Fib>::at","value":"pub fn at<impl Into<u128>: Into<u128>>(impl Into<u128>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator with the first fibonacci number beeing the `nth` fibonacci\n number.\n","sig":null,"attributes":[{"value":"/ Create a new iterator with the first fibonacci number beeing the `nth` fibonacci","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4094,"byte_end":4178,"line_start":33,"line_end":33,"column_start":5,"column_end":89}},{"value":"/ number.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4183,"byte_end":4194,"line_start":34,"line_end":34,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":144},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4856,"byte_end":4862,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"BigFib","qualname":"::numerics::fibonacci::BigFib","value":"BigFib {  }","parent":null,"children":[{"krate":0,"index":145}],"decl_id":null,"docs":" A Iterator for the fibonacci sequence using big numbers.","sig":null,"attributes":[{"value":"/ A Iterator for the fibonacci sequence using big numbers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4488,"byte_end":4548,"line_start":48,"line_end":48,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4549,"byte_end":4552,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4553,"byte_end":4566,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/ Print the 100 first fibonacci numbers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4567,"byte_end":4609,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4610,"byte_end":4613,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4614,"byte_end":4625,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/ # use algos::numerics::BigFib;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4626,"byte_end":4660,"line_start":54,"line_end":54,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4661,"byte_end":4678,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/ BigFib::new().enumerate().take(100).for_each(|(i, v)| println!(\"Fib {}: {}\", i, v));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4679,"byte_end":4767,"line_start":56,"line_end":56,"column_start":1,"column_end":89}},{"value":"/ # }","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4768,"byte_end":4775,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4776,"byte_end":4783,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"big_num\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4784,"byte_end":4811,"line_start":59,"line_end":59,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5026,"byte_end":5029,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<BigFib>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator starting at the first fibonacci number, zero.\n","sig":null,"attributes":[{"value":"/ Create a new iterator starting at the first fibonacci number, zero.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4943,"byte_end":5014,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5209,"byte_end":5211,"line_start":72,"line_end":72,"column_start":12,"column_end":14},"name":"at","qualname":"<BigFib>::at","value":"pub fn at<impl Into<BigUint>: Into<BigUint>>(impl Into<BigUint>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator with the first fibonacci number beeing the `nth` fibonacci\n number.\n","sig":null,"attributes":[{"value":"/ Create a new iterator with the first fibonacci number beeing the `nth` fibonacci","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5097,"byte_end":5181,"line_start":70,"line_end":70,"column_start":5,"column_end":89}},{"value":"/ number.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5186,"byte_end":5197,"line_start":71,"line_end":71,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6050,"byte_end":6069,"line_start":97,"line_end":97,"column_start":8,"column_end":27},"name":"recursive_fibonacci","qualname":"::numerics::fibonacci::recursive_fibonacci","value":"pub fn recursive_fibonacci(u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Calculate the `nth` fibonacci number using the classic recursive strategy.","sig":null,"attributes":[{"value":"/ Calculate the `nth` fibonacci number using the classic recursive strategy.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5551,"byte_end":5629,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5630,"byte_end":5633,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5634,"byte_end":5688,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5689,"byte_end":5743,"line_start":89,"line_end":89,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(n²)           | Ω(n)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5744,"byte_end":5801,"line_start":90,"line_end":90,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n²)           | Θ(n)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5802,"byte_end":5859,"line_start":91,"line_end":91,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(n²)           | O(n)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5860,"byte_end":5915,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5916,"byte_end":5919,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5920,"byte_end":5932,"line_start":94,"line_end":94,"column_start":1,"column_end":13}},{"value":"/ This function may panic on debug builds if the internal type (u128) and happens a","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5933,"byte_end":6018,"line_start":95,"line_end":95,"column_start":1,"column_end":86}},{"value":"/ operation overflow.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6019,"byte_end":6042,"line_start":96,"line_end":96,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6724,"byte_end":6741,"line_start":116,"line_end":116,"column_start":8,"column_end":25},"name":"dynamic_fibonacci","qualname":"::numerics::fibonacci::dynamic_fibonacci","value":"pub fn dynamic_fibonacci(u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Calculate the `nth` fibonacci number using the dynamic programming strategy.","sig":null,"attributes":[{"value":"/ Calculate the `nth` fibonacci number using the dynamic programming strategy.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6226,"byte_end":6306,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6307,"byte_end":6310,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6311,"byte_end":6365,"line_start":107,"line_end":107,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6366,"byte_end":6420,"line_start":108,"line_end":108,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(n)            | Ω(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6421,"byte_end":6477,"line_start":109,"line_end":109,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n)            | Θ(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6478,"byte_end":6534,"line_start":110,"line_end":110,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(n)            | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6535,"byte_end":6589,"line_start":111,"line_end":111,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6590,"byte_end":6593,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6594,"byte_end":6606,"line_start":113,"line_end":113,"column_start":1,"column_end":13}},{"value":"/ This function may panic on debug builds if the internal type (u128) and happens a","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6607,"byte_end":6692,"line_start":114,"line_end":114,"column_start":1,"column_end":86}},{"value":"/ operation overflow.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6693,"byte_end":6716,"line_start":115,"line_end":115,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7381,"byte_end":7404,"line_start":139,"line_end":139,"column_start":8,"column_end":31},"name":"fast_doubling_fibonacci","qualname":"::numerics::fibonacci::fast_doubling_fibonacci","value":"pub fn fast_doubling_fibonacci(u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Calculate the `nth` fibonacci number using the fast doubling algorithm.","sig":null,"attributes":[{"value":"/ Calculate the `nth` fibonacci number using the fast doubling algorithm.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6888,"byte_end":6963,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6964,"byte_end":6967,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":6968,"byte_end":7022,"line_start":130,"line_end":130,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7023,"byte_end":7077,"line_start":131,"line_end":131,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(log(n))       | Ω(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7078,"byte_end":7134,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(log(n))       | Θ(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7135,"byte_end":7191,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(log(n))       | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7192,"byte_end":7246,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7247,"byte_end":7250,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7251,"byte_end":7263,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"/ This function may panic on debug builds if the internal type (u128) and happens a","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7264,"byte_end":7349,"line_start":137,"line_end":137,"column_start":1,"column_end":86}},{"value":"/ operation overflow.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7350,"byte_end":7373,"line_start":138,"line_end":138,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":8272,"byte_end":8299,"line_start":166,"line_end":166,"column_start":8,"column_end":35},"name":"big_fast_doubling_fibonacci","qualname":"::numerics::fibonacci::big_fast_doubling_fibonacci","value":"pub fn big_fast_doubling_fibonacci<impl Into<BigUint>: Into<BigUint>>(impl Into<BigUint>)\n-> BigUint","parent":null,"children":[],"decl_id":null,"docs":" Calculate the `nth` fibonacci number using the fast doubling algorithm.","sig":null,"attributes":[{"value":"/ Calculate the `nth` fibonacci number using the fast doubling algorithm.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7785,"byte_end":7860,"line_start":155,"line_end":155,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7861,"byte_end":7864,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7865,"byte_end":7919,"line_start":157,"line_end":157,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7920,"byte_end":7974,"line_start":158,"line_end":158,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(log(n))       | Ω(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":7975,"byte_end":8031,"line_start":159,"line_end":159,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(log(n))       | Θ(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":8032,"byte_end":8088,"line_start":160,"line_end":160,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(log(n))       | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":8089,"byte_end":8143,"line_start":161,"line_end":161,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":8144,"byte_end":8147,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":8148,"byte_end":8160,"line_start":163,"line_end":163,"column_start":1,"column_end":13}},{"value":"/ This function may panic if `BigUint` type run out of allocation memory.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":8161,"byte_end":8236,"line_start":164,"line_end":164,"column_start":1,"column_end":76}},{"value":"cfg(feature = \"big_num\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":8237,"byte_end":8264,"line_start":165,"line_end":165,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":42},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"primorial","qualname":"::numerics::primorial","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":155},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67}],"decl_id":null,"docs":" Primorial\n","sig":null,"attributes":[{"value":"/ Primorial","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":10704,"byte_end":10717,"line_start":1,"line_end":1,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11127,"byte_end":11139,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"BigPrimorial","qualname":"::numerics::primorial::BigPrimorial","value":"BigPrimorial {  }","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"decl_id":null,"docs":" Primorial iterator using big numbers.","sig":null,"attributes":[{"value":"/ Primorial iterator using big numbers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":10778,"byte_end":10819,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":10820,"byte_end":10823,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":10824,"byte_end":10837,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/ Print the 100 first primorial numbers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":10838,"byte_end":10880,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":10881,"byte_end":10884,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":10885,"byte_end":10896,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ # use algos::numerics::BigPrimorial;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":10897,"byte_end":10937,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":10938,"byte_end":10955,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/ BigPrimorial::new().enumerate().take(100).for_each(|(i, v)| println!(\"{}#: {}\", i, v));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":10956,"byte_end":11047,"line_start":13,"line_end":13,"column_start":1,"column_end":92}},{"value":"/ # }","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11048,"byte_end":11055,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11056,"byte_end":11063,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"big_num\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11064,"byte_end":11091,"line_start":16,"line_end":16,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11508,"byte_end":11511,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<BigPrimorial>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator starting at the first number of the sequence.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator starting at the first number of the sequence.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11424,"byte_end":11496,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11691,"byte_end":11693,"line_start":35,"line_end":35,"column_start":12,"column_end":14},"name":"at","qualname":"<BigPrimorial>::at","value":"pub fn at<impl Into<u128>: Into<u128>>(impl Into<u128>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator with the first factorial number beeing the `nth` factorial\n number.\n","sig":null,"attributes":[{"value":"/ Create a new iterator with the first factorial number beeing the `nth` factorial","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11579,"byte_end":11663,"line_start":33,"line_end":33,"column_start":5,"column_end":89}},{"value":"/ number.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11668,"byte_end":11679,"line_start":34,"line_end":34,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12314,"byte_end":12327,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"primorial_big","qualname":"::numerics::primorial::primorial_big","value":"pub fn primorial_big<impl Into<BigUint>: Into<BigUint>>(impl Into<BigUint>)\n-> BigUint","parent":null,"children":[],"decl_id":null,"docs":" Return the nth primorial number using big numbers.","sig":null,"attributes":[{"value":"/ Return the nth primorial number using big numbers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12138,"byte_end":12192,"line_start":57,"line_end":57,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12193,"byte_end":12196,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12197,"byte_end":12209,"line_start":59,"line_end":59,"column_start":1,"column_end":13}},{"value":"/ This function may panic if there the computer run out of memory.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12210,"byte_end":12278,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"cfg(feature = \"big_num\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12279,"byte_end":12306,"line_start":61,"line_end":61,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12672,"byte_end":12695,"line_start":73,"line_end":73,"column_start":8,"column_end":31},"name":"recursive_primorial_big","qualname":"::numerics::primorial::recursive_primorial_big","value":"pub fn recursive_primorial_big<impl Into<BigUint>: Into<BigUint>>(impl Into<BigUint>)\n-> BigUint","parent":null,"children":[],"decl_id":null,"docs":" Return the nth primorial number using big numbers.","sig":null,"attributes":[{"value":"/ Return the nth primorial number using big numbers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12496,"byte_end":12550,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12551,"byte_end":12554,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12555,"byte_end":12567,"line_start":70,"line_end":70,"column_start":1,"column_end":13}},{"value":"/ This function may panic if there the computer run out of memory.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12568,"byte_end":12636,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"cfg(feature = \"big_num\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":12637,"byte_end":12664,"line_start":72,"line_end":72,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":59},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13111,"byte_end":13123,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"is_prime_big","qualname":"::numerics::primorial::is_prime_big","value":"pub fn is_prime_big<impl Into<BigUint>: Into<BigUint>>(impl Into<BigUint>)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if given `num`ber is a prime number.\n","sig":null,"attributes":[{"value":"/ Check if given `num`ber is a prime number.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13029,"byte_end":13075,"line_start":88,"line_end":88,"column_start":1,"column_end":47}},{"value":"cfg(feature = \"big_num\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13076,"byte_end":13103,"line_start":89,"line_end":89,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":62},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13593,"byte_end":13602,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"primorial","qualname":"::numerics::primorial::primorial","value":"pub fn primorial(u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Return the nth primorial number using the biggest integer primitive.","sig":null,"attributes":[{"value":"/ Return the nth primorial number using the biggest integer primitive.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13374,"byte_end":13446,"line_start":101,"line_end":101,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13447,"byte_end":13450,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13451,"byte_end":13463,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/ This function may panic in debug mode if there is a operation with overflow. It will","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13464,"byte_end":13552,"line_start":104,"line_end":104,"column_start":1,"column_end":89}},{"value":"/ happen when `index` ≥ 103.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13553,"byte_end":13585,"line_start":105,"line_end":105,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":14126,"byte_end":14145,"line_start":116,"line_end":116,"column_start":8,"column_end":27},"name":"recursive_primorial","qualname":"::numerics::primorial::recursive_primorial","value":"pub fn recursive_primorial(u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Return the nth primorial number using the biggest integer primitive.","sig":null,"attributes":[{"value":"/ Return the nth primorial number using the biggest integer primitive.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13676,"byte_end":13748,"line_start":108,"line_end":108,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13749,"byte_end":13752,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13753,"byte_end":13765,"line_start":110,"line_end":110,"column_start":1,"column_end":13}},{"value":"/ This function may panic in debug mode if there is a operation with overflow. It will","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13766,"byte_end":13854,"line_start":111,"line_end":111,"column_start":1,"column_end":89}},{"value":"/ happen when `index` ≥ 103.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13855,"byte_end":13887,"line_start":112,"line_end":112,"column_start":1,"column_end":31}},{"value":"/ This also may panic it it reachest stack overflow due it's recursive nature and Rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13888,"byte_end":13976,"line_start":113,"line_end":113,"column_start":1,"column_end":89}},{"value":"/ lack of tail call optimization. _Note that there is a change that LLVM generate a code","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":13977,"byte_end":14067,"line_start":114,"line_end":114,"column_start":1,"column_end":91}},{"value":"/ that this doesn't happen when in release mode_","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":14068,"byte_end":14118,"line_start":115,"line_end":115,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":14367,"byte_end":14375,"line_start":125,"line_end":125,"column_start":8,"column_end":16},"name":"is_prime","qualname":"::numerics::primorial::is_prime","value":"pub fn is_prime(u128) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if given `num`ber is a prime number.\n","sig":null,"attributes":[{"value":"/ Check if given `num`ber is a prime number.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":14313,"byte_end":14359,"line_start":124,"line_end":124,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":14599,"byte_end":14604,"line_start":134,"line_end":134,"column_start":8,"column_end":13},"name":"isqrt","qualname":"::numerics::primorial::isqrt","value":"pub fn isqrt(u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Calculate integer sqrt aproximation for u128.\n","sig":null,"attributes":[{"value":"/ Calculate integer sqrt aproximation for u128.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":14499,"byte_end":14548,"line_start":132,"line_end":132,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":72},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pattern","qualname":"::pattern","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85}],"decl_id":null,"docs":" A module for using pattern matching algorithms.\n","sig":null,"attributes":[{"value":"/ A module for using pattern matching algorithms.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":17914,"byte_end":17965,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18636,"byte_end":18646,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"bruteforce","qualname":"::pattern::bruteforce","value":"pub fn bruteforce(&[u8], &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" **Brute Force:** Search for the pattern in the `find` parameter in a slice.","sig":null,"attributes":[{"value":"/ **Brute Force:** Search for the pattern in the `find` parameter in a slice.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":17967,"byte_end":18046,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18047,"byte_end":18050,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It returns `Some` holding the index of the first character of `find` that was found","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18051,"byte_end":18138,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/ or `None` if not find.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18139,"byte_end":18165,"line_start":6,"line_end":6,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18166,"byte_end":18169,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18170,"byte_end":18224,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18225,"byte_end":18279,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(m*(n-m+1))    |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18280,"byte_end":18335,"line_start":10,"line_end":10,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(m*(n-m+1))    |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18336,"byte_end":18391,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(m*(n-m+1))    | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18392,"byte_end":18446,"line_start":12,"line_end":12,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18447,"byte_end":18450,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18451,"byte_end":18464,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18465,"byte_end":18476,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ use algos::pattern;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18477,"byte_end":18500,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18501,"byte_end":18504,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let p = b\"ATCGGATTTCAGAAGCT\";","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18505,"byte_end":18538,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18539,"byte_end":18542,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let find = pattern::bruteforce(p, b\"TTT\");","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18543,"byte_end":18589,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(find, Some(6));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18590,"byte_end":18620,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18621,"byte_end":18628,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19573,"byte_end":19583,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"karp_rabin","qualname":"::pattern::karp_rabin","value":"pub fn karp_rabin(&[u8], &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" **Karp-Rabin:** Search for the pattern in the `find` parameter in a slice.","sig":null,"attributes":[{"value":"/ **Karp-Rabin:** Search for the pattern in the `find` parameter in a slice.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18905,"byte_end":18983,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18984,"byte_end":18987,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ It returns `Some` holding the index of the first character of `find` that was found","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":18988,"byte_end":19075,"line_start":36,"line_end":36,"column_start":1,"column_end":88}},{"value":"/ or `None` if not find.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19076,"byte_end":19102,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19103,"byte_end":19106,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19107,"byte_end":19161,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19162,"byte_end":19216,"line_start":40,"line_end":40,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(n+m)          |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19217,"byte_end":19272,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n+m)          |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19273,"byte_end":19328,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(m*(n+m))      | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19329,"byte_end":19383,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19384,"byte_end":19387,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19388,"byte_end":19401,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19402,"byte_end":19413,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ use algos::pattern;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19414,"byte_end":19437,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19438,"byte_end":19441,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let p = b\"ATCGGATTTCAGAAGCT\";","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19442,"byte_end":19475,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19476,"byte_end":19479,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let find = pattern::karp_rabin(p, b\"TTT\");","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19480,"byte_end":19526,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(find, Some(6));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19527,"byte_end":19557,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":19558,"byte_end":19565,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21578,"byte_end":21589,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"boyer_moore","qualname":"::pattern::boyer_moore","value":"pub fn boyer_moore(&[u8], &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" **Boyer-Moore:** Search for the pattern in the `find` parameter in a slice.","sig":null,"attributes":[{"value":"/ **Boyer-Moore:** Search for the pattern in the `find` parameter in a slice.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":20859,"byte_end":20938,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":20939,"byte_end":20942,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ It returns `Some` holding the index of the first character of `find` that was found","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":20943,"byte_end":21030,"line_start":95,"line_end":95,"column_start":1,"column_end":88}},{"value":"/ or `None` if not find.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21031,"byte_end":21057,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21058,"byte_end":21061,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21062,"byte_end":21116,"line_start":98,"line_end":98,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21117,"byte_end":21171,"line_start":99,"line_end":99,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(n/m)          |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21172,"byte_end":21227,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n+m)          |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21228,"byte_end":21283,"line_start":101,"line_end":101,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(nm)           | O(m+δ)           |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21284,"byte_end":21339,"line_start":102,"line_end":102,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21340,"byte_end":21343,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21344,"byte_end":21347,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ **Obs.:** δ is the max size of u8.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21348,"byte_end":21387,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21388,"byte_end":21391,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21392,"byte_end":21405,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21406,"byte_end":21417,"line_start":108,"line_end":108,"column_start":1,"column_end":12}},{"value":"/ use algos::pattern;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21418,"byte_end":21441,"line_start":109,"line_end":109,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21442,"byte_end":21445,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ let p = b\"ATCGGATTTCAGAAGCT\";","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21446,"byte_end":21479,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21480,"byte_end":21483,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ let find = pattern::boyer_moore(p, b\"TTT\");","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21484,"byte_end":21531,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(find, Some(6));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21532,"byte_end":21562,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":21563,"byte_end":21570,"line_start":115,"line_end":115,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23229,"byte_end":23237,"line_start":171,"line_end":171,"column_start":8,"column_end":16},"name":"horspool","qualname":"::pattern::horspool","value":"pub fn horspool(&[u8], &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" **Horspool:** Search for the pattern in the `find` parameter in a slice.","sig":null,"attributes":[{"value":"/ **Horspool:** Search for the pattern in the `find` parameter in a slice.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22460,"byte_end":22536,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22537,"byte_end":22540,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ It returns `Some` holding the index of the first character of `find` that was found","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22541,"byte_end":22628,"line_start":148,"line_end":148,"column_start":1,"column_end":88}},{"value":"/ or `None` if not find.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22629,"byte_end":22655,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22656,"byte_end":22659,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ It is a variation of the Boyer-Moore algorithm.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22660,"byte_end":22711,"line_start":151,"line_end":151,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22712,"byte_end":22715,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22716,"byte_end":22770,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22771,"byte_end":22825,"line_start":154,"line_end":154,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(n/m)          |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22826,"byte_end":22881,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n+m)          |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22882,"byte_end":22937,"line_start":156,"line_end":156,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(nm)           | O(δ)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22938,"byte_end":22993,"line_start":157,"line_end":157,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22994,"byte_end":22997,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":22998,"byte_end":23001,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ **Obs.:** δ is the max size of u8.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23002,"byte_end":23041,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23042,"byte_end":23045,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23046,"byte_end":23059,"line_start":162,"line_end":162,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23060,"byte_end":23071,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/ use algos::pattern;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23072,"byte_end":23095,"line_start":164,"line_end":164,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23096,"byte_end":23099,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let p = b\"ATCGGATTTCAGAAGCT\";","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23100,"byte_end":23133,"line_start":166,"line_end":166,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23134,"byte_end":23137,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ let find = pattern::horspool(p, b\"TTT\");","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23138,"byte_end":23182,"line_start":168,"line_end":168,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(find, Some(6));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23183,"byte_end":23213,"line_start":169,"line_end":169,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":23214,"byte_end":23221,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25856,"byte_end":25870,"line_start":266,"line_end":266,"column_start":8,"column_end":22},"name":"quick_matching","qualname":"::pattern::quick_matching","value":"pub fn quick_matching(&[u8], &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" **Quick:** Search for the pattern in the `find` parameter in a slice.","sig":null,"attributes":[{"value":"/ **Quick:** Search for the pattern in the `find` parameter in a slice.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25079,"byte_end":25152,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25153,"byte_end":25156,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ It returns `Some` holding the index of the first character of `find` that was found","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25157,"byte_end":25244,"line_start":243,"line_end":243,"column_start":1,"column_end":88}},{"value":"/ or `None` if not find.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25245,"byte_end":25271,"line_start":244,"line_end":244,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25272,"byte_end":25275,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ It is a simplification of the Boyer-Moore algorithm.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25276,"byte_end":25332,"line_start":246,"line_end":246,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25333,"byte_end":25336,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25337,"byte_end":25391,"line_start":248,"line_end":248,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25392,"byte_end":25446,"line_start":249,"line_end":249,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(n/m)          |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25447,"byte_end":25502,"line_start":250,"line_end":250,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n+m)          |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25503,"byte_end":25558,"line_start":251,"line_end":251,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(nm)           | O(δ)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25559,"byte_end":25614,"line_start":252,"line_end":252,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25615,"byte_end":25618,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25619,"byte_end":25622,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ **Obs.:** δ is the max size of u8.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25623,"byte_end":25662,"line_start":255,"line_end":255,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25663,"byte_end":25666,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25667,"byte_end":25680,"line_start":257,"line_end":257,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25681,"byte_end":25692,"line_start":258,"line_end":258,"column_start":1,"column_end":12}},{"value":"/ use algos::pattern;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25693,"byte_end":25716,"line_start":259,"line_end":259,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25717,"byte_end":25720,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ let p = b\"ATCGGATTTCAGAAGCT\";","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25721,"byte_end":25754,"line_start":261,"line_end":261,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25755,"byte_end":25758,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ let find = pattern::quick_matching(p, b\"TTT\");","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25759,"byte_end":25809,"line_start":263,"line_end":263,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(find, Some(6));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25810,"byte_end":25840,"line_start":264,"line_end":264,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/pattern.rs","byte_start":25841,"byte_end":25848,"line_start":265,"line_end":265,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"search","qualname":"::search","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93}],"decl_id":null,"docs":" A module for using searching algorithms.","sig":null,"attributes":[{"value":"/ A module for using searching algorithms.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29108,"byte_end":29152,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29153,"byte_end":29156,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The array **must** be crescent ordered.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29157,"byte_end":29200,"line_start":3,"line_end":3,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":87},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30141,"byte_end":30147,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"linear","qualname":"::search::linear","value":"pub fn linear<T: PartialOrd>(&[T], &T) -> Result<usize, usize>","parent":null,"children":[],"decl_id":null,"docs":" **Linear Search:** Search for the value `x` in an array.","sig":null,"attributes":[{"value":"/ **Linear Search:** Search for the value `x` in an array.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29202,"byte_end":29262,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29263,"byte_end":29266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ If the value is found then `Ok` is returned, containing the index of the matching","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29267,"byte_end":29352,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/ element; if the value is not found then `Err` is returned, containing the index where","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29353,"byte_end":29442,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ a matching element could be inserted while maintaining sorted order.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29443,"byte_end":29515,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29516,"byte_end":29519,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Returns `Err` holding the last iterator if `x` not found and `v[i] > x`.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29520,"byte_end":29596,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29597,"byte_end":29600,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29601,"byte_end":29604,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29605,"byte_end":29659,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29660,"byte_end":29714,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(1)            |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29715,"byte_end":29770,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n)            |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29771,"byte_end":29826,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(n)            | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29827,"byte_end":29881,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29882,"byte_end":29885,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29886,"byte_end":29899,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29900,"byte_end":29911,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ use algos::search;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29912,"byte_end":29934,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29935,"byte_end":29938,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let v = [1, 3, 4, 8, 11, 17, 23];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29939,"byte_end":29976,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29977,"byte_end":29980,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let find = search::linear(&v, &11);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":29981,"byte_end":30020,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(find, Ok(4));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30021,"byte_end":30049,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30050,"byte_end":30053,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let find2 = search::linear(&v, &19);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30054,"byte_end":30094,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(find2, Err(6));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30095,"byte_end":30125,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30126,"byte_end":30133,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31299,"byte_end":31305,"line_start":70,"line_end":70,"column_start":8,"column_end":14},"name":"binary","qualname":"::search::binary","value":"pub fn binary<T: PartialOrd>(&[T], &T) -> Result<usize, usize>","parent":null,"children":[],"decl_id":null,"docs":" **Binary Search:** Search for the value `x` in an array.","sig":null,"attributes":[{"value":"/ **Binary Search:** Search for the value `x` in an array.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30375,"byte_end":30435,"line_start":43,"line_end":43,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30436,"byte_end":30439,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the value is found then `Ok` is returned, containing the index of the matching","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30440,"byte_end":30525,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/ element; if the value is not found then `Err` is returned, containing the index where","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30526,"byte_end":30615,"line_start":46,"line_end":46,"column_start":1,"column_end":90}},{"value":"/ a matching element could be inserted while maintaining sorted order.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30616,"byte_end":30688,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30689,"byte_end":30692,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Returns `Err` holding the leftmost term if `x` not found.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30693,"byte_end":30754,"line_start":49,"line_end":49,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30755,"byte_end":30758,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30759,"byte_end":30762,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30763,"byte_end":30817,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30818,"byte_end":30872,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(1)            |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30873,"byte_end":30928,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(log(n))       |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30929,"byte_end":30984,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(log(n))       | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":30985,"byte_end":31039,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31040,"byte_end":31043,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31044,"byte_end":31057,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31058,"byte_end":31069,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ use algos::search;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31070,"byte_end":31092,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31093,"byte_end":31096,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let v = [1, 3, 4, 8, 11, 17, 23];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31097,"byte_end":31134,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31135,"byte_end":31138,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let find = search::binary(&v, &11);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31139,"byte_end":31178,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(find, Ok(4));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31179,"byte_end":31207,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31208,"byte_end":31211,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let find2 = search::binary(&v, &19);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31212,"byte_end":31252,"line_start":67,"line_end":67,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(find2, Err(6));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31253,"byte_end":31283,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31284,"byte_end":31291,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":91},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32790,"byte_end":32801,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"exponential","qualname":"::search::exponential","value":"pub fn exponential<T: PartialOrd>(&[T], &T) -> Result<usize, usize>","parent":null,"children":[],"decl_id":null,"docs":" **Exponential Search:** Search for the value `x` in an array.","sig":null,"attributes":[{"value":"/ **Exponential Search:** Search for the value `x` in an array.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31809,"byte_end":31874,"line_start":88,"line_end":88,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31875,"byte_end":31878,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ If the value is found then `Ok` is returned, containing the index of the matching","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31879,"byte_end":31964,"line_start":90,"line_end":90,"column_start":1,"column_end":86}},{"value":"/ element; if the value is not found then `Err` is returned, containing the index where","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":31965,"byte_end":32054,"line_start":91,"line_end":91,"column_start":1,"column_end":90}},{"value":"/ a matching element could be inserted while maintaining sorted order.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32055,"byte_end":32127,"line_start":92,"line_end":92,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32128,"byte_end":32131,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Returns `Err` holding the leftmost term if `x` not found.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32132,"byte_end":32193,"line_start":94,"line_end":94,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32194,"byte_end":32197,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ **Obs.:** Variation of binary search.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32198,"byte_end":32239,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32240,"byte_end":32243,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32244,"byte_end":32298,"line_start":98,"line_end":98,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32299,"byte_end":32353,"line_start":99,"line_end":99,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(1)            |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32354,"byte_end":32409,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(log(n))       |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32410,"byte_end":32465,"line_start":101,"line_end":101,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(log(n))       | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32466,"byte_end":32520,"line_start":102,"line_end":102,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32521,"byte_end":32524,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32525,"byte_end":32538,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32539,"byte_end":32550,"line_start":105,"line_end":105,"column_start":1,"column_end":12}},{"value":"/ use algos::search;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32551,"byte_end":32573,"line_start":106,"line_end":106,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32574,"byte_end":32577,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let v = [1, 3, 4, 8, 11, 17, 23];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32578,"byte_end":32615,"line_start":108,"line_end":108,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32616,"byte_end":32619,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let find = search::exponential(&v, &11);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32620,"byte_end":32664,"line_start":110,"line_end":110,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(find, Ok(4));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32665,"byte_end":32693,"line_start":111,"line_end":111,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32694,"byte_end":32697,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ let find2 = search::exponential(&v, &19);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32698,"byte_end":32743,"line_start":113,"line_end":113,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(find2, Err(6));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32744,"byte_end":32774,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":32775,"byte_end":32782,"line_start":115,"line_end":115,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34295,"byte_end":34304,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"fibonacci","qualname":"::search::fibonacci","value":"pub fn fibonacci<T: PartialOrd>(&[T], &T) -> Result<usize, usize>","parent":null,"children":[],"decl_id":null,"docs":" **Fibonacci Search:** Search for the value `x` in an array.","sig":null,"attributes":[{"value":"/ **Fibonacci Search:** Search for the value `x` in an array.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33382,"byte_end":33445,"line_start":142,"line_end":142,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33446,"byte_end":33449,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ If the value is found then `Ok` is returned, containing the index of the matching","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33450,"byte_end":33535,"line_start":144,"line_end":144,"column_start":1,"column_end":86}},{"value":"/ element; if the value is not found then `Err` is returned, containing the index where","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33536,"byte_end":33625,"line_start":145,"line_end":145,"column_start":1,"column_end":90}},{"value":"/ a matching element could be inserted while maintaining sorted order.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33626,"byte_end":33698,"line_start":146,"line_end":146,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33699,"byte_end":33702,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33703,"byte_end":33706,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ **Obs.:** Variation of binary search.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33707,"byte_end":33748,"line_start":149,"line_end":149,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33749,"byte_end":33752,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33753,"byte_end":33807,"line_start":151,"line_end":151,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33808,"byte_end":33862,"line_start":152,"line_end":152,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(1)            |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33863,"byte_end":33918,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(log(n))       |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33919,"byte_end":33974,"line_start":154,"line_end":154,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(log(n))       | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":33975,"byte_end":34029,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34030,"byte_end":34033,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34034,"byte_end":34047,"line_start":157,"line_end":157,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34048,"byte_end":34059,"line_start":158,"line_end":158,"column_start":1,"column_end":12}},{"value":"/ use algos::search;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34060,"byte_end":34082,"line_start":159,"line_end":159,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34083,"byte_end":34086,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ let v = [1, 3, 4, 8, 11, 17, 23];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34087,"byte_end":34124,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34125,"byte_end":34128,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let find = search::fibonacci(&v, &11);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34129,"byte_end":34171,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(find, Ok(4));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34172,"byte_end":34200,"line_start":164,"line_end":164,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34201,"byte_end":34204,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let find2 = search::fibonacci(&v, &19);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34205,"byte_end":34248,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(find2, Err(3));","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34249,"byte_end":34279,"line_start":167,"line_end":167,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/search.rs","byte_start":34280,"byte_end":34287,"line_start":168,"line_end":168,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sort","qualname":"::sort","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126}],"decl_id":null,"docs":" A module for using sorting algorithms.","sig":null,"attributes":[{"value":"/ A module for using sorting algorithms.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":36715,"byte_end":36757,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":36758,"byte_end":36761,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ It contains all major sorting algorithms.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":36762,"byte_end":36807,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37431,"byte_end":37440,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"selection","qualname":"::sort::selection","value":"pub fn selection<T: PartialOrd, C: Fn(&T, &T) -> bool>(&mut [T], &C)","parent":null,"children":[],"decl_id":null,"docs":" **Selection Sort:** Sort `v` slice according to the way you define the `cmp`\n parameter.","sig":null,"attributes":[{"value":"/ **Selection Sort:** Sort `v` slice according to the way you define the `cmp`","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":36848,"byte_end":36928,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ parameter.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":36929,"byte_end":36943,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":36944,"byte_end":36947,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This sort is stable.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":36948,"byte_end":36972,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":36973,"byte_end":36976,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":36977,"byte_end":37031,"line_start":12,"line_end":12,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37032,"byte_end":37086,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(n²)           |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37087,"byte_end":37143,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n²)           |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37144,"byte_end":37200,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(n²)           | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37201,"byte_end":37256,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37257,"byte_end":37260,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37261,"byte_end":37274,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37275,"byte_end":37286,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ use algos::sort;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37287,"byte_end":37307,"line_start":20,"line_end":20,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37308,"byte_end":37311,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut v = [9, 3, 5, 7, 8, 7];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37312,"byte_end":37347,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ // Crescent sorting","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37348,"byte_end":37371,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/ sort::selection(&mut v, &|v, b| v < b);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37372,"byte_end":37415,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37416,"byte_end":37423,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38326,"byte_end":38332,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"bubble","qualname":"::sort::bubble","value":"pub fn bubble<T: PartialOrd, C: Fn(&T, &T) -> bool>(&mut [T], &C)","parent":null,"children":[],"decl_id":null,"docs":" **Bubble Sort:** Sort `v` slice according to the way you define the `cmp` parameter.","sig":null,"attributes":[{"value":"/ **Bubble Sort:** Sort `v` slice according to the way you define the `cmp` parameter.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37754,"byte_end":37842,"line_start":40,"line_end":40,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37843,"byte_end":37846,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This sort is stable.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37847,"byte_end":37871,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37872,"byte_end":37875,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37876,"byte_end":37930,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37931,"byte_end":37985,"line_start":45,"line_end":45,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(n)            |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":37986,"byte_end":38041,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n²)           |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38042,"byte_end":38098,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(n²)           | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38099,"byte_end":38154,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38155,"byte_end":38158,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38159,"byte_end":38172,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38173,"byte_end":38184,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ use algos::sort;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38185,"byte_end":38205,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38206,"byte_end":38209,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let mut v = [9, 3, 5, 7, 8, 7];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38210,"byte_end":38245,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/ // Crescent sorting","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38246,"byte_end":38269,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/ sort::bubble(&mut v, &|v, b| v < b);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38270,"byte_end":38310,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38311,"byte_end":38318,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39172,"byte_end":39180,"line_start":87,"line_end":87,"column_start":8,"column_end":16},"name":"cocktail","qualname":"::sort::cocktail","value":"pub fn cocktail<T: PartialOrd, C: Fn(&T, &T) -> bool>(&mut [T], &C)","parent":null,"children":[],"decl_id":null,"docs":" **Cocktail Sort:** Sort `v` slice according to the way you define the `cmp` parameter.\n It's a variation of Bubble Sort.","sig":null,"attributes":[{"value":"/ **Cocktail Sort:** Sort `v` slice according to the way you define the `cmp` parameter.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38559,"byte_end":38649,"line_start":68,"line_end":68,"column_start":1,"column_end":91}},{"value":"/ It's a variation of Bubble Sort.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38650,"byte_end":38686,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38687,"byte_end":38690,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This sort is stable.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38691,"byte_end":38715,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38716,"byte_end":38719,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38720,"byte_end":38774,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38775,"byte_end":38829,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(n)            |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38830,"byte_end":38885,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n²)           |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38886,"byte_end":38942,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(n²)           | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38943,"byte_end":38998,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":38999,"byte_end":39002,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39003,"byte_end":39016,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39017,"byte_end":39028,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ use algos::sort;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39029,"byte_end":39049,"line_start":81,"line_end":81,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39050,"byte_end":39053,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let mut v = [9, 3, 5, 7, 8, 7];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39054,"byte_end":39089,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/ // Crescent sorting","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39090,"byte_end":39113,"line_start":84,"line_end":84,"column_start":1,"column_end":24}},{"value":"/ sort::cocktail(&mut v, &|v, b| v < b);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39114,"byte_end":39156,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39157,"byte_end":39164,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40412,"byte_end":40421,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"insection","qualname":"::sort::insection","value":"pub fn insection<T: PartialOrd, C: Fn(&T, &T) -> bool>(&mut [T], &C)","parent":null,"children":[],"decl_id":null,"docs":" **Insection Sort:** Sort `v` slice according to the way you define the `cmp`\n parameter.","sig":null,"attributes":[{"value":"/ **Insection Sort:** Sort `v` slice according to the way you define the `cmp`","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39830,"byte_end":39910,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ parameter.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39911,"byte_end":39925,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39926,"byte_end":39929,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This sort is stable.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39930,"byte_end":39954,"line_start":119,"line_end":119,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39955,"byte_end":39958,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":39959,"byte_end":40013,"line_start":121,"line_end":121,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40014,"byte_end":40068,"line_start":122,"line_end":122,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(n)            |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40069,"byte_end":40124,"line_start":123,"line_end":123,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(n²)           |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40125,"byte_end":40181,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(n²)           | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40182,"byte_end":40237,"line_start":125,"line_end":125,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40238,"byte_end":40241,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40242,"byte_end":40255,"line_start":127,"line_end":127,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40256,"byte_end":40267,"line_start":128,"line_end":128,"column_start":1,"column_end":12}},{"value":"/ use algos::sort;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40268,"byte_end":40288,"line_start":129,"line_end":129,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40289,"byte_end":40292,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let mut v = [9, 3, 5, 7, 8, 7];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40293,"byte_end":40328,"line_start":131,"line_end":131,"column_start":1,"column_end":36}},{"value":"/ // Crescent sorting","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40329,"byte_end":40352,"line_start":132,"line_end":132,"column_start":1,"column_end":24}},{"value":"/ sort::insection(&mut v, &|v, b| v < b);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40353,"byte_end":40396,"line_start":133,"line_end":133,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40397,"byte_end":40404,"line_start":134,"line_end":134,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":111},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":41216,"byte_end":41221,"line_start":163,"line_end":163,"column_start":8,"column_end":13},"name":"merge","qualname":"::sort::merge","value":"pub fn merge<T: Copy + PartialOrd, C: Fn(&T, &T) -> bool>(&mut [T], &C)","parent":null,"children":[],"decl_id":null,"docs":" **Merge Sort:** Sort `v` slice according to the way you define the `cmp` parameter.","sig":null,"attributes":[{"value":"/ **Merge Sort:** Sort `v` slice according to the way you define the `cmp` parameter.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40648,"byte_end":40735,"line_start":145,"line_end":145,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40736,"byte_end":40739,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This sort is stable.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40740,"byte_end":40764,"line_start":147,"line_end":147,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40765,"byte_end":40768,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40769,"byte_end":40823,"line_start":149,"line_end":149,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40824,"byte_end":40878,"line_start":150,"line_end":150,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(nlog(n))      |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40879,"byte_end":40934,"line_start":151,"line_end":151,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(nlog(n))      |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40935,"byte_end":40990,"line_start":152,"line_end":152,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(nlog(n))      | O(n)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":40991,"byte_end":41045,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":41046,"byte_end":41049,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":41050,"byte_end":41063,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":41064,"byte_end":41075,"line_start":156,"line_end":156,"column_start":1,"column_end":12}},{"value":"/ use algos::sort;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":41076,"byte_end":41096,"line_start":157,"line_end":157,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":41097,"byte_end":41100,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let mut v = [9, 3, 5, 7, 8, 7];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":41101,"byte_end":41136,"line_start":159,"line_end":159,"column_start":1,"column_end":36}},{"value":"/ // Crescent sorting","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":41137,"byte_end":41160,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ sort::merge(&mut v, &|v, b| v < b);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":41161,"byte_end":41200,"line_start":161,"line_end":161,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":41201,"byte_end":41208,"line_start":162,"line_end":162,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42986,"byte_end":42991,"line_start":224,"line_end":224,"column_start":8,"column_end":13},"name":"quick","qualname":"::sort::quick","value":"pub fn quick<T: Copy + PartialOrd, C: Fn(&T, &T) -> bool>(&mut [T], &C)","parent":null,"children":[],"decl_id":null,"docs":" **Quick Sort:** Sort `v` slice according to the way you define the `cmp` parameter.","sig":null,"attributes":[{"value":"/ **Quick Sort:** Sort `v` slice according to the way you define the `cmp` parameter.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42415,"byte_end":42502,"line_start":206,"line_end":206,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42503,"byte_end":42506,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ This sort is unstable.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42507,"byte_end":42533,"line_start":208,"line_end":208,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42534,"byte_end":42537,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42538,"byte_end":42592,"line_start":210,"line_end":210,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42593,"byte_end":42647,"line_start":211,"line_end":211,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(nlog(n))      |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42648,"byte_end":42703,"line_start":212,"line_end":212,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(nlog(n))      |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42704,"byte_end":42759,"line_start":213,"line_end":213,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(n²)           | O(log(n))        |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42760,"byte_end":42815,"line_start":214,"line_end":214,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42816,"byte_end":42819,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42820,"byte_end":42833,"line_start":216,"line_end":216,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42834,"byte_end":42845,"line_start":217,"line_end":217,"column_start":1,"column_end":12}},{"value":"/ use algos::sort;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42846,"byte_end":42866,"line_start":218,"line_end":218,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42867,"byte_end":42870,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ let mut v = [9, 3, 5, 7, 8, 7];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42871,"byte_end":42906,"line_start":220,"line_end":220,"column_start":1,"column_end":36}},{"value":"/ // Crescent sorting","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42907,"byte_end":42930,"line_start":221,"line_end":221,"column_start":1,"column_end":24}},{"value":"/ sort::quick(&mut v, &|v, b| v < b);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42931,"byte_end":42970,"line_start":222,"line_end":222,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":42971,"byte_end":42978,"line_start":223,"line_end":223,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44437,"byte_end":44441,"line_start":272,"line_end":272,"column_start":8,"column_end":12},"name":"heap","qualname":"::sort::heap","value":"pub fn heap<T: Copy + PartialOrd, C: Fn(&T, &T) -> bool>(&mut [T], &C)","parent":null,"children":[],"decl_id":null,"docs":" **Heap Sort:** Sort `v` slice according to the way you define the `cmp` parameter.","sig":null,"attributes":[{"value":"/ **Heap Sort:** Sort `v` slice according to the way you define the `cmp` parameter.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":43869,"byte_end":43955,"line_start":254,"line_end":254,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":43956,"byte_end":43959,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ This sort is unstable.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":43960,"byte_end":43986,"line_start":256,"line_end":256,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":43987,"byte_end":43990,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ |   Case    | Time complexity | Space complexity |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":43991,"byte_end":44045,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/ |:----------|:---------------:|:----------------:|","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44046,"byte_end":44100,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/ | Best:     | Ω(nlog(n))      |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44101,"byte_end":44156,"line_start":260,"line_end":260,"column_start":1,"column_end":55}},{"value":"/ | Avrg:     | Θ(nlog(n))      |                  |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44157,"byte_end":44212,"line_start":261,"line_end":261,"column_start":1,"column_end":55}},{"value":"/ | Worst:    | O(nlog(n))      | O(1)             |","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44213,"byte_end":44267,"line_start":262,"line_end":262,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44268,"byte_end":44271,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44272,"byte_end":44285,"line_start":264,"line_end":264,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44286,"byte_end":44297,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/ use algos::sort;","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44298,"byte_end":44318,"line_start":266,"line_end":266,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44319,"byte_end":44322,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ let mut v = [9, 3, 5, 7, 8, 7];","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44323,"byte_end":44358,"line_start":268,"line_end":268,"column_start":1,"column_end":36}},{"value":"/ // Crescent sorting","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44359,"byte_end":44382,"line_start":269,"line_end":269,"column_start":1,"column_end":24}},{"value":"/ sort::heap(&mut v, &|v, b| v < b);","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44383,"byte_end":44421,"line_start":270,"line_end":270,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/sort.rs","byte_start":44422,"byte_end":44429,"line_start":271,"line_end":271,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1773,"byte_end":1785,"line_start":33,"line_end":33,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":2231,"byte_end":2243,"line_start":45,"line_end":45,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3957,"byte_end":3960,"line_start":29,"line_end":29,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4295,"byte_end":4298,"line_start":38,"line_end":38,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4930,"byte_end":4936,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5334,"byte_end":5340,"line_start":76,"line_end":76,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11405,"byte_end":11417,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11872,"byte_end":11884,"line_start":42,"line_end":42,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":536,"byte_end":544,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","byte_start":684,"byte_end":693,"line_start":4,"line_end":4,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","byte_start":703,"byte_end":712,"line_start":5,"line_end":5,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics.rs","byte_start":722,"byte_end":731,"line_start":6,"line_end":6,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":42}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":554,"byte_end":561,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":72}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":571,"byte_end":577,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/lib.rs","byte_start":587,"byte_end":591,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":95}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":1773,"byte_end":1785,"line_start":33,"line_end":33,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/factorial.rs","byte_start":2231,"byte_end":2243,"line_start":45,"line_end":45,"column_start":19,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":129},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":3957,"byte_end":3960,"line_start":29,"line_end":29,"column_start":6,"column_end":9},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4295,"byte_end":4298,"line_start":38,"line_end":38,"column_start":19,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":136},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":4930,"byte_end":4936,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/fibonacci.rs","byte_start":5334,"byte_end":5340,"line_start":76,"line_end":76,"column_start":19,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":5543}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11405,"byte_end":11417,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/algos-0.4.0/src/numerics/primorial.rs","byte_start":11872,"byte_end":11884,"line_start":42,"line_end":42,"column_start":19,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":5543}}]}