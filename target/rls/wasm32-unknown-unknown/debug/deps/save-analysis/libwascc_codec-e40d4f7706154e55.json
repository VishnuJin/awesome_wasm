{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1","program":"/home/suru/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wascc_codec","--edition=2018","/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e40d4f7706154e55","-C","extra-filename=-e40d4f7706154e55","--out-dir","/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps","--target","wasm32-unknown-unknown","-L","dependency=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps","-L","dependency=/home/suru/Documents/awesome_wasm/target/rls/debug/deps","--extern","log=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/liblog-bcd418710eba89d7.rmeta","--extern","rmp_serde=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/librmp_serde-6bb9bb9c0b2c5af9.rmeta","--extern","serde=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/libserde-91ef6f7830e57d65.rmeta","--extern","serde_bytes=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/libserde_bytes-63bc8012e072fb6d.rmeta","--extern","serde_derive=/home/suru/Documents/awesome_wasm/target/rls/debug/deps/libserde_derive-866072f77154c579.so","--extern","serde_json=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/libserde_json-4aedeb93e18f76cd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/suru/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/libwascc_codec-e40d4f7706154e55.rmeta"},"prelude":{"crate_id":{"name":"wascc_codec","disambiguator":[9450424693000071951,8304357311261724183]},"crate_root":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src","external_crates":[{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17568117084726535670,18291600942983091792]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11708719394972853161,10740351817569260753]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11739846921667929886,4899200388694349132]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10483847702699074036,9448700856939319914]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13547053222791032196,5616744556569750145]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1671359507371111213,8555349780106746800]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10553035774617414455,11464508503641710306]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12030632638709788125,179720963704046562]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17497149768326916465,12808847267177544861]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16272633320396836489,9042107923364971302]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8020748326108297999,16907006358149453028]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":12,"id":{"name":"dlmalloc","disambiguator":[14908421788973856670,17807852881498547973]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":13,"id":{"name":"serde_derive","disambiguator":[6037834130130488611,17842463658795390511]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":14,"id":{"name":"log","disambiguator":[14285311876279124308,787861090774399804]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[3327276768833609390,4213488046245644274]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","num":16,"id":{"name":"serde","disambiguator":[10362752534225817208,14453123574184786104]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":17,"id":{"name":"rmp_serde","disambiguator":[1936978173384364288,14111477812242930889]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":18,"id":{"name":"rmp","disambiguator":[10113385517999052348,17306090833965413064]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":19,"id":{"name":"byteorder","disambiguator":[15849737753360944621,14209032557546942040]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","num":20,"id":{"name":"num_traits","disambiguator":[10136725111933920827,11215299027748122273]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","num":21,"id":{"name":"serde_bytes","disambiguator":[5558729866261809908,15933540333062596260]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","num":22,"id":{"name":"serde_json","disambiguator":[16911494618598343305,500638143607058896]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","num":23,"id":{"name":"itoa","disambiguator":[5147502133076860331,7475477209041257681]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","num":24,"id":{"name":"ryu","disambiguator":[8376193462696499826,4584971023996794025]}}],"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":0,"byte_end":2518,"line_start":1,"line_end":74,"column_start":1,"column_end":19}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":0,"byte_end":2518,"line_start":1,"line_end":74,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":3066},{"krate":0,"index":13},{"krate":0,"index":3068},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":37},{"krate":0,"index":64},{"krate":0,"index":77},{"krate":0,"index":85},{"krate":0,"index":92},{"krate":0,"index":110},{"krate":0,"index":128},{"krate":0,"index":133}],"decl_id":null,"docs":" # wascc-codec","sig":null,"attributes":[{"value":"/ # wascc-codec","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":691,"byte_end":708,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":709,"byte_end":712,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This library provides the core set of types and associated functions used to facilitate actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":713,"byte_end":810,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ and host runtime communication for waSCC.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":811,"byte_end":856,"line_start":19,"line_end":19,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":3},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":918,"byte_end":925,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"name":"VERSION","qualname":"::VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The version of the codec as seen on crates.io\n","sig":null,"attributes":[{"value":"/ The version of the codec as seen on crates.io","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":858,"byte_end":907,"line_start":21,"line_end":21,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":4},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":1053,"byte_end":1065,"line_start":24,"line_end":24,"column_start":11,"column_end":23},"name":"SYSTEM_ACTOR","qualname":"::SYSTEM_ACTOR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The string used for the originator of messages dispatched by the host runtime\n","sig":null,"attributes":[{"value":"/ The string used for the originator of messages dispatched by the host runtime","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":961,"byte_end":1042,"line_start":23,"line_end":23,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":1503,"byte_end":1512,"line_start":38,"line_end":38,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize","value":"pub fn serialize<T>(T)\n-> ::std::result::Result<Vec<u8>, Box<std::error::Error + Send + Sync>> where\nT: Serialize","parent":null,"children":[],"decl_id":null,"docs":" The standard function for serializing codec structs into a format that can be\n used for message exchange between actor and host. Use of any other function to\n serialize could result in breaking incompatibilities.\n","sig":null,"attributes":[{"value":"/ The standard function for serializing codec structs into a format that can be","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":1273,"byte_end":1354,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ used for message exchange between actor and host. Use of any other function to","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":1355,"byte_end":1437,"line_start":36,"line_end":36,"column_start":1,"column_end":83}},{"value":"/ serialize could result in breaking incompatibilities.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":1438,"byte_end":1495,"line_start":37,"line_end":37,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":1977,"byte_end":1988,"line_start":52,"line_end":52,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::deserialize","value":"pub fn deserialize<'de, T: Deserialize>(&[u8])\n-> ::std::result::Result<T, Box<std::error::Error + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" The standard function for de-serializing codec structs from a format suitable\n for message exchange between actor and host. Use of any other function to\n deserialize could result in breaking incompatibilities.\n","sig":null,"attributes":[{"value":"/ The standard function for de-serializing codec structs from a format suitable","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":1750,"byte_end":1831,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/ for message exchange between actor and host. Use of any other function to","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":1832,"byte_end":1909,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ deserialize could result in breaking incompatibilities.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":1910,"byte_end":1969,"line_start":51,"line_end":51,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2321,"byte_end":2327,"line_start":62,"line_end":62,"column_start":11,"column_end":17},"name":"Sample","qualname":"::Sample","value":"Sample","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2337,"byte_end":2343,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"sample","qualname":"::Sample::sample","value":"pub fn sample() -> Self","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":22},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blobstore","qualname":"::blobstore","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":140},{"krate":0,"index":238},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":162},{"krate":0,"index":148},{"krate":0,"index":33},{"krate":0,"index":240},{"krate":0,"index":293},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":248},{"krate":0,"index":242},{"krate":0,"index":295},{"krate":0,"index":348},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":303},{"krate":0,"index":297},{"krate":0,"index":35},{"krate":0,"index":350},{"krate":0,"index":409},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":360},{"krate":0,"index":354},{"krate":0,"index":411},{"krate":0,"index":464},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":419},{"krate":0,"index":413},{"krate":0,"index":466},{"krate":0,"index":528},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":477},{"krate":0,"index":471},{"krate":0,"index":530},{"krate":0,"index":598},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":543},{"krate":0,"index":537}],"decl_id":null,"docs":" # Binary object storage and streaming","sig":null,"attributes":[{"value":"/ # Binary object storage and streaming","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":2520,"byte_end":2561,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":2562,"byte_end":2565,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types for the `wascc:blobstore` capability provider. For more information on","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":2566,"byte_end":2672,"line_start":3,"line_end":3,"column_start":1,"column_end":107}},{"value":"/ how the blob store capability works within the constraints of a WebAssembly host runtime, check out","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":2673,"byte_end":2776,"line_start":4,"line_end":4,"column_start":1,"column_end":104}},{"value":"/ the documentation on [waSCC.dev](https://wascc.dev)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":2777,"byte_end":2832,"line_start":5,"line_end":5,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":2946,"byte_end":2965,"line_start":10,"line_end":10,"column_start":11,"column_end":30},"name":"OP_CREATE_CONTAINER","qualname":"::blobstore::OP_CREATE_CONTAINER","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a Container to the capability provider, receives a Container back\n","sig":null,"attributes":[{"value":"/ Guest sends a Container to the capability provider, receives a Container back","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":2854,"byte_end":2935,"line_start":9,"line_end":9,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3091,"byte_end":3110,"line_start":12,"line_end":12,"column_start":11,"column_end":30},"name":"OP_REMOVE_CONTAINER","qualname":"::blobstore::OP_REMOVE_CONTAINER","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a Container to the capability provider, lack of error indicates success\n","sig":null,"attributes":[{"value":"/ Guest sends a Container to the capability provider, lack of error indicates success","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":2993,"byte_end":3080,"line_start":11,"line_end":11,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3231,"byte_end":3247,"line_start":14,"line_end":14,"column_start":11,"column_end":27},"name":"OP_REMOVE_OBJECT","qualname":"::blobstore::OP_REMOVE_OBJECT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a Blob to the capability provider, lack of error indicates success\n","sig":null,"attributes":[{"value":"/ Guest sends a Blob to the capability provider, lack of error indicates success","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3138,"byte_end":3220,"line_start":13,"line_end":13,"column_start":1,"column_end":83}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3363,"byte_end":3378,"line_start":16,"line_end":16,"column_start":11,"column_end":26},"name":"OP_LIST_OBJECTS","qualname":"::blobstore::OP_LIST_OBJECTS","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a Container to the capability provider, receives a BlobList back\n","sig":null,"attributes":[{"value":"/ Guest sends a Container to the capability provider, receives a BlobList back","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3272,"byte_end":3352,"line_start":15,"line_end":15,"column_start":1,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3526,"byte_end":3541,"line_start":18,"line_end":18,"column_start":11,"column_end":26},"name":"OP_UPLOAD_CHUNK","qualname":"::blobstore::OP_UPLOAD_CHUNK","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a FileChunk to capability provider for storing as part of a Blob, lack of error indicates success\n","sig":null,"attributes":[{"value":"/ Guest sends a FileChunk to capability provider for storing as part of a Blob, lack of error indicates success","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3402,"byte_end":3515,"line_start":17,"line_end":17,"column_start":1,"column_end":114}}]},{"kind":"Const","id":{"krate":0,"index":29},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3786,"byte_end":3803,"line_start":21,"line_end":21,"column_start":11,"column_end":28},"name":"OP_START_DOWNLOAD","qualname":"::blobstore::OP_START_DOWNLOAD","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a StreamRequest to the capability provider, immediate termination w/success. Guest will then\n start receiving OP_RECEIVE_CHUNK operations from the provider as chunks are streamed to the guest\n","sig":null,"attributes":[{"value":"/ Guest sends a StreamRequest to the capability provider, immediate termination w/success. Guest will then","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3565,"byte_end":3673,"line_start":19,"line_end":19,"column_start":1,"column_end":109}},{"value":"/ start receiving OP_RECEIVE_CHUNK operations from the provider as chunks are streamed to the guest","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3674,"byte_end":3775,"line_start":20,"line_end":20,"column_start":1,"column_end":102}}]},{"kind":"Const","id":{"krate":0,"index":30},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3933,"byte_end":3948,"line_start":23,"line_end":23,"column_start":11,"column_end":26},"name":"OP_START_UPLOAD","qualname":"::blobstore::OP_START_UPLOAD","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a metadata-carrying FileChunk to initiate an upload, lack of error is success\n","sig":null,"attributes":[{"value":"/ Guest sends a metadata-carrying FileChunk to initiate an upload, lack of error is success","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3829,"byte_end":3922,"line_start":22,"line_end":22,"column_start":1,"column_end":94}}]},{"kind":"Const","id":{"krate":0,"index":31},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4064,"byte_end":4080,"line_start":25,"line_end":25,"column_start":11,"column_end":27},"name":"OP_RECEIVE_CHUNK","qualname":"::blobstore::OP_RECEIVE_CHUNK","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest will receive a FileChunk for each piece of a file requested to download\n","sig":null,"attributes":[{"value":"/ Guest will receive a FileChunk for each piece of a file requested to download","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":3972,"byte_end":4053,"line_start":24,"line_end":24,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":32},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4227,"byte_end":4245,"line_start":27,"line_end":27,"column_start":11,"column_end":29},"name":"OP_GET_OBJECT_INFO","qualname":"::blobstore::OP_GET_OBJECT_INFO","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Query information on a single blob. Guest sends an incomplete blob struct and gets a complete one in return\n","sig":null,"attributes":[{"value":"/ Query information on a single blob. Guest sends an incomplete blob struct and gets a complete one in return","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4105,"byte_end":4216,"line_start":26,"line_end":26,"column_start":1,"column_end":112}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4427,"byte_end":4436,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"FileChunk","qualname":"::blobstore::FileChunk","value":"FileChunk { sequence_no, container, id, total_bytes, chunk_size, context, chunk_bytes }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" Represents a single chunk of a segmented file stream\n","sig":null,"attributes":[{"value":"/ Represents a single chunk of a segmented file stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4272,"byte_end":4328,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4381,"byte_end":4415,"line_start":31,"line_end":31,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":141},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4519,"byte_end":4530,"line_start":34,"line_end":34,"column_start":9,"column_end":20},"name":"sequence_no","qualname":"::blobstore::FileChunk::sequence_no","value":"u64","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" A sequence number that can be used for retry and ordering logic\n","sig":null,"attributes":[{"value":"/ A sequence number that can be used for retry and ordering logic","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4443,"byte_end":4510,"line_start":33,"line_end":33,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4593,"byte_end":4602,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"name":"container","qualname":"::blobstore::FileChunk::container","value":"std::string::String","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" The container in which this file exists\n","sig":null,"attributes":[{"value":"/ The container in which this file exists","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4541,"byte_end":4584,"line_start":35,"line_end":35,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":143},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4654,"byte_end":4656,"line_start":38,"line_end":38,"column_start":9,"column_end":11},"name":"id","qualname":"::blobstore::FileChunk::id","value":"std::string::String","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" The unique ID of the blob\n","sig":null,"attributes":[{"value":"/ The unique ID of the blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4616,"byte_end":4645,"line_start":37,"line_end":37,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":144},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4723,"byte_end":4734,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"total_bytes","qualname":"::blobstore::FileChunk::total_bytes","value":"u64","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Total number of bytes in the entire blob\n","sig":null,"attributes":[{"value":"/ Total number of bytes in the entire blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4670,"byte_end":4714,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":145},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4873,"byte_end":4883,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"name":"chunk_size","qualname":"::blobstore::FileChunk::chunk_size","value":"u64","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" The number of bytes within any given chunk. Note that the last chunk in a file stream may be less than `chunk_size`\n","sig":null,"attributes":[{"value":"/ The number of bytes within any given chunk. Note that the last chunk in a file stream may be less than `chunk_size`","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4745,"byte_end":4864,"line_start":41,"line_end":41,"column_start":5,"column_end":124}}]},{"kind":"Field","id":{"krate":0,"index":146},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5033,"byte_end":5040,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"name":"context","qualname":"::blobstore::FileChunk::context","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" The context value supplied by the consumer during initial stream request\n","sig":null,"attributes":[{"value":"/ The context value supplied by the consumer during initial stream request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4894,"byte_end":4970,"line_start":43,"line_end":43,"column_start":5,"column_end":81}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":4975,"byte_end":5024,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":147},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5169,"byte_end":5180,"line_start":49,"line_end":49,"column_start":9,"column_end":20},"name":"chunk_bytes","qualname":"::blobstore::FileChunk::chunk_bytes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" The raw bytes contained in this chunk\n","sig":null,"attributes":[{"value":"/ The raw bytes contained in this chunk","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5062,"byte_end":5103,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"serde(with = \"serde_bytes\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5108,"byte_end":5138,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5143,"byte_end":5160,"line_start":48,"line_end":48,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":240},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5679,"byte_end":5688,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"Container","qualname":"::blobstore::Container","value":"Container { id }","parent":null,"children":[{"krate":0,"index":241}],"decl_id":null,"docs":" Represents a container within a blob store\n","sig":null,"attributes":[{"value":"/ Represents a container within a blob store","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5534,"byte_end":5580,"line_start":66,"line_end":66,"column_start":1,"column_end":47}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5633,"byte_end":5667,"line_start":68,"line_end":68,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":241},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5699,"byte_end":5701,"line_start":70,"line_end":70,"column_start":9,"column_end":11},"name":"id","qualname":"::blobstore::Container::id","value":"std::string::String","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":295},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5850,"byte_end":5863,"line_start":76,"line_end":76,"column_start":12,"column_end":25},"name":"ContainerList","qualname":"::blobstore::ContainerList","value":"ContainerList { containers }","parent":null,"children":[{"krate":0,"index":296}],"decl_id":null,"docs":" Used to hold a list of containers\n","sig":null,"attributes":[{"value":"/ Used to hold a list of containers","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5714,"byte_end":5751,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5804,"byte_end":5838,"line_start":75,"line_end":75,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":296},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5896,"byte_end":5906,"line_start":78,"line_end":78,"column_start":9,"column_end":19},"name":"containers","qualname":"::blobstore::ContainerList::containers","value":"std::vec::Vec<blobstore::Container>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5870,"byte_end":5887,"line_start":77,"line_end":77,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6273,"byte_end":6277,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"Blob","qualname":"::blobstore::Blob","value":"Blob { id, container, byte_size }","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"decl_id":null,"docs":" Metadata about a blob, not the raw bytes\n","sig":null,"attributes":[{"value":"/ Metadata about a blob, not the raw bytes","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6130,"byte_end":6174,"line_start":91,"line_end":91,"column_start":1,"column_end":45}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6227,"byte_end":6261,"line_start":93,"line_end":93,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":351},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6318,"byte_end":6320,"line_start":96,"line_end":96,"column_start":9,"column_end":11},"name":"id","qualname":"::blobstore::Blob::id","value":"std::string::String","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Unique ID of the blob\n","sig":null,"attributes":[{"value":"/ Unique ID of the blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6284,"byte_end":6309,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":352},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6382,"byte_end":6391,"line_start":98,"line_end":98,"column_start":9,"column_end":18},"name":"container","qualname":"::blobstore::Blob::container","value":"std::string::String","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Container in which the blob resides\n","sig":null,"attributes":[{"value":"/ Container in which the blob resides","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6334,"byte_end":6373,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":353},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6463,"byte_end":6472,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"name":"byte_size","qualname":"::blobstore::Blob::byte_size","value":"u64","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Total number of bytes of the blob (file size)\n","sig":null,"attributes":[{"value":"/ Total number of bytes of the blob (file size)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6405,"byte_end":6454,"line_start":99,"line_end":99,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6614,"byte_end":6622,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"BlobList","qualname":"::blobstore::BlobList","value":"BlobList { blobs }","parent":null,"children":[{"krate":0,"index":412}],"decl_id":null,"docs":" A wrapper for a list of blobs\n","sig":null,"attributes":[{"value":"/ A wrapper for a list of blobs","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6482,"byte_end":6515,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6568,"byte_end":6602,"line_start":105,"line_end":105,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":412},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6655,"byte_end":6660,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"blobs","qualname":"::blobstore::BlobList::blobs","value":"std::vec::Vec<blobstore::Blob>","parent":{"krate":0,"index":411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6629,"byte_end":6646,"line_start":107,"line_end":107,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":466},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6829,"byte_end":6842,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"StreamRequest","qualname":"::blobstore::StreamRequest","value":"StreamRequest { id, container, chunk_size, context }","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470}],"decl_id":null,"docs":" A request to begin downloading a stream for a blob\n","sig":null,"attributes":[{"value":"/ A request to begin downloading a stream for a blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6676,"byte_end":6730,"line_start":111,"line_end":111,"column_start":1,"column_end":55}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6783,"byte_end":6817,"line_start":113,"line_end":113,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":467},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6897,"byte_end":6899,"line_start":116,"line_end":116,"column_start":9,"column_end":11},"name":"id","qualname":"::blobstore::StreamRequest::id","value":"std::string::String","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" The unique ID of the requested blob\n","sig":null,"attributes":[{"value":"/ The unique ID of the requested blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6849,"byte_end":6888,"line_start":115,"line_end":115,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":468},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6961,"byte_end":6970,"line_start":118,"line_end":118,"column_start":9,"column_end":18},"name":"container","qualname":"::blobstore::StreamRequest::container","value":"std::string::String","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" The container of the requested blob\n","sig":null,"attributes":[{"value":"/ The container of the requested blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6913,"byte_end":6952,"line_start":117,"line_end":117,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":469},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7113,"byte_end":7123,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"name":"chunk_size","qualname":"::blobstore::StreamRequest::chunk_size","value":"u64","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" The preferred size of chunks to be delivered. Consumers must not assume this is the size of the chunks they will get\n","sig":null,"attributes":[{"value":"/ The preferred size of chunks to be delivered. Consumers must not assume this is the size of the chunks they will get","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":6984,"byte_end":7104,"line_start":119,"line_end":119,"column_start":5,"column_end":125}}]},{"kind":"Field","id":{"krate":0,"index":470},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7337,"byte_end":7344,"line_start":123,"line_end":123,"column_start":9,"column_end":16},"name":"context","qualname":"::blobstore::StreamRequest::context","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" A user-defined context value that will be placed on all sent file chunks. Useful for doing correlation of multiple independent transfers\n","sig":null,"attributes":[{"value":"/ A user-defined context value that will be placed on all sent file chunks. Useful for doing correlation of multiple independent transfers","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7134,"byte_end":7274,"line_start":121,"line_end":121,"column_start":5,"column_end":145}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7279,"byte_end":7328,"line_start":122,"line_end":122,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":530},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7511,"byte_end":7519,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"Transfer","qualname":"::blobstore::Transfer","value":"Transfer { blob_id, container, chunk_size, total_size, total_chunks, context }","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" Metadata about an in-progress file transfer\n","sig":null,"attributes":[{"value":"/ Metadata about an in-progress file transfer","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7365,"byte_end":7412,"line_start":126,"line_end":126,"column_start":1,"column_end":48}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7465,"byte_end":7499,"line_start":128,"line_end":128,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":531},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7560,"byte_end":7567,"line_start":131,"line_end":131,"column_start":9,"column_end":16},"name":"blob_id","qualname":"::blobstore::Transfer::blob_id","value":"std::string::String","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Unique ID of the blob\n","sig":null,"attributes":[{"value":"/ Unique ID of the blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7526,"byte_end":7551,"line_start":130,"line_end":130,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":532},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7613,"byte_end":7622,"line_start":133,"line_end":133,"column_start":9,"column_end":18},"name":"container","qualname":"::blobstore::Transfer::container","value":"std::string::String","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" ID of the container\n","sig":null,"attributes":[{"value":"/ ID of the container","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7581,"byte_end":7604,"line_start":132,"line_end":132,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":533},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7681,"byte_end":7691,"line_start":135,"line_end":135,"column_start":9,"column_end":19},"name":"chunk_size","qualname":"::blobstore::Transfer::chunk_size","value":"u64","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Size of chunks being transferred\n","sig":null,"attributes":[{"value":"/ Size of chunks being transferred","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7636,"byte_end":7672,"line_start":134,"line_end":134,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":534},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7754,"byte_end":7764,"line_start":137,"line_end":137,"column_start":9,"column_end":19},"name":"total_size","qualname":"::blobstore::Transfer::total_size","value":"u64","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Total number of bytes being transferred\n","sig":null,"attributes":[{"value":"/ Total number of bytes being transferred","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7702,"byte_end":7745,"line_start":136,"line_end":136,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":535},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7828,"byte_end":7840,"line_start":139,"line_end":139,"column_start":9,"column_end":21},"name":"total_chunks","qualname":"::blobstore::Transfer::total_chunks","value":"u64","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" Total number of chunks being transferred\n","sig":null,"attributes":[{"value":"/ Total number of chunks being transferred","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7775,"byte_end":7819,"line_start":138,"line_end":138,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":536},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7971,"byte_end":7978,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"context","qualname":"::blobstore::Transfer::context","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":" The context supplied by the original transfer request\n","sig":null,"attributes":[{"value":"/ The context supplied by the original transfer request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7851,"byte_end":7908,"line_start":140,"line_end":140,"column_start":5,"column_end":62}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":7913,"byte_end":7962,"line_start":141,"line_end":141,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":37},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"capabilities","qualname":"::capabilities","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":600},{"krate":0,"index":672},{"krate":0,"index":670},{"krate":0,"index":664},{"krate":0,"index":613},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":607},{"krate":0,"index":43},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":45},{"krate":0,"index":678},{"krate":0,"index":739},{"krate":0,"index":737},{"krate":0,"index":731},{"krate":0,"index":686},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":54},{"krate":0,"index":741},{"krate":0,"index":800},{"krate":0,"index":798},{"krate":0,"index":792},{"krate":0,"index":751},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":" # Common types used for managing native capability providers\n","sig":null,"attributes":[{"value":"/ # Common types used for managing native capability providers","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":8603,"byte_end":8667,"line_start":15,"line_end":15,"column_start":1,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":40},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":8845,"byte_end":8873,"line_start":23,"line_end":23,"column_start":11,"column_end":39},"name":"OP_GET_CAPABILITY_DESCRIPTOR","qualname":"::capabilities::OP_GET_CAPABILITY_DESCRIPTOR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" All capability providers must respond to this operation, which will be requested by\n the host (the `system` actor)\n","sig":null,"attributes":[{"value":"/ All capability providers must respond to this operation, which will be requested by","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":8713,"byte_end":8800,"line_start":21,"line_end":21,"column_start":1,"column_end":88}},{"value":"/ the host (the `system` actor)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":8801,"byte_end":8834,"line_start":22,"line_end":22,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9073,"byte_end":9083,"line_start":27,"line_end":27,"column_start":11,"column_end":21},"name":"Dispatcher","qualname":"::capabilities::Dispatcher","value":"Dispatcher: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" The dispatcher is used by a native capability provider to send commands to an actor module, expecting\n a result containing a byte array in return\n","sig":null,"attributes":[{"value":"/ The dispatcher is used by a native capability provider to send commands to an actor module, expecting","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":8910,"byte_end":9015,"line_start":25,"line_end":25,"column_start":1,"column_end":106}},{"value":"/ a result containing a byte array in return","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9016,"byte_end":9062,"line_start":26,"line_end":26,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9112,"byte_end":9120,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"dispatch","qualname":"::capabilities::Dispatcher::dispatch","value":"pub fn dispatch(&Self, &str, &str, &[u8])\n-> Result<Vec<u8>, Box<Error + Sync + Send>>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9424,"byte_end":9444,"line_start":39,"line_end":39,"column_start":12,"column_end":32},"name":"CapabilityDescriptor","qualname":"::capabilities::CapabilityDescriptor","value":"CapabilityDescriptor { id, name, version, revision, long_description, supported_operations }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"decl_id":null,"docs":" Metadata describing the capability provider and the operations it supports\n","sig":null,"attributes":[{"value":"/ Metadata describing the capability provider and the operations it supports","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9255,"byte_end":9333,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"repr(C)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9334,"byte_end":9344,"line_start":37,"line_end":37,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":601},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9550,"byte_end":9552,"line_start":41,"line_end":41,"column_start":9,"column_end":11},"name":"id","qualname":"::capabilities::CapabilityDescriptor::id","value":"std::string::String","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" The capability ID of the provider, e.g. `wascc:messaging` or `thirdparty:someprovider`\n","sig":null,"attributes":[{"value":"/ The capability ID of the provider, e.g. `wascc:messaging` or `thirdparty:someprovider`","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9451,"byte_end":9541,"line_start":40,"line_end":40,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":602},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9663,"byte_end":9667,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"name":"name","qualname":"::capabilities::CapabilityDescriptor::name","value":"std::string::String","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" The human-friendly name of the provider, displayed in short messages and log entries\n","sig":null,"attributes":[{"value":"/ The human-friendly name of the provider, displayed in short messages and log entries","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9566,"byte_end":9654,"line_start":42,"line_end":42,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":603},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9757,"byte_end":9764,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"name":"version","qualname":"::capabilities::CapabilityDescriptor::version","value":"std::string::String","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" A semver string representing the version of the provider module\n","sig":null,"attributes":[{"value":"/ A semver string representing the version of the provider module","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9681,"byte_end":9748,"line_start":44,"line_end":44,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":604},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9832,"byte_end":9840,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"revision","qualname":"::capabilities::CapabilityDescriptor::revision","value":"u32","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" A monotonicaly increasing revision number\n","sig":null,"attributes":[{"value":"/ A monotonicaly increasing revision number","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9778,"byte_end":9823,"line_start":46,"line_end":46,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":605},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9926,"byte_end":9942,"line_start":49,"line_end":49,"column_start":9,"column_end":25},"name":"long_description","qualname":"::capabilities::CapabilityDescriptor::long_description","value":"std::string::String","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" A longer, documentation-friendly, description of this provider\n","sig":null,"attributes":[{"value":"/ A longer, documentation-friendly, description of this provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9851,"byte_end":9917,"line_start":48,"line_end":48,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":606},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10027,"byte_end":10047,"line_start":51,"line_end":51,"column_start":9,"column_end":29},"name":"supported_operations","qualname":"::capabilities::CapabilityDescriptor::supported_operations","value":"std::vec::Vec<capabilities::OperationDescriptor>","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" A list of all of the operations supported by this provider\n","sig":null,"attributes":[{"value":"/ A list of all of the operations supported by this provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9956,"byte_end":10018,"line_start":50,"line_end":50,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10117,"byte_end":10124,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"builder","qualname":"<CapabilityDescriptor>::builder","value":"pub fn builder() -> CapabilityDescriptorBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":674},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10307,"byte_end":10334,"line_start":62,"line_end":62,"column_start":12,"column_end":39},"name":"CapabilityDescriptorBuilder","qualname":"::capabilities::CapabilityDescriptorBuilder","value":"CapabilityDescriptorBuilder {  }","parent":null,"children":[{"krate":0,"index":675}],"decl_id":null,"docs":" A fluent syntax builder for creating a capability descriptor\n","sig":null,"attributes":[{"value":"/ A fluent syntax builder for creating a capability descriptor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10212,"byte_end":10276,"line_start":60,"line_end":60,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10648,"byte_end":10650,"line_start":73,"line_end":73,"column_start":12,"column_end":14},"name":"id","qualname":"<CapabilityDescriptorBuilder>::id","value":"pub fn id(Self, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the capability ID (e.g. `wascc:messaging`) of the provider\n","sig":null,"attributes":[{"value":"/ Sets the capability ID (e.g. `wascc:messaging`) of the provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10569,"byte_end":10636,"line_start":72,"line_end":72,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10925,"byte_end":10929,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"name","qualname":"<CapabilityDescriptorBuilder>::name","value":"pub fn name(Self, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the capability provider.\n","sig":null,"attributes":[{"value":"/ Sets the name of the capability provider.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10868,"byte_end":10913,"line_start":82,"line_end":82,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":11234,"byte_end":11250,"line_start":93,"line_end":93,"column_start":12,"column_end":28},"name":"long_description","qualname":"<CapabilityDescriptorBuilder>::long_description","value":"pub fn long_description(Self, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a longer, documentation-friendly description of the provider\n","sig":null,"attributes":[{"value":"/ Sets a longer, documentation-friendly description of the provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":11153,"byte_end":11222,"line_start":92,"line_end":92,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":11564,"byte_end":11571,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"version","qualname":"<CapabilityDescriptorBuilder>::version","value":"pub fn version(Self, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the version string (semver by convention) of the provider\n","sig":null,"attributes":[{"value":"/ Sets the version string (semver by convention) of the provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":11486,"byte_end":11552,"line_start":102,"line_end":102,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":11923,"byte_end":11931,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"revision","qualname":"<CapabilityDescriptorBuilder>::revision","value":"pub fn revision(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the monotonically increasing, numeric revision number of a provider. Used when comparing provider versions\n","sig":null,"attributes":[{"value":"/ Sets the monotonically increasing, numeric revision number of a provider. Used when comparing provider versions","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":11796,"byte_end":11911,"line_start":112,"line_end":112,"column_start":5,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":12216,"byte_end":12230,"line_start":123,"line_end":123,"column_start":12,"column_end":26},"name":"with_operation","qualname":"<CapabilityDescriptorBuilder>::with_operation","value":"pub fn with_operation(Self, &str, OperationDirection, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an operation descriptor to the provider descriptor.\n","sig":null,"attributes":[{"value":"/ Adds an operation descriptor to the provider descriptor.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":12144,"byte_end":12204,"line_start":122,"line_end":122,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":12727,"byte_end":12732,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"build","qualname":"<CapabilityDescriptorBuilder>::build","value":"pub fn build(Self) -> CapabilityDescriptor","parent":null,"children":[],"decl_id":null,"docs":" Produces a new capability descriptor from the builder's configuration\n","sig":null,"attributes":[{"value":"/ Produces a new capability descriptor from the builder's configuration","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":12642,"byte_end":12715,"line_start":134,"line_end":134,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":12954,"byte_end":12973,"line_start":143,"line_end":143,"column_start":12,"column_end":31},"name":"OperationDescriptor","qualname":"::capabilities::OperationDescriptor","value":"OperationDescriptor { name, direction, doctext }","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681}],"decl_id":null,"docs":" A description of a single operation supported by a capability provider\n","sig":null,"attributes":[{"value":"/ A description of a single operation supported by a capability provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":12798,"byte_end":12872,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"repr(C)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":12873,"byte_end":12883,"line_start":141,"line_end":141,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":679},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13057,"byte_end":13061,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"name":"name","qualname":"::capabilities::OperationDescriptor::name","value":"std::string::String","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" The name of the operation. This must be unique per capability ID\n","sig":null,"attributes":[{"value":"/ The name of the operation. This must be unique per capability ID","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":12980,"byte_end":13048,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":680},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13152,"byte_end":13161,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"direction","qualname":"::capabilities::OperationDescriptor::direction","value":"capabilities::OperationDirection","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Indicates the direction of the operation (can be bi-directional)\n","sig":null,"attributes":[{"value":"/ Indicates the direction of the operation (can be bi-directional)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13075,"byte_end":13143,"line_start":146,"line_end":146,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":681},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13246,"byte_end":13253,"line_start":149,"line_end":149,"column_start":9,"column_end":16},"name":"doctext","qualname":"::capabilities::OperationDescriptor::doctext","value":"std::string::String","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Documentation-suitable text for this operation\n","sig":null,"attributes":[{"value":"/ Documentation-suitable text for this operation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13187,"byte_end":13237,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13347,"byte_end":13350,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"new","qualname":"<OperationDescriptor>::new","value":"pub fn new(&str, OperationDirection, &str) -> OperationDescriptor","parent":null,"children":[],"decl_id":null,"docs":" Creates a new operation descriptor\n","sig":null,"attributes":[{"value":"/ Creates a new operation descriptor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13297,"byte_end":13335,"line_start":153,"line_end":153,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":742},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13780,"byte_end":13787,"line_start":168,"line_end":168,"column_start":5,"column_end":12},"name":"ToActor","qualname":"::capabilities::OperationDirection::ToActor","value":"OperationDirection::ToActor","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":744},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13793,"byte_end":13803,"line_start":169,"line_end":169,"column_start":5,"column_end":15},"name":"ToProvider","qualname":"::capabilities::OperationDirection::ToProvider","value":"OperationDirection::ToProvider","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":746},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13809,"byte_end":13813,"line_start":170,"line_end":170,"column_start":5,"column_end":9},"name":"Both","qualname":"::capabilities::OperationDirection::Both","value":"OperationDirection::Both","parent":{"krate":0,"index":741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":741},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13755,"byte_end":13773,"line_start":167,"line_end":167,"column_start":10,"column_end":28},"name":"OperationDirection","qualname":"::capabilities::OperationDirection","value":"pub enum OperationDirection { ToActor, ToProvider, Both, }","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":746}],"decl_id":null,"docs":" Represents the direction of an operation invocation\n","sig":null,"attributes":[{"value":"/ Represents the direction of an operation invocation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13584,"byte_end":13639,"line_start":163,"line_end":163,"column_start":1,"column_end":56}},{"value":"repr(C)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13640,"byte_end":13650,"line_start":164,"line_end":164,"column_start":1,"column_end":11}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13710,"byte_end":13745,"line_start":166,"line_end":166,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14136,"byte_end":14150,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"NullDispatcher","qualname":"::capabilities::NullDispatcher","value":"NullDispatcher {  }","parent":null,"children":[],"decl_id":null,"docs":" The NullDispatcher is as its name implies--a dispatcher that does nothing. This is convenient for\n initializing a capability provider with a null dispatcher, and then swapping it for a real dispatcher\n when the host runtime provides one configured with the appropriate channels\n","sig":null,"attributes":[{"value":"/ The NullDispatcher is as its name implies--a dispatcher that does nothing. This is convenient for","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13818,"byte_end":13919,"line_start":173,"line_end":173,"column_start":1,"column_end":102}},{"value":"/ initializing a capability provider with a null dispatcher, and then swapping it for a real dispatcher","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13920,"byte_end":14025,"line_start":174,"line_end":174,"column_start":1,"column_end":106}},{"value":"/ when the host runtime provides one configured with the appropriate channels","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14026,"byte_end":14105,"line_start":175,"line_end":175,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14188,"byte_end":14191,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"new","qualname":"<NullDispatcher>::new","value":"pub fn new() -> NullDispatcher","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":60},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14704,"byte_end":14722,"line_start":198,"line_end":198,"column_start":11,"column_end":29},"name":"CapabilityProvider","qualname":"::capabilities::CapabilityProvider","value":"CapabilityProvider: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Every native capability provider must implement this trait. Both portable and native capability providers\n must respond to the following operations: `OP_BIND_ACTOR`, `OP_REMOVE_ACTOR`, `OP_GET_CAPABILITY_DESCRIPTOR`\n","sig":null,"attributes":[{"value":"/ Every native capability provider must implement this trait. Both portable and native capability providers","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14471,"byte_end":14580,"line_start":196,"line_end":196,"column_start":1,"column_end":110}},{"value":"/ must respond to the following operations: `OP_BIND_ACTOR`, `OP_REMOVE_ACTOR`, `OP_GET_CAPABILITY_DESCRIPTOR`","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14581,"byte_end":14693,"line_start":197,"line_end":197,"column_start":1,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":15005,"byte_end":15023,"line_start":201,"line_end":201,"column_start":8,"column_end":26},"name":"configure_dispatch","qualname":"::capabilities::CapabilityProvider::configure_dispatch","value":"pub fn configure_dispatch(&Self, Box<Dispatcher>)\n-> Result<(), Box<Error + Send + Sync>>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" This function will be called on the provider when the host runtime is ready and has configured a dispatcher. This function is only ever\n called _once_ for a capability provider, regardless of the number of actors being managed in the host\n","sig":null,"attributes":[{"value":"/ This function will be called on the provider when the host runtime is ready and has configured a dispatcher. This function is only ever","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14748,"byte_end":14887,"line_start":199,"line_end":199,"column_start":5,"column_end":144}},{"value":"/ called _once_ for a capability provider, regardless of the number of actors being managed in the host","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14892,"byte_end":14997,"line_start":200,"line_end":200,"column_start":5,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":15225,"byte_end":15236,"line_start":206,"line_end":206,"column_start":8,"column_end":19},"name":"handle_call","qualname":"::capabilities::CapabilityProvider::handle_call","value":"pub fn handle_call(&Self, &str, &str, &[u8])\n-> Result<Vec<u8>, Box<Error + Send + Sync>>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Invoked when an actor has requested that a provider perform a given operation\n","sig":null,"attributes":[{"value":"/ Invoked when an actor has requested that a provider perform a given operation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":15136,"byte_end":15217,"line_start":205,"line_end":205,"column_start":5,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":64},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::core","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":805},{"krate":0,"index":858},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":813},{"krate":0,"index":807},{"krate":0,"index":860},{"krate":0,"index":913},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":868},{"krate":0,"index":862},{"krate":0,"index":915},{"krate":0,"index":973},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":926},{"krate":0,"index":920},{"krate":0,"index":918}],"decl_id":null,"docs":" # Core data types","sig":null,"attributes":[{"value":"/ # Core data types","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17022,"byte_end":17043,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17044,"byte_end":17047,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types used for wascc actor module and host runtime communications","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17048,"byte_end":17143,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ that is not specific to any given capability provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17144,"byte_end":17201,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":66},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17245,"byte_end":17267,"line_start":8,"line_end":8,"column_start":11,"column_end":33},"name":"OP_PERFORM_LIVE_UPDATE","qualname":"::core::OP_PERFORM_LIVE_UPDATE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":67},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17307,"byte_end":17329,"line_start":9,"line_end":9,"column_start":11,"column_end":33},"name":"OP_IDENTIFY_CAPABILITY","qualname":"::core::OP_IDENTIFY_CAPABILITY","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":68},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17370,"byte_end":17387,"line_start":10,"line_end":10,"column_start":11,"column_end":28},"name":"OP_HEALTH_REQUEST","qualname":"::core::OP_HEALTH_REQUEST","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":69},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17423,"byte_end":17436,"line_start":11,"line_end":11,"column_start":11,"column_end":24},"name":"OP_INITIALIZE","qualname":"::core::OP_INITIALIZE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":70},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17469,"byte_end":17482,"line_start":12,"line_end":12,"column_start":11,"column_end":24},"name":"OP_BIND_ACTOR","qualname":"::core::OP_BIND_ACTOR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":71},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17514,"byte_end":17529,"line_start":13,"line_end":13,"column_start":11,"column_end":26},"name":"OP_REMOVE_ACTOR","qualname":"::core::OP_REMOVE_ACTOR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":72},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17649,"byte_end":17675,"line_start":17,"line_end":17,"column_start":11,"column_end":37},"name":"CONFIG_WASCC_CLAIMS_ISSUER","qualname":"::core::CONFIG_WASCC_CLAIMS_ISSUER","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":73},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17712,"byte_end":17744,"line_start":18,"line_end":18,"column_start":11,"column_end":43},"name":"CONFIG_WASCC_CLAIMS_CAPABILITIES","qualname":"::core::CONFIG_WASCC_CLAIMS_CAPABILITIES","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17787,"byte_end":17811,"line_start":19,"line_end":19,"column_start":11,"column_end":35},"name":"CONFIG_WASCC_CLAIMS_NAME","qualname":"::core::CONFIG_WASCC_CLAIMS_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17846,"byte_end":17873,"line_start":20,"line_end":20,"column_start":11,"column_end":38},"name":"CONFIG_WASCC_CLAIMS_EXPIRES","qualname":"::core::CONFIG_WASCC_CLAIMS_EXPIRES","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":76},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17911,"byte_end":17935,"line_start":21,"line_end":21,"column_start":11,"column_end":35},"name":"CONFIG_WASCC_CLAIMS_TAGS","qualname":"::core::CONFIG_WASCC_CLAIMS_TAGS","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":805},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18257,"byte_end":18267,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"LiveUpdate","qualname":"::core::LiveUpdate","value":"LiveUpdate { new_module }","parent":null,"children":[{"krate":0,"index":806}],"decl_id":null,"docs":" LiveUpdate is used when a module is being replaced. The bytes contained in this message will, if valid,\n replace the existing actor. This message is sent to an actor from the \"system\" origin\n","sig":null,"attributes":[{"value":"/ LiveUpdate is used when a module is being replaced. The bytes contained in this message will, if valid,","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":17961,"byte_end":18068,"line_start":23,"line_end":23,"column_start":1,"column_end":108}},{"value":"/ replace the existing actor. This message is sent to an actor from the \"system\" origin","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18069,"byte_end":18158,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18211,"byte_end":18245,"line_start":26,"line_end":26,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":806},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18313,"byte_end":18323,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"name":"new_module","qualname":"::core::LiveUpdate::new_module","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" Raw bytes of the new actor\n","sig":null,"attributes":[{"value":"/ Raw bytes of the new actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18274,"byte_end":18304,"line_start":28,"line_end":28,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":860},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18663,"byte_end":18676,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"HealthRequest","qualname":"::core::HealthRequest","value":"HealthRequest { placeholder }","parent":null,"children":[{"krate":0,"index":861}],"decl_id":null,"docs":" A health request is passed to an actor to allow it to return an empty result. If the guest module\n returns the empty result, it is considered healthy. More fields may be added to this message in the future\n to support more fine-grained health detection\n","sig":null,"attributes":[{"value":"/ A health request is passed to an actor to allow it to return an empty result. If the guest module","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18337,"byte_end":18438,"line_start":32,"line_end":32,"column_start":1,"column_end":102}},{"value":"/ returns the empty result, it is considered healthy. More fields may be added to this message in the future","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18439,"byte_end":18549,"line_start":33,"line_end":33,"column_start":1,"column_end":111}},{"value":"/ to support more fine-grained health detection","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18550,"byte_end":18599,"line_start":34,"line_end":34,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":861},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18746,"byte_end":18757,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"name":"placeholder","qualname":"::core::HealthRequest::placeholder","value":"bool","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" A placeholder not currently used for health checks\n","sig":null,"attributes":[{"value":"/ A placeholder not currently used for health checks","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18683,"byte_end":18737,"line_start":37,"line_end":37,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":915},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":19106,"byte_end":19129,"line_start":45,"line_end":45,"column_start":12,"column_end":35},"name":"CapabilityConfiguration","qualname":"::core::CapabilityConfiguration","value":"CapabilityConfiguration { module, values }","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"decl_id":null,"docs":" Capability providers must be able to accept configuration values on a per-actor basis. The module\n field will be the public key of the actor (the `sub` field of its embedded JWT), though providers\n should treat this string as opaque data to be used as a key\n","sig":null,"attributes":[{"value":"/ Capability providers must be able to accept configuration values on a per-actor basis. The module","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18768,"byte_end":18869,"line_start":41,"line_end":41,"column_start":1,"column_end":102}},{"value":"/ field will be the public key of the actor (the `sub` field of its embedded JWT), though providers","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18870,"byte_end":18971,"line_start":42,"line_end":42,"column_start":1,"column_end":102}},{"value":"/ should treat this string as opaque data to be used as a key","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":18972,"byte_end":19035,"line_start":43,"line_end":43,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":916},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":19236,"byte_end":19242,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"module","qualname":"::core::CapabilityConfiguration::module","value":"std::string::String","parent":{"krate":0,"index":915},"children":[],"decl_id":null,"docs":" The key to be used to distinguish actor configuration, this is the subject's public key\n","sig":null,"attributes":[{"value":"/ The key to be used to distinguish actor configuration, this is the subject's public key","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":19136,"byte_end":19227,"line_start":46,"line_end":46,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":917},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":19315,"byte_end":19321,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"name":"values","qualname":"::core::CapabilityConfiguration::values","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":915},"children":[],"decl_id":null,"docs":" Raw configuration values\n","sig":null,"attributes":[{"value":"/ Raw configuration values","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":19256,"byte_end":19284,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/core.rs","byte_start":19289,"byte_end":19306,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":77},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"eventstreams","qualname":"::eventstreams","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":975},{"krate":0,"index":1036},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":987},{"krate":0,"index":981},{"krate":0,"index":979},{"krate":0,"index":1038},{"krate":0,"index":1091},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1046},{"krate":0,"index":1040},{"krate":0,"index":1093},{"krate":0,"index":1152},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1103},{"krate":0,"index":1097},{"krate":0,"index":83},{"krate":0,"index":1154},{"krate":0,"index":1209},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1164},{"krate":0,"index":1158},{"krate":0,"index":1156},{"krate":0,"index":1211},{"krate":0,"index":1267},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1220},{"krate":0,"index":1214}],"decl_id":null,"docs":" # Event Streaming","sig":null,"attributes":[{"value":"/ # Event Streaming","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":19351,"byte_end":19372,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":19373,"byte_end":19376,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types and operation constants for the `wascc:eventstreams` capability.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":19377,"byte_end":19477,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"/ For more information on append-only event streams, event sourcing, and how they apply","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":19478,"byte_end":19567,"line_start":4,"line_end":4,"column_start":1,"column_end":90}},{"value":"/ to waSCC actor development, check the documentation on [waSCC.dev](https://wascc.dev)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":19568,"byte_end":19657,"line_start":5,"line_end":5,"column_start":1,"column_end":90}}]},{"kind":"Const","id":{"krate":0,"index":80},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":19796,"byte_end":19812,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"OP_DELIVER_EVENT","qualname":"::eventstreams::OP_DELIVER_EVENT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Capability provider uses this operation to deliver an event to an actor\n","sig":null,"attributes":[{"value":"/ Capability provider uses this operation to deliver an event to an actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":19710,"byte_end":19785,"line_start":10,"line_end":10,"column_start":1,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":81},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":19934,"byte_end":19948,"line_start":13,"line_end":13,"column_start":11,"column_end":25},"name":"OP_WRITE_EVENT","qualname":"::eventstreams::OP_WRITE_EVENT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Actor invokes this operation on provider to write an event to a given event stream\n","sig":null,"attributes":[{"value":"/ Actor invokes this operation on provider to write an event to a given event stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":19837,"byte_end":19923,"line_start":12,"line_end":12,"column_start":1,"column_end":87}}]},{"kind":"Const","id":{"krate":0,"index":82},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20057,"byte_end":20072,"line_start":15,"line_end":15,"column_start":11,"column_end":26},"name":"OP_QUERY_STREAM","qualname":"::eventstreams::OP_QUERY_STREAM","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Actor invokes this operation to execute a query against an event stream\n","sig":null,"attributes":[{"value":"/ Actor invokes this operation to execute a query against an event stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":19971,"byte_end":20046,"line_start":14,"line_end":14,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20252,"byte_end":20257,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Event","qualname":"::eventstreams::Event","value":"Event { event_id, stream, values }","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978}],"decl_id":null,"docs":" Represents an immutable event within a stream\n","sig":null,"attributes":[{"value":"/ Represents an immutable event within a stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20097,"byte_end":20146,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20206,"byte_end":20240,"line_start":19,"line_end":19,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":976},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20303,"byte_end":20311,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"name":"event_id","qualname":"::eventstreams::Event::event_id","value":"std::string::String","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":" The unique ID of the event\n","sig":null,"attributes":[{"value":"/ The unique ID of the event","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20264,"byte_end":20294,"line_start":21,"line_end":21,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":977},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20374,"byte_end":20380,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"stream","qualname":"::eventstreams::Event::stream","value":"std::string::String","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":" The stream in which the event occurs\n","sig":null,"attributes":[{"value":"/ The stream in which the event occurs","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20325,"byte_end":20365,"line_start":23,"line_end":23,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":978},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20420,"byte_end":20426,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"values","qualname":"::eventstreams::Event::values","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20394,"byte_end":20411,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20624,"byte_end":20637,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"WriteResponse","qualname":"::eventstreams::WriteResponse","value":"WriteResponse { event_id }","parent":null,"children":[{"krate":0,"index":1039}],"decl_id":null,"docs":" The response from the provider after writing an event to a stream\n","sig":null,"attributes":[{"value":"/ The response from the provider after writing an event to a stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20456,"byte_end":20525,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20578,"byte_end":20612,"line_start":31,"line_end":31,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1039},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20687,"byte_end":20695,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"name":"event_id","qualname":"::eventstreams::WriteResponse::event_id","value":"std::string::String","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Unique ID of the event written\n","sig":null,"attributes":[{"value":"/ Unique ID of the event written","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20644,"byte_end":20678,"line_start":33,"line_end":33,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1093},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20841,"byte_end":20852,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"StreamQuery","qualname":"::eventstreams::StreamQuery","value":"StreamQuery { stream_id, range, count }","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1095}],"decl_id":null,"docs":" A query against a given stream\n","sig":null,"attributes":[{"value":"/ A query against a given stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20708,"byte_end":20742,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20795,"byte_end":20829,"line_start":39,"line_end":39,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1094},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20897,"byte_end":20906,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"name":"stream_id","qualname":"::eventstreams::StreamQuery::stream_id","value":"std::string::String","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" ID of the stream to query\n","sig":null,"attributes":[{"value":"/ ID of the stream to query","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20859,"byte_end":20888,"line_start":41,"line_end":41,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1096},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21013,"byte_end":21018,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"range","qualname":"::eventstreams::StreamQuery::range","value":"std::option::Option<eventstreams::TimeRange>","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" An optional time range limiter on the results of the query\n","sig":null,"attributes":[{"value":"/ An optional time range limiter on the results of the query","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20920,"byte_end":20982,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":20987,"byte_end":21004,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1095},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21247,"byte_end":21252,"line_start":48,"line_end":48,"column_start":9,"column_end":14},"name":"count","qualname":"::eventstreams::StreamQuery::count","value":"u64","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" A maximum count to return from the query. 0 will return the maximum available\n (which may not include all events--consult the individual provider documentation to verify this behavior)\n","sig":null,"attributes":[{"value":"/ A maximum count to return from the query. 0 will return the maximum available","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21043,"byte_end":21124,"line_start":46,"line_end":46,"column_start":5,"column_end":86}},{"value":"/ (which may not include all events--consult the individual provider documentation to verify this behavior)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21129,"byte_end":21238,"line_start":47,"line_end":47,"column_start":5,"column_end":114}}]},{"kind":"Struct","id":{"krate":0,"index":1154},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21676,"byte_end":21689,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"StreamResults","qualname":"::eventstreams::StreamResults","value":"StreamResults { events }","parent":null,"children":[{"krate":0,"index":1155}],"decl_id":null,"docs":" Results of a stream query\n","sig":null,"attributes":[{"value":"/ Results of a stream query","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21541,"byte_end":21570,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21630,"byte_end":21664,"line_start":66,"line_end":66,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1155},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21771,"byte_end":21777,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"name":"events","qualname":"::eventstreams::StreamResults::events","value":"std::vec::Vec<eventstreams::Event>","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":" The list of events returned by the query\n","sig":null,"attributes":[{"value":"/ The list of events returned by the query","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21696,"byte_end":21740,"line_start":68,"line_end":68,"column_start":5,"column_end":49}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21745,"byte_end":21762,"line_start":69,"line_end":69,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1211},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21938,"byte_end":21947,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"TimeRange","qualname":"::eventstreams::TimeRange","value":"TimeRange { min_time, max_time }","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213}],"decl_id":null,"docs":" Represents a timeslice range for a stream\n","sig":null,"attributes":[{"value":"/ Represents a timeslice range for a stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21794,"byte_end":21839,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21892,"byte_end":21926,"line_start":75,"line_end":75,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":22064,"byte_end":22072,"line_start":78,"line_end":78,"column_start":9,"column_end":17},"name":"min_time","qualname":"::eventstreams::TimeRange::min_time","value":"u64","parent":{"krate":0,"index":1211},"children":[],"decl_id":null,"docs":" Minimum time after which events must have occurred to be in the results (seconds since the epoch)\n","sig":null,"attributes":[{"value":"/ Minimum time after which events must have occurred to be in the results (seconds since the epoch)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21954,"byte_end":22055,"line_start":77,"line_end":77,"column_start":5,"column_end":106}}]},{"kind":"Field","id":{"krate":0,"index":1213},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":22194,"byte_end":22202,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"max_time","qualname":"::eventstreams::TimeRange::max_time","value":"u64","parent":{"krate":0,"index":1211},"children":[],"decl_id":null,"docs":" Maximum time before which events must have occurred to be in the results (seconds since the epoch)\n","sig":null,"attributes":[{"value":"/ Maximum time before which events must have occurred to be in the results (seconds since the epoch)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":22083,"byte_end":22185,"line_start":79,"line_end":79,"column_start":5,"column_end":107}}]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"extras","qualname":"::extras","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":1269},{"krate":0,"index":1330},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1281},{"krate":0,"index":1275},{"krate":0,"index":1273},{"krate":0,"index":90},{"krate":0,"index":1332},{"krate":0,"index":1397},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1344},{"krate":0,"index":1338}],"decl_id":null,"docs":" # Extras","sig":null,"attributes":[{"value":"/ # Extras","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22212,"byte_end":22224,"line_start":1,"line_end":1,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22225,"byte_end":22228,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Miscellaneous operations that might be common across many different types of actors that","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22229,"byte_end":22321,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ shouldn't require a full capability provider plugin, like random numbers, sequence","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22322,"byte_end":22408,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ numbers, etc.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22409,"byte_end":22426,"line_start":5,"line_end":5,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":87},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22512,"byte_end":22527,"line_start":10,"line_end":10,"column_start":11,"column_end":26},"name":"OP_REQUEST_GUID","qualname":"::extras::OP_REQUEST_GUID","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation to request the generation of a GUID\n","sig":null,"attributes":[{"value":"/ The operation to request the generation of a GUID","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22448,"byte_end":22501,"line_start":9,"line_end":9,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":88},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22612,"byte_end":22631,"line_start":12,"line_end":12,"column_start":11,"column_end":30},"name":"OP_REQUEST_SEQUENCE","qualname":"::extras::OP_REQUEST_SEQUENCE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation to request a new sequence number\n","sig":null,"attributes":[{"value":"/ The operation to request a new sequence number","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22551,"byte_end":22601,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":89},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22737,"byte_end":22754,"line_start":14,"line_end":14,"column_start":11,"column_end":28},"name":"OP_REQUEST_RANDOM","qualname":"::extras::OP_REQUEST_RANDOM","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation to request a random number with an optional range\n","sig":null,"attributes":[{"value":"/ The operation to request a random number with an optional range","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22659,"byte_end":22726,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23122,"byte_end":23137,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"GeneratorResult","qualname":"::extras::GeneratorResult","value":"GeneratorResult { guid, sequence_number, random_number }","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"decl_id":null,"docs":" The results of a generation request. The struct has been flattened rather than\n using an enum variant in order to make serialization compatibility easier\n with other parsers that might not handle enums in a predictable way.\n","sig":null,"attributes":[{"value":"/ The results of a generation request. The struct has been flattened rather than","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22781,"byte_end":22863,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/ using an enum variant in order to make serialization compatibility easier","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22864,"byte_end":22941,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ with other parsers that might not handle enums in a predictable way.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":22942,"byte_end":23014,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23076,"byte_end":23110,"line_start":20,"line_end":20,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1270},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23189,"byte_end":23193,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"guid","qualname":"::extras::GeneratorResult::guid","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" The requested GUID, if it exists\n","sig":null,"attributes":[{"value":"/ The requested GUID, if it exists","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23144,"byte_end":23180,"line_start":22,"line_end":22,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1271},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23278,"byte_end":23293,"line_start":25,"line_end":25,"column_start":9,"column_end":24},"name":"sequence_number","qualname":"::extras::GeneratorResult::sequence_number","value":"u64","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" The requested sequence number (0 if not requested)\n","sig":null,"attributes":[{"value":"/ The requested sequence number (0 if not requested)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23215,"byte_end":23269,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1272},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23365,"byte_end":23378,"line_start":27,"line_end":27,"column_start":9,"column_end":22},"name":"random_number","qualname":"::extras::GeneratorResult::random_number","value":"u32","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":" The requested random number (0 if not requested)\n","sig":null,"attributes":[{"value":"/ The requested random number (0 if not requested)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23304,"byte_end":23356,"line_start":26,"line_end":26,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24043,"byte_end":24059,"line_start":47,"line_end":47,"column_start":12,"column_end":28},"name":"GeneratorRequest","qualname":"::extras::GeneratorRequest","value":"GeneratorRequest { guid, sequence, random, min, max }","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337}],"decl_id":null,"docs":" A request for the generation of numbers that standalone actors cannot\n normally produce because they require random numbers or cryptography\n libraries. This struct has been flattened and avoids enum variants\n to maintain a high level of msgpack serialization compatibility with\n other languages and parsers.\n","sig":null,"attributes":[{"value":"/ A request for the generation of numbers that standalone actors cannot","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23621,"byte_end":23694,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ normally produce because they require random numbers or cryptography","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23695,"byte_end":23767,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ libraries. This struct has been flattened and avoids enum variants","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23768,"byte_end":23838,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ to maintain a high level of msgpack serialization compatibility with","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23839,"byte_end":23911,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/ other languages and parsers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23912,"byte_end":23944,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23997,"byte_end":24031,"line_start":46,"line_end":46,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1333},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24109,"byte_end":24113,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"guid","qualname":"::extras::GeneratorRequest::guid","value":"bool","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" Indicates a request for a GUID\n","sig":null,"attributes":[{"value":"/ Indicates a request for a GUID","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24066,"byte_end":24100,"line_start":48,"line_end":48,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1334},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24179,"byte_end":24187,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"sequence","qualname":"::extras::GeneratorRequest::sequence","value":"bool","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" Indicates a request for a sequence number\n","sig":null,"attributes":[{"value":"/ Indicates a request for a sequence number","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24125,"byte_end":24170,"line_start":50,"line_end":50,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1335},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24251,"byte_end":24257,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"random","qualname":"::extras::GeneratorRequest::random","value":"bool","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" Indicates a request for a random number\n","sig":null,"attributes":[{"value":"/ Indicates a request for a random number","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24199,"byte_end":24242,"line_start":52,"line_end":52,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1336},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24323,"byte_end":24326,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"name":"min","qualname":"::extras::GeneratorRequest::min","value":"u32","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" Minimum value for a random number request\n","sig":null,"attributes":[{"value":"/ Minimum value for a random number request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24269,"byte_end":24314,"line_start":54,"line_end":54,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1337},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24391,"byte_end":24394,"line_start":57,"line_end":57,"column_start":9,"column_end":12},"name":"max","qualname":"::extras::GeneratorRequest::max","value":"u32","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" Maximum value for a random number request\n","sig":null,"attributes":[{"value":"/ Maximum value for a random number request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":24337,"byte_end":24382,"line_start":56,"line_end":56,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":92},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"http","qualname":"::http","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":1399},{"krate":0,"index":1493},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1421},{"krate":0,"index":1407},{"krate":0,"index":1405},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":1495},{"krate":0,"index":1586},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1516},{"krate":0,"index":1502},{"krate":0,"index":1500},{"krate":0,"index":101},{"krate":0,"index":103}],"decl_id":null,"docs":" # HTTP server capability data structures","sig":null,"attributes":[{"value":"/ # HTTP server capability data structures","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":24404,"byte_end":24448,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":24449,"byte_end":24452,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types for the `wascc:http_server` and `wascc:httpclient` capabilities","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":24453,"byte_end":24552,"line_start":3,"line_end":3,"column_start":1,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":96},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":24701,"byte_end":24719,"line_start":10,"line_end":10,"column_start":11,"column_end":29},"name":"OP_PERFORM_REQUEST","qualname":"::http::OP_PERFORM_REQUEST","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Operation invoked on a host to perform an HTTP request\n","sig":null,"attributes":[{"value":"/ Operation invoked on a host to perform an HTTP request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":24632,"byte_end":24690,"line_start":9,"line_end":9,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":97},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":24829,"byte_end":24846,"line_start":12,"line_end":12,"column_start":11,"column_end":28},"name":"OP_HANDLE_REQUEST","qualname":"::http::OP_HANDLE_REQUEST","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Operation invoked on an actor in response to an inbound HTTP request\n","sig":null,"attributes":[{"value":"/ Operation invoked on an actor in response to an inbound HTTP request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":24746,"byte_end":24818,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1399},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25010,"byte_end":25017,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"Request","qualname":"::http::Request","value":"Request { method, path, query_string, header, body }","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404}],"decl_id":null,"docs":" Describes an HTTP request\n","sig":null,"attributes":[{"value":"/ Describes an HTTP request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":24873,"byte_end":24902,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":24964,"byte_end":24998,"line_start":16,"line_end":16,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1400},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25076,"byte_end":25082,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"method","qualname":"::http::Request::method","value":"std::string::String","parent":{"krate":0,"index":1399},"children":[],"decl_id":null,"docs":" The HTTP method (e.g. GET, PUT, DELETE)\n","sig":null,"attributes":[{"value":"/ The HTTP method (e.g. GET, PUT, DELETE)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25024,"byte_end":25067,"line_start":18,"line_end":18,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1401},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25175,"byte_end":25179,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"path","qualname":"::http::Request::path","value":"std::string::String","parent":{"krate":0,"index":1399},"children":[],"decl_id":null,"docs":" The path or URL of the request, leading slashes may not be trimmed\n","sig":null,"attributes":[{"value":"/ The path or URL of the request, leading slashes may not be trimmed","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25096,"byte_end":25166,"line_start":20,"line_end":20,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1402},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25241,"byte_end":25253,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"name":"query_string","qualname":"::http::Request::query_string","value":"std::string::String","parent":{"krate":0,"index":1399},"children":[],"decl_id":null,"docs":" The query string portion of the URL\n","sig":null,"attributes":[{"value":"/ The query string portion of the URL","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25193,"byte_end":25232,"line_start":22,"line_end":22,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1403},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25349,"byte_end":25355,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"header","qualname":"::http::Request::header","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1399},"children":[],"decl_id":null,"docs":" The request headers as a map of key-value pairs\n","sig":null,"attributes":[{"value":"/ The request headers as a map of key-value pairs","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25267,"byte_end":25318,"line_start":24,"line_end":24,"column_start":5,"column_end":56}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25323,"byte_end":25340,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1404},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25489,"byte_end":25493,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"body","qualname":"::http::Request::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1399},"children":[],"decl_id":null,"docs":" The raw bytes of the request body\n","sig":null,"attributes":[{"value":"/ The raw bytes of the request body","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25386,"byte_end":25423,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"serde(with = \"serde_bytes\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25428,"byte_end":25458,"line_start":28,"line_end":28,"column_start":5,"column_end":35}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25463,"byte_end":25480,"line_start":29,"line_end":29,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1495},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26177,"byte_end":26185,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"Response","qualname":"::http::Response","value":"Response { status_code, status, header, body }","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499}],"decl_id":null,"docs":" Represents an HTTP response\n","sig":null,"attributes":[{"value":"/ Represents an HTTP response","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26038,"byte_end":26069,"line_start":53,"line_end":53,"column_start":1,"column_end":32}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26131,"byte_end":26165,"line_start":55,"line_end":55,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1496},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26252,"byte_end":26263,"line_start":58,"line_end":58,"column_start":9,"column_end":20},"name":"status_code","qualname":"::http::Response::status_code","value":"u32","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":" The response's numerical status code (e.g. 200)\n","sig":null,"attributes":[{"value":"/ The response's numerical status code (e.g. 200)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26192,"byte_end":26243,"line_start":57,"line_end":57,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1497},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26331,"byte_end":26337,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"status","qualname":"::http::Response::status","value":"std::string::String","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":" The string version of the status (e.g. 'OK')\n","sig":null,"attributes":[{"value":"/ The string version of the status (e.g. 'OK')","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26274,"byte_end":26322,"line_start":59,"line_end":59,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1498},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26427,"byte_end":26433,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"name":"header","qualname":"::http::Response::header","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":" HTTP response headers as key-value pairs.\n","sig":null,"attributes":[{"value":"/ HTTP response headers as key-value pairs.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26373,"byte_end":26418,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26351,"byte_end":26368,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1499},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26559,"byte_end":26563,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"name":"body","qualname":"::http::Response::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":" The raw bytes of the body\n","sig":null,"attributes":[{"value":"/ The raw bytes of the body","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26464,"byte_end":26493,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"serde(with = \"serde_bytes\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26498,"byte_end":26528,"line_start":65,"line_end":65,"column_start":5,"column_end":35}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26533,"byte_end":26550,"line_start":66,"line_end":66,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26955,"byte_end":26959,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"json","qualname":"<Response>::json","value":"pub fn json<T>(T, u32, &str) -> Response where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Creates a response with a given status code and serializes the given payload as JSON\n","sig":null,"attributes":[{"value":"/ Creates a response with a given status code and serializes the given payload as JSON","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26855,"byte_end":26943,"line_start":82,"line_end":82,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":27339,"byte_end":27348,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"not_found","qualname":"<Response>::not_found","value":"pub fn not_found() -> Response","parent":null,"children":[],"decl_id":null,"docs":" Handy shortcut for creating a 404/Not Found response\n","sig":null,"attributes":[{"value":"/ Handy shortcut for creating a 404/Not Found response","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":27271,"byte_end":27327,"line_start":95,"line_end":95,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":27575,"byte_end":27577,"line_start":105,"line_end":105,"column_start":12,"column_end":14},"name":"ok","qualname":"<Response>::ok","value":"pub fn ok() -> Response","parent":null,"children":[],"decl_id":null,"docs":" Useful shortcut for creating a 200/OK response\n","sig":null,"attributes":[{"value":"/ Useful shortcut for creating a 200/OK response","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":27513,"byte_end":27563,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":27816,"byte_end":27837,"line_start":114,"line_end":114,"column_start":12,"column_end":33},"name":"internal_server_error","qualname":"<Response>::internal_server_error","value":"pub fn internal_server_error(&str) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Useful shortcut for creating a 500/Internal Server Error response\n","sig":null,"attributes":[{"value":"/ Useful shortcut for creating a 500/Internal Server Error response","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":27735,"byte_end":27804,"line_start":113,"line_end":113,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":28140,"byte_end":28151,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"bad_request","qualname":"<Response>::bad_request","value":"pub fn bad_request() -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shortcut for creating a 400/Bad Request response\n","sig":null,"attributes":[{"value":"/ Shortcut for creating a 400/Bad Request response","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":28076,"byte_end":28128,"line_start":123,"line_end":123,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":110},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"keyvalue","qualname":"::keyvalue","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":1588},{"krate":0,"index":1641},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1596},{"krate":0,"index":1590},{"krate":0,"index":1643},{"krate":0,"index":1699},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1652},{"krate":0,"index":1646},{"krate":0,"index":1701},{"krate":0,"index":1760},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1711},{"krate":0,"index":1705},{"krate":0,"index":126},{"krate":0,"index":1762},{"krate":0,"index":1815},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1770},{"krate":0,"index":1764},{"krate":0,"index":1817},{"krate":0,"index":1870},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1825},{"krate":0,"index":1819},{"krate":0,"index":1872},{"krate":0,"index":1925},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1880},{"krate":0,"index":1874},{"krate":0,"index":1927},{"krate":0,"index":1983},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1936},{"krate":0,"index":1930},{"krate":0,"index":1985},{"krate":0,"index":2038},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":1993},{"krate":0,"index":1987},{"krate":0,"index":2040},{"krate":0,"index":2096},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2049},{"krate":0,"index":2043},{"krate":0,"index":2098},{"krate":0,"index":2154},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2107},{"krate":0,"index":2101},{"krate":0,"index":2156},{"krate":0,"index":2209},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2164},{"krate":0,"index":2158},{"krate":0,"index":2211},{"krate":0,"index":2270},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2221},{"krate":0,"index":2215},{"krate":0,"index":2272},{"krate":0,"index":2325},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2280},{"krate":0,"index":2274},{"krate":0,"index":2327},{"krate":0,"index":2380},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2335},{"krate":0,"index":2329},{"krate":0,"index":2382},{"krate":0,"index":2438},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2391},{"krate":0,"index":2385},{"krate":0,"index":2440},{"krate":0,"index":2496},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2449},{"krate":0,"index":2443},{"krate":0,"index":2498},{"krate":0,"index":2551},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2506},{"krate":0,"index":2500},{"krate":0,"index":2553},{"krate":0,"index":2606},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2561},{"krate":0,"index":2555},{"krate":0,"index":2608},{"krate":0,"index":2661},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2616},{"krate":0,"index":2610},{"krate":0,"index":2663},{"krate":0,"index":2716},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2671},{"krate":0,"index":2665},{"krate":0,"index":2718},{"krate":0,"index":2771},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2726},{"krate":0,"index":2720},{"krate":0,"index":2773},{"krate":0,"index":2826},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2781},{"krate":0,"index":2775}],"decl_id":null,"docs":" # Key-Value Store Data Types","sig":null,"attributes":[{"value":"/ # Key-Value Store Data Types","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28316,"byte_end":28348,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28349,"byte_end":28352,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types for the `wascc:keyvalue` capability provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28353,"byte_end":28433,"line_start":3,"line_end":3,"column_start":1,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":112},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28465,"byte_end":28471,"line_start":7,"line_end":7,"column_start":11,"column_end":17},"name":"OP_ADD","qualname":"::keyvalue::OP_ADD","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":113},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28497,"byte_end":28503,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"OP_GET","qualname":"::keyvalue::OP_GET","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":114},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28529,"byte_end":28535,"line_start":9,"line_end":9,"column_start":11,"column_end":17},"name":"OP_SET","qualname":"::keyvalue::OP_SET","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":115},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28561,"byte_end":28567,"line_start":10,"line_end":10,"column_start":11,"column_end":17},"name":"OP_DEL","qualname":"::keyvalue::OP_DEL","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":116},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28593,"byte_end":28601,"line_start":11,"line_end":11,"column_start":11,"column_end":19},"name":"OP_CLEAR","qualname":"::keyvalue::OP_CLEAR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":117},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28629,"byte_end":28637,"line_start":12,"line_end":12,"column_start":11,"column_end":19},"name":"OP_RANGE","qualname":"::keyvalue::OP_RANGE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":118},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28665,"byte_end":28672,"line_start":13,"line_end":13,"column_start":11,"column_end":18},"name":"OP_PUSH","qualname":"::keyvalue::OP_PUSH","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":119},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28699,"byte_end":28710,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"OP_LIST_DEL","qualname":"::keyvalue::OP_LIST_DEL","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":120},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28748,"byte_end":28758,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"OP_SET_ADD","qualname":"::keyvalue::OP_SET_ADD","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":121},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28787,"byte_end":28800,"line_start":17,"line_end":17,"column_start":11,"column_end":24},"name":"OP_SET_REMOVE","qualname":"::keyvalue::OP_SET_REMOVE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":122},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28832,"byte_end":28844,"line_start":18,"line_end":18,"column_start":11,"column_end":23},"name":"OP_SET_UNION","qualname":"::keyvalue::OP_SET_UNION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":123},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28875,"byte_end":28891,"line_start":19,"line_end":19,"column_start":11,"column_end":27},"name":"OP_SET_INTERSECT","qualname":"::keyvalue::OP_SET_INTERSECT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":124},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28929,"byte_end":28941,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"OP_SET_QUERY","qualname":"::keyvalue::OP_SET_QUERY","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":125},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":28972,"byte_end":28985,"line_start":21,"line_end":21,"column_start":11,"column_end":24},"name":"OP_KEY_EXISTS","qualname":"::keyvalue::OP_KEY_EXISTS","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29161,"byte_end":29171,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"GetRequest","qualname":"::keyvalue::GetRequest","value":"GetRequest { key }","parent":null,"children":[{"krate":0,"index":1589}],"decl_id":null,"docs":" A request to get a single value from the K/V store\n","sig":null,"attributes":[{"value":"/ A request to get a single value from the K/V store","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29008,"byte_end":29062,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29115,"byte_end":29149,"line_start":25,"line_end":25,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1589},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29182,"byte_end":29185,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::GetRequest::key","value":"std::string::String","parent":{"krate":0,"index":1588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1643},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29328,"byte_end":29339,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"GetResponse","qualname":"::keyvalue::GetResponse","value":"GetResponse { value, exists }","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645}],"decl_id":null,"docs":" The result of a get request\n","sig":null,"attributes":[{"value":"/ The result of a get request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29198,"byte_end":29229,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29282,"byte_end":29316,"line_start":32,"line_end":32,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1644},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29397,"byte_end":29402,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::GetResponse::value","value":"std::string::String","parent":{"krate":0,"index":1643},"children":[],"decl_id":null,"docs":" The value returned from the data store\n","sig":null,"attributes":[{"value":"/ The value returned from the data store","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29346,"byte_end":29388,"line_start":34,"line_end":34,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1645},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29462,"byte_end":29468,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"exists","qualname":"::keyvalue::GetResponse::exists","value":"bool","parent":{"krate":0,"index":1643},"children":[],"decl_id":null,"docs":" Indicates whether the key existed\n","sig":null,"attributes":[{"value":"/ Indicates whether the key existed","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29416,"byte_end":29453,"line_start":36,"line_end":36,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1701},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29606,"byte_end":29616,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"SetRequest","qualname":"::keyvalue::SetRequest","value":"SetRequest { key, value, expires_s }","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704}],"decl_id":null,"docs":" A request to set a value\n","sig":null,"attributes":[{"value":"/ A request to set a value","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29479,"byte_end":29507,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29560,"byte_end":29594,"line_start":42,"line_end":42,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1702},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29658,"byte_end":29661,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::SetRequest::key","value":"std::string::String","parent":{"krate":0,"index":1701},"children":[],"decl_id":null,"docs":" Key of the item to set\n","sig":null,"attributes":[{"value":"/ Key of the item to set","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29623,"byte_end":29649,"line_start":44,"line_end":44,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1703},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29712,"byte_end":29717,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::SetRequest::value","value":"std::string::String","parent":{"krate":0,"index":1701},"children":[],"decl_id":null,"docs":" Value of the item to set\n","sig":null,"attributes":[{"value":"/ Value of the item to set","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29675,"byte_end":29703,"line_start":46,"line_end":46,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1704},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29835,"byte_end":29844,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"name":"expires_s","qualname":"::keyvalue::SetRequest::expires_s","value":"i32","parent":{"krate":0,"index":1701},"children":[],"decl_id":null,"docs":" Seconds after which the key will expire, 0 - no expiration\n","sig":null,"attributes":[{"value":"/ Seconds after which the key will expire, 0 - no expiration","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29731,"byte_end":29793,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"serde(rename = \"expires\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29798,"byte_end":29826,"line_start":49,"line_end":49,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1762},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30183,"byte_end":30193,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"DelRequest","qualname":"::keyvalue::DelRequest","value":"DelRequest { key }","parent":null,"children":[{"krate":0,"index":1763}],"decl_id":null,"docs":" A request to delete a key\n","sig":null,"attributes":[{"value":"/ A request to delete a key","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30055,"byte_end":30084,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30137,"byte_end":30171,"line_start":65,"line_end":65,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1763},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30204,"byte_end":30207,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::DelRequest::key","value":"std::string::String","parent":{"krate":0,"index":1762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1817},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30318,"byte_end":30329,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"DelResponse","qualname":"::keyvalue::DelResponse","value":"DelResponse { key }","parent":null,"children":[{"krate":0,"index":1818}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30272,"byte_end":30306,"line_start":71,"line_end":71,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1818},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30340,"byte_end":30343,"line_start":73,"line_end":73,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::DelResponse::key","value":"std::string::String","parent":{"krate":0,"index":1817},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1872},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30484,"byte_end":30495,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"SetResponse","qualname":"::keyvalue::SetResponse","value":"SetResponse { value }","parent":null,"children":[{"krate":0,"index":1873}],"decl_id":null,"docs":" Response to a set request\n","sig":null,"attributes":[{"value":"/ Response to a set request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30356,"byte_end":30385,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30438,"byte_end":30472,"line_start":78,"line_end":78,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1873},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30506,"byte_end":30511,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::SetResponse::value","value":"std::string::String","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1927},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30671,"byte_end":30681,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"AddRequest","qualname":"::keyvalue::AddRequest","value":"AddRequest { key, value }","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929}],"decl_id":null,"docs":" A request to perform an atomic add operation\n","sig":null,"attributes":[{"value":"/ A request to perform an atomic add operation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30524,"byte_end":30572,"line_start":83,"line_end":83,"column_start":1,"column_end":49}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30625,"byte_end":30659,"line_start":85,"line_end":85,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1928},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30692,"byte_end":30695,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::AddRequest::key","value":"std::string::String","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1929},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30713,"byte_end":30718,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::AddRequest::value","value":"i32","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1985},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30864,"byte_end":30875,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"AddResponse","qualname":"::keyvalue::AddResponse","value":"AddResponse { value }","parent":null,"children":[{"krate":0,"index":1986}],"decl_id":null,"docs":" Result of an atomic add operation\n","sig":null,"attributes":[{"value":"/ Result of an atomic add operation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30728,"byte_end":30765,"line_start":91,"line_end":91,"column_start":1,"column_end":38}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30818,"byte_end":30852,"line_start":93,"line_end":93,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1986},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30886,"byte_end":30891,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::AddResponse::value","value":"i32","parent":{"krate":0,"index":1985},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2040},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31049,"byte_end":31064,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"ListPushRequest","qualname":"::keyvalue::ListPushRequest","value":"ListPushRequest { key, value }","parent":null,"children":[{"krate":0,"index":2041},{"krate":0,"index":2042}],"decl_id":null,"docs":" A request to add an item to the end of a list\n","sig":null,"attributes":[{"value":"/ A request to add an item to the end of a list","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":30901,"byte_end":30950,"line_start":98,"line_end":98,"column_start":1,"column_end":50}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31003,"byte_end":31037,"line_start":100,"line_end":100,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2041},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31075,"byte_end":31078,"line_start":102,"line_end":102,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::ListPushRequest::key","value":"std::string::String","parent":{"krate":0,"index":2040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2042},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31096,"byte_end":31101,"line_start":103,"line_end":103,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::ListPushRequest::value","value":"std::string::String","parent":{"krate":0,"index":2040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2098},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31274,"byte_end":31292,"line_start":109,"line_end":109,"column_start":12,"column_end":30},"name":"ListDelItemRequest","qualname":"::keyvalue::ListDelItemRequest","value":"ListDelItemRequest { key, value }","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100}],"decl_id":null,"docs":" A request to delete all occurences of an item from a list\n","sig":null,"attributes":[{"value":"/ A request to delete all occurences of an item from a list","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31114,"byte_end":31175,"line_start":106,"line_end":106,"column_start":1,"column_end":62}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31228,"byte_end":31262,"line_start":108,"line_end":108,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2099},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31303,"byte_end":31306,"line_start":110,"line_end":110,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::ListDelItemRequest::key","value":"std::string::String","parent":{"krate":0,"index":2098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2100},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31324,"byte_end":31329,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::ListDelItemRequest::value","value":"std::string::String","parent":{"krate":0,"index":2098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2156},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31485,"byte_end":31501,"line_start":117,"line_end":117,"column_start":12,"column_end":28},"name":"ListClearRequest","qualname":"::keyvalue::ListClearRequest","value":"ListClearRequest { key }","parent":null,"children":[{"krate":0,"index":2157}],"decl_id":null,"docs":" A request to clear a list at a given key\n","sig":null,"attributes":[{"value":"/ A request to clear a list at a given key","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31342,"byte_end":31386,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31439,"byte_end":31473,"line_start":116,"line_end":116,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2157},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31512,"byte_end":31515,"line_start":118,"line_end":118,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::ListClearRequest::key","value":"std::string::String","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2211},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31682,"byte_end":31698,"line_start":124,"line_end":124,"column_start":12,"column_end":28},"name":"ListRangeRequest","qualname":"::keyvalue::ListRangeRequest","value":"ListRangeRequest { key, start, stop }","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214}],"decl_id":null,"docs":" A request to retrieve a range of values from a list\n","sig":null,"attributes":[{"value":"/ A request to retrieve a range of values from a list","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31528,"byte_end":31583,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31636,"byte_end":31670,"line_start":123,"line_end":123,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2212},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31709,"byte_end":31712,"line_start":125,"line_end":125,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::ListRangeRequest::key","value":"std::string::String","parent":{"krate":0,"index":2211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2213},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31730,"byte_end":31735,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"name":"start","qualname":"::keyvalue::ListRangeRequest::start","value":"i32","parent":{"krate":0,"index":2211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2214},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31750,"byte_end":31754,"line_start":127,"line_end":127,"column_start":9,"column_end":13},"name":"stop","qualname":"::keyvalue::ListRangeRequest::stop","value":"i32","parent":{"krate":0,"index":2211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2272},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31911,"byte_end":31928,"line_start":133,"line_end":133,"column_start":12,"column_end":29},"name":"ListRangeResponse","qualname":"::keyvalue::ListRangeResponse","value":"ListRangeResponse { values }","parent":null,"children":[{"krate":0,"index":2273}],"decl_id":null,"docs":" List of values returned from a range request\n","sig":null,"attributes":[{"value":"/ List of values returned from a range request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31764,"byte_end":31812,"line_start":130,"line_end":130,"column_start":1,"column_end":49}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31865,"byte_end":31899,"line_start":132,"line_end":132,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2273},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31961,"byte_end":31967,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"name":"values","qualname":"::keyvalue::ListRangeResponse::values","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31935,"byte_end":31952,"line_start":134,"line_end":134,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2327},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32152,"byte_end":32164,"line_start":141,"line_end":141,"column_start":12,"column_end":24},"name":"ListResponse","qualname":"::keyvalue::ListResponse","value":"ListResponse { new_count }","parent":null,"children":[{"krate":0,"index":2328}],"decl_id":null,"docs":" Return response from non-range list requests like push and clear\n","sig":null,"attributes":[{"value":"/ Return response from non-range list requests like push and clear","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":31985,"byte_end":32053,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32106,"byte_end":32140,"line_start":140,"line_end":140,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2328},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32175,"byte_end":32184,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"name":"new_count","qualname":"::keyvalue::ListResponse::new_count","value":"i32","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2382},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32328,"byte_end":32341,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"SetAddRequest","qualname":"::keyvalue::SetAddRequest","value":"SetAddRequest { key, value }","parent":null,"children":[{"krate":0,"index":2383},{"krate":0,"index":2384}],"decl_id":null,"docs":" Request to add an item to a set\n","sig":null,"attributes":[{"value":"/ Request to add an item to a set","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32194,"byte_end":32229,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32282,"byte_end":32316,"line_start":147,"line_end":147,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2383},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32352,"byte_end":32355,"line_start":149,"line_end":149,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::SetAddRequest::key","value":"std::string::String","parent":{"krate":0,"index":2382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2384},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32373,"byte_end":32378,"line_start":150,"line_end":150,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::SetAddRequest::value","value":"std::string::String","parent":{"krate":0,"index":2382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2440},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32539,"byte_end":32555,"line_start":156,"line_end":156,"column_start":12,"column_end":28},"name":"SetRemoveRequest","qualname":"::keyvalue::SetRemoveRequest","value":"SetRemoveRequest { key, value }","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442}],"decl_id":null,"docs":" Request to remove a specific value from a set\n","sig":null,"attributes":[{"value":"/ Request to remove a specific value from a set","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32391,"byte_end":32440,"line_start":153,"line_end":153,"column_start":1,"column_end":50}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32493,"byte_end":32527,"line_start":155,"line_end":155,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2441},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32566,"byte_end":32569,"line_start":157,"line_end":157,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::SetRemoveRequest::key","value":"std::string::String","parent":{"krate":0,"index":2440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2442},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32587,"byte_end":32592,"line_start":158,"line_end":158,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::SetRemoveRequest::value","value":"std::string::String","parent":{"krate":0,"index":2440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2498},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32746,"byte_end":32761,"line_start":164,"line_end":164,"column_start":12,"column_end":27},"name":"SetQueryRequest","qualname":"::keyvalue::SetQueryRequest","value":"SetQueryRequest { key }","parent":null,"children":[{"krate":0,"index":2499}],"decl_id":null,"docs":" Request to query the contents of a set\n","sig":null,"attributes":[{"value":"/ Request to query the contents of a set","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32605,"byte_end":32647,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32700,"byte_end":32734,"line_start":163,"line_end":163,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2499},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32772,"byte_end":32775,"line_start":165,"line_end":165,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::SetQueryRequest::key","value":"std::string::String","parent":{"krate":0,"index":2498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2553},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32973,"byte_end":32989,"line_start":171,"line_end":171,"column_start":12,"column_end":28},"name":"SetQueryResponse","qualname":"::keyvalue::SetQueryResponse","value":"SetQueryResponse { values }","parent":null,"children":[{"krate":0,"index":2554}],"decl_id":null,"docs":" Response to an operation that requests members of a list (query, intersect, union)\n","sig":null,"attributes":[{"value":"/ Response to an operation that requests members of a list (query, intersect, union)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32788,"byte_end":32874,"line_start":168,"line_end":168,"column_start":1,"column_end":87}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32927,"byte_end":32961,"line_start":170,"line_end":170,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2554},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33022,"byte_end":33028,"line_start":173,"line_end":173,"column_start":9,"column_end":15},"name":"values","qualname":"::keyvalue::SetQueryResponse::values","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":32996,"byte_end":33013,"line_start":172,"line_end":172,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2608},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33194,"byte_end":33216,"line_start":179,"line_end":179,"column_start":12,"column_end":34},"name":"SetIntersectionRequest","qualname":"::keyvalue::SetIntersectionRequest","value":"SetIntersectionRequest { keys }","parent":null,"children":[{"krate":0,"index":2609}],"decl_id":null,"docs":" Request for the intersection of multiple sets\n","sig":null,"attributes":[{"value":"/ Request for the intersection of multiple sets","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33046,"byte_end":33095,"line_start":176,"line_end":176,"column_start":1,"column_end":50}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33148,"byte_end":33182,"line_start":178,"line_end":178,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2609},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33249,"byte_end":33253,"line_start":181,"line_end":181,"column_start":9,"column_end":13},"name":"keys","qualname":"::keyvalue::SetIntersectionRequest::keys","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33223,"byte_end":33240,"line_start":180,"line_end":180,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2663},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33412,"byte_end":33427,"line_start":187,"line_end":187,"column_start":12,"column_end":27},"name":"SetUnionRequest","qualname":"::keyvalue::SetUnionRequest","value":"SetUnionRequest { keys }","parent":null,"children":[{"krate":0,"index":2664}],"decl_id":null,"docs":" Request for the union of multiple sets\n","sig":null,"attributes":[{"value":"/ Request for the union of multiple sets","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33271,"byte_end":33313,"line_start":184,"line_end":184,"column_start":1,"column_end":43}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33366,"byte_end":33400,"line_start":186,"line_end":186,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2664},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33460,"byte_end":33464,"line_start":189,"line_end":189,"column_start":9,"column_end":13},"name":"keys","qualname":"::keyvalue::SetUnionRequest::keys","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33434,"byte_end":33451,"line_start":188,"line_end":188,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2718},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33624,"byte_end":33644,"line_start":195,"line_end":195,"column_start":12,"column_end":32},"name":"SetOperationResponse","qualname":"::keyvalue::SetOperationResponse","value":"SetOperationResponse { new_count }","parent":null,"children":[{"krate":0,"index":2719}],"decl_id":null,"docs":" Response to a set query, add, or delete\n","sig":null,"attributes":[{"value":"/ Response to a set query, add, or delete","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33482,"byte_end":33525,"line_start":192,"line_end":192,"column_start":1,"column_end":44}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33578,"byte_end":33612,"line_start":194,"line_end":194,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2719},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33655,"byte_end":33664,"line_start":196,"line_end":196,"column_start":9,"column_end":18},"name":"new_count","qualname":"::keyvalue::SetOperationResponse::new_count","value":"i32","parent":{"krate":0,"index":2718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2773},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33808,"byte_end":33822,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"KeyExistsQuery","qualname":"::keyvalue::KeyExistsQuery","value":"KeyExistsQuery { key }","parent":null,"children":[{"krate":0,"index":2774}],"decl_id":null,"docs":" Test for the existence of a key\n","sig":null,"attributes":[{"value":"/ Test for the existence of a key","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33674,"byte_end":33709,"line_start":199,"line_end":199,"column_start":1,"column_end":36}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33762,"byte_end":33796,"line_start":201,"line_end":201,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2774},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":33833,"byte_end":33836,"line_start":203,"line_end":203,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::KeyExistsQuery::key","value":"std::string::String","parent":{"krate":0,"index":2773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"logging","qualname":"::logging","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":2828},{"krate":0,"index":2884},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2837},{"krate":0,"index":2831},{"krate":0,"index":131}],"decl_id":null,"docs":" # Logging Data Types","sig":null,"attributes":[{"value":"/ # Logging Data Types","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":33849,"byte_end":33873,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":33874,"byte_end":33877,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types for the `wascc:logging` capability provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":33878,"byte_end":33957,"line_start":3,"line_end":3,"column_start":1,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":130},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34029,"byte_end":34035,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"OP_LOG","qualname":"::logging::OP_LOG","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" An operation to request a log write\n","sig":null,"attributes":[{"value":"/ An operation to request a log write","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":33979,"byte_end":34018,"line_start":7,"line_end":7,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2828},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34449,"byte_end":34464,"line_start":16,"line_end":16,"column_start":12,"column_end":27},"name":"WriteLogRequest","qualname":"::logging::WriteLogRequest","value":"WriteLogRequest { level, body }","parent":null,"children":[{"krate":0,"index":2829},{"krate":0,"index":2830}],"decl_id":null,"docs":" Represents a request to write a log entry. Use this type of log entry if you are\n pulling or aggregating logs on a per-actor basis from the host. If you just need\n to dump debug information to the log, use the built-in simple `println` or `consoleLog`\n function from the actor API\n","sig":null,"attributes":[{"value":"/ Represents a request to write a log entry. Use this type of log entry if you are","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34057,"byte_end":34141,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"/ pulling or aggregating logs on a per-actor basis from the host. If you just need","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34142,"byte_end":34226,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/ to dump debug information to the log, use the built-in simple `println` or `consoleLog`","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34227,"byte_end":34318,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ function from the actor API","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34319,"byte_end":34350,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34403,"byte_end":34437,"line_start":15,"line_end":15,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2829},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34590,"byte_end":34595,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"level","qualname":"::logging::WriteLogRequest::level","value":"u32","parent":{"krate":0,"index":2828},"children":[],"decl_id":null,"docs":" Corresponds to the log level","sig":null,"attributes":[{"value":"/ Corresponds to the log level","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34471,"byte_end":34503,"line_start":17,"line_end":17,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34508,"byte_end":34511,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ \"OFF\"=0 , \"ERROR\"=1, \"WARN\"=2, \"INFO\"=3, \"DEBUG\"=4, \"TRACE\"=5","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34516,"byte_end":34581,"line_start":19,"line_end":19,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2830},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34671,"byte_end":34675,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"body","qualname":"::logging::WriteLogRequest::body","value":"std::string::String","parent":{"krate":0,"index":2828},"children":[],"decl_id":null,"docs":" A string that represents the body of the log message\n","sig":null,"attributes":[{"value":"/ A string that represents the body of the log message","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34606,"byte_end":34662,"line_start":21,"line_end":21,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":133},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"messaging","qualname":"::messaging","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":2886},{"krate":0,"index":2972},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2904},{"krate":0,"index":2890},{"krate":0,"index":2974},{"krate":0,"index":3060},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":2992},{"krate":0,"index":2978},{"krate":0,"index":138}],"decl_id":null,"docs":" # Message Broker Data Types","sig":null,"attributes":[{"value":"/ # Message Broker Data Types","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":34872,"byte_end":34903,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":34904,"byte_end":34907,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types for the `wascc:messaging` capability provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":34908,"byte_end":34989,"line_start":3,"line_end":3,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":135},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35074,"byte_end":35092,"line_start":8,"line_end":8,"column_start":11,"column_end":29},"name":"OP_PUBLISH_MESSAGE","qualname":"::messaging::OP_PUBLISH_MESSAGE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation to publish a message from an actor\n","sig":null,"attributes":[{"value":"/ The operation to publish a message from an actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35011,"byte_end":35063,"line_start":7,"line_end":7,"column_start":1,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":136},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35173,"byte_end":35191,"line_start":10,"line_end":10,"column_start":11,"column_end":29},"name":"OP_DELIVER_MESSAGE","qualname":"::messaging::OP_DELIVER_MESSAGE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation to deliver a message to an actor\n","sig":null,"attributes":[{"value":"/ The operation to deliver a message to an actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35112,"byte_end":35162,"line_start":9,"line_end":9,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":137},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35296,"byte_end":35314,"line_start":12,"line_end":12,"column_start":11,"column_end":29},"name":"OP_PERFORM_REQUEST","qualname":"::messaging::OP_PERFORM_REQUEST","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation for an actor to perform a request-reply operation\n","sig":null,"attributes":[{"value":"/ The operation for an actor to perform a request-reply operation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35218,"byte_end":35285,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2886},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35474,"byte_end":35487,"line_start":17,"line_end":17,"column_start":12,"column_end":25},"name":"BrokerMessage","qualname":"::messaging::BrokerMessage","value":"BrokerMessage { subject, reply_to, body }","parent":null,"children":[{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889}],"decl_id":null,"docs":" A representation of a broker message\n","sig":null,"attributes":[{"value":"/ A representation of a broker message","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35335,"byte_end":35375,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35428,"byte_end":35462,"line_start":16,"line_end":16,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2887},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35535,"byte_end":35542,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"subject","qualname":"::messaging::BrokerMessage::subject","value":"std::string::String","parent":{"krate":0,"index":2886},"children":[],"decl_id":null,"docs":" The message subject or topic\n","sig":null,"attributes":[{"value":"/ The message subject or topic","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35494,"byte_end":35526,"line_start":18,"line_end":18,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2888},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35651,"byte_end":35659,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"reply_to","qualname":"::messaging::BrokerMessage::reply_to","value":"std::string::String","parent":{"krate":0,"index":2886},"children":[],"decl_id":null,"docs":" The reply-to field of the subject. This will be empty if there is no reply subject\n","sig":null,"attributes":[{"value":"/ The reply-to field of the subject. This will be empty if there is no reply subject","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35556,"byte_end":35642,"line_start":20,"line_end":20,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":2889},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35832,"byte_end":35836,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"name":"body","qualname":"::messaging::BrokerMessage::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2886},"children":[],"decl_id":null,"docs":" The raw bytes of the message. Encoding/contents is determined by applications out of band\n","sig":null,"attributes":[{"value":"/ The raw bytes of the message. Encoding/contents is determined by applications out of band","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35673,"byte_end":35766,"line_start":22,"line_end":22,"column_start":5,"column_end":98}},{"value":"serde(with = \"serde_bytes\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35771,"byte_end":35801,"line_start":23,"line_end":23,"column_start":5,"column_end":35}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35806,"byte_end":35823,"line_start":24,"line_end":24,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2974},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36099,"byte_end":36113,"line_start":32,"line_end":32,"column_start":12,"column_end":26},"name":"RequestMessage","qualname":"::messaging::RequestMessage","value":"RequestMessage { subject, body, timeout_ms }","parent":null,"children":[{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977}],"decl_id":null,"docs":" A request for the broker to make a request-and-reply publication. Inbox management\n is handled by the provider implementation, not by the actor\n","sig":null,"attributes":[{"value":"/ A request for the broker to make a request-and-reply publication. Inbox management","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35850,"byte_end":35936,"line_start":28,"line_end":28,"column_start":1,"column_end":87}},{"value":"/ is handled by the provider implementation, not by the actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":35937,"byte_end":36000,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36053,"byte_end":36087,"line_start":31,"line_end":31,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2975},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36172,"byte_end":36179,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"subject","qualname":"::messaging::RequestMessage::subject","value":"std::string::String","parent":{"krate":0,"index":2974},"children":[],"decl_id":null,"docs":" Subject on which to publish the request\n","sig":null,"attributes":[{"value":"/ Subject on which to publish the request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36120,"byte_end":36163,"line_start":33,"line_end":33,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2976},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36294,"byte_end":36298,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"body","qualname":"::messaging::RequestMessage::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2974},"children":[],"decl_id":null,"docs":" Raw body of the request message\n","sig":null,"attributes":[{"value":"/ Raw body of the request message","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36193,"byte_end":36228,"line_start":35,"line_end":35,"column_start":5,"column_end":40}},{"value":"serde(with = \"serde_bytes\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36233,"byte_end":36263,"line_start":36,"line_end":36,"column_start":5,"column_end":35}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36268,"byte_end":36285,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2977},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36419,"byte_end":36429,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"name":"timeout_ms","qualname":"::messaging::RequestMessage::timeout_ms","value":"i64","parent":{"krate":0,"index":2974},"children":[],"decl_id":null,"docs":" The timeout (milliseconds) to await a reply before giving up\n","sig":null,"attributes":[{"value":"/ The timeout (milliseconds) to await a reply before giving up","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36313,"byte_end":36377,"line_start":39,"line_end":39,"column_start":5,"column_end":69}},{"value":"serde(rename = \"timeout\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36382,"byte_end":36410,"line_start":40,"line_end":40,"column_start":5,"column_end":33}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5210,"byte_end":5219,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5943,"byte_end":5956,"line_start":81,"line_end":81,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10083,"byte_end":10103,"line_start":54,"line_end":54,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10383,"byte_end":10410,"line_start":66,"line_end":66,"column_start":6,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13271,"byte_end":13290,"line_start":152,"line_end":152,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14160,"byte_end":14174,"line_start":179,"line_end":179,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14269,"byte_end":14283,"line_start":185,"line_end":185,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21278,"byte_end":21289,"line_start":51,"line_end":51,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23404,"byte_end":23419,"line_start":30,"line_end":30,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25523,"byte_end":25530,"line_start":33,"line_end":33,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26593,"byte_end":26601,"line_start":70,"line_end":70,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26840,"byte_end":26848,"line_start":81,"line_end":81,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29870,"byte_end":29880,"line_start":53,"line_end":53,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34704,"byte_end":34719,"line_start":25,"line_end":25,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36455,"byte_end":36469,"line_start":44,"line_end":44,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2366,"byte_end":2375,"line_start":66,"line_end":66,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":22}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2385,"byte_end":2397,"line_start":67,"line_end":67,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":37}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2407,"byte_end":2411,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":64}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2421,"byte_end":2433,"line_start":69,"line_end":69,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":77}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2443,"byte_end":2449,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2459,"byte_end":2463,"line_start":71,"line_end":71,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":92}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2473,"byte_end":2481,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":110}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2491,"byte_end":2498,"line_start":73,"line_end":73,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/lib.rs","byte_start":2508,"byte_end":2517,"line_start":74,"line_end":74,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":133}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5210,"byte_end":5219,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/blobstore.rs","byte_start":5943,"byte_end":5956,"line_start":81,"line_end":81,"column_start":17,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":295},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9085,"byte_end":9088,"line_start":27,"line_end":27,"column_start":23,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9091,"byte_end":9095,"line_start":27,"line_end":27,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":9098,"byte_end":9102,"line_start":27,"line_end":27,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10083,"byte_end":10103,"line_start":54,"line_end":54,"column_start":6,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":10383,"byte_end":10410,"line_start":66,"line_end":66,"column_start":6,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":13271,"byte_end":13290,"line_start":152,"line_end":152,"column_start":6,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14160,"byte_end":14174,"line_start":179,"line_end":179,"column_start":6,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14269,"byte_end":14283,"line_start":185,"line_end":185,"column_start":21,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":802},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14724,"byte_end":14727,"line_start":198,"line_end":198,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14730,"byte_end":14734,"line_start":198,"line_end":198,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/capabilities.rs","byte_start":14737,"byte_end":14741,"line_start":198,"line_end":198,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/eventstreams.rs","byte_start":21278,"byte_end":21289,"line_start":51,"line_end":51,"column_start":17,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1093},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/extras.rs","byte_start":23404,"byte_end":23419,"line_start":30,"line_end":30,"column_start":17,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":25523,"byte_end":25530,"line_start":33,"line_end":33,"column_start":17,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1399},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26593,"byte_end":26601,"line_start":70,"line_end":70,"column_start":17,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1495},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/http.rs","byte_start":26840,"byte_end":26848,"line_start":81,"line_end":81,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/keyvalue.rs","byte_start":29870,"byte_end":29880,"line_start":53,"line_end":53,"column_start":17,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1701},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/logging.rs","byte_start":34704,"byte_end":34719,"line_start":25,"line_end":25,"column_start":17,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2828},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.8.1/src/messaging.rs","byte_start":36455,"byte_end":36469,"line_start":44,"line_end":44,"column_start":17,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2974},"to":{"krate":0,"index":20}}]}