{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2","program":"/home/suru/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wascc_codec","--edition=2018","/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b3fe6d4e117dd77c","-C","extra-filename=-b3fe6d4e117dd77c","--out-dir","/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps","--target","wasm32-unknown-unknown","-L","dependency=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps","-L","dependency=/home/suru/Documents/awesome_wasm/target/rls/debug/deps","--extern","log=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/liblog-bcd418710eba89d7.rmeta","--extern","rmp_serde=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/librmp_serde-6bb9bb9c0b2c5af9.rmeta","--extern","serde=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/libserde-91ef6f7830e57d65.rmeta","--extern","serde_bytes=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/libserde_bytes-63bc8012e072fb6d.rmeta","--extern","serde_derive=/home/suru/Documents/awesome_wasm/target/rls/debug/deps/libserde_derive-866072f77154c579.so","--extern","serde_json=/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/libserde_json-4aedeb93e18f76cd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/suru/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/suru/Documents/awesome_wasm/target/rls/wasm32-unknown-unknown/debug/deps/libwascc_codec-b3fe6d4e117dd77c.rmeta"},"prelude":{"crate_id":{"name":"wascc_codec","disambiguator":[15983102498270413293,12680409158322881929]},"crate_root":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src","external_crates":[{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17568117084726535670,18291600942983091792]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11708719394972853161,10740351817569260753]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11739846921667929886,4899200388694349132]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10483847702699074036,9448700856939319914]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13547053222791032196,5616744556569750145]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1671359507371111213,8555349780106746800]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10553035774617414455,11464508503641710306]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12030632638709788125,179720963704046562]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17497149768326916465,12808847267177544861]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16272633320396836489,9042107923364971302]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8020748326108297999,16907006358149453028]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":12,"id":{"name":"dlmalloc","disambiguator":[14908421788973856670,17807852881498547973]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":13,"id":{"name":"serde_derive","disambiguator":[6037834130130488611,17842463658795390511]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":14,"id":{"name":"log","disambiguator":[14285311876279124308,787861090774399804]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[3327276768833609390,4213488046245644274]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","num":16,"id":{"name":"serde","disambiguator":[10362752534225817208,14453123574184786104]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":17,"id":{"name":"rmp_serde","disambiguator":[1936978173384364288,14111477812242930889]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":18,"id":{"name":"rmp","disambiguator":[10113385517999052348,17306090833965413064]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":19,"id":{"name":"byteorder","disambiguator":[15849737753360944621,14209032557546942040]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","num":20,"id":{"name":"num_traits","disambiguator":[10136725111933920827,11215299027748122273]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","num":21,"id":{"name":"serde_bytes","disambiguator":[5558729866261809908,15933540333062596260]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","num":22,"id":{"name":"serde_json","disambiguator":[16911494618598343305,500638143607058896]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","num":23,"id":{"name":"itoa","disambiguator":[5147502133076860331,7475477209041257681]}},{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","num":24,"id":{"name":"ryu","disambiguator":[8376193462696499826,4584971023996794025]}}],"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":0,"byte_end":2487,"line_start":1,"line_end":72,"column_start":1,"column_end":19}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":0,"byte_end":2487,"line_start":1,"line_end":72,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":3057},{"krate":0,"index":13},{"krate":0,"index":3059},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":37},{"krate":0,"index":64},{"krate":0,"index":77},{"krate":0,"index":85},{"krate":0,"index":92},{"krate":0,"index":110},{"krate":0,"index":128},{"krate":0,"index":133}],"decl_id":null,"docs":" # wascc-codec","sig":null,"attributes":[{"value":"/ # wascc-codec","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":691,"byte_end":708,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":709,"byte_end":712,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This library provides the core set of types and associated functions used to facilitate actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":713,"byte_end":810,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ and host runtime communication for waSCC.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":811,"byte_end":856,"line_start":19,"line_end":19,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":3},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":918,"byte_end":925,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"name":"VERSION","qualname":"::VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The version of the codec as seen on crates.io\n","sig":null,"attributes":[{"value":"/ The version of the codec as seen on crates.io","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":858,"byte_end":907,"line_start":21,"line_end":21,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":4},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":1053,"byte_end":1065,"line_start":24,"line_end":24,"column_start":11,"column_end":23},"name":"SYSTEM_ACTOR","qualname":"::SYSTEM_ACTOR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The string used for the originator of messages dispatched by the host runtime\n","sig":null,"attributes":[{"value":"/ The string used for the originator of messages dispatched by the host runtime","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":961,"byte_end":1042,"line_start":23,"line_end":23,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":1503,"byte_end":1512,"line_start":38,"line_end":38,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize","value":"pub fn serialize<T>(T)\n-> ::std::result::Result<Vec<u8>, Box<::std::error::Error>> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" The standard function for serializing codec structs into a format that can be\n used for message exchange between actor and host. Use of any other function to\n serialize could result in breaking incompatibilities.\n","sig":null,"attributes":[{"value":"/ The standard function for serializing codec structs into a format that can be","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":1273,"byte_end":1354,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ used for message exchange between actor and host. Use of any other function to","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":1355,"byte_end":1437,"line_start":36,"line_end":36,"column_start":1,"column_end":83}},{"value":"/ serialize could result in breaking incompatibilities.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":1438,"byte_end":1495,"line_start":37,"line_end":37,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":1958,"byte_end":1969,"line_start":50,"line_end":50,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::deserialize","value":"pub fn deserialize<'de, T: Deserialize>(&[u8])\n-> ::std::result::Result<T, Box<::std::error::Error>>","parent":null,"children":[],"decl_id":null,"docs":" The standard function for de-serializing codec structs from a format suitable\n for message exchange between actor and host. Use of any other function to\n deserialize could result in breaking incompatibilities.\n","sig":null,"attributes":[{"value":"/ The standard function for de-serializing codec structs from a format suitable","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":1731,"byte_end":1812,"line_start":47,"line_end":47,"column_start":1,"column_end":82}},{"value":"/ for message exchange between actor and host. Use of any other function to","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":1813,"byte_end":1890,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ deserialize could result in breaking incompatibilities.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":1891,"byte_end":1950,"line_start":49,"line_end":49,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2290,"byte_end":2296,"line_start":60,"line_end":60,"column_start":11,"column_end":17},"name":"Sample","qualname":"::Sample","value":"Sample","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2306,"byte_end":2312,"line_start":61,"line_end":61,"column_start":8,"column_end":14},"name":"sample","qualname":"::Sample::sample","value":"pub fn sample() -> Self","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":22},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blobstore","qualname":"::blobstore","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":140},{"krate":0,"index":235},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":161},{"krate":0,"index":147},{"krate":0,"index":33},{"krate":0,"index":237},{"krate":0,"index":290},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":245},{"krate":0,"index":239},{"krate":0,"index":292},{"krate":0,"index":345},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":300},{"krate":0,"index":294},{"krate":0,"index":35},{"krate":0,"index":347},{"krate":0,"index":406},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":357},{"krate":0,"index":351},{"krate":0,"index":408},{"krate":0,"index":461},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":416},{"krate":0,"index":410},{"krate":0,"index":463},{"krate":0,"index":522},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":473},{"krate":0,"index":467},{"krate":0,"index":524},{"krate":0,"index":589},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":536},{"krate":0,"index":530}],"decl_id":null,"docs":" # Binary object storage and streaming","sig":null,"attributes":[{"value":"/ # Binary object storage and streaming","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":2489,"byte_end":2530,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":2531,"byte_end":2534,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types for the `wascc:blobstore` capability provider. For more information on","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":2535,"byte_end":2641,"line_start":3,"line_end":3,"column_start":1,"column_end":107}},{"value":"/ how the blob store capability works within the constraints of a WebAssembly host runtime, check out","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":2642,"byte_end":2745,"line_start":4,"line_end":4,"column_start":1,"column_end":104}},{"value":"/ the documentation on [waSCC.dev](https://wascc.dev)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":2746,"byte_end":2801,"line_start":5,"line_end":5,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":2915,"byte_end":2934,"line_start":10,"line_end":10,"column_start":11,"column_end":30},"name":"OP_CREATE_CONTAINER","qualname":"::blobstore::OP_CREATE_CONTAINER","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a Container to the capability provider, receives a Container back\n","sig":null,"attributes":[{"value":"/ Guest sends a Container to the capability provider, receives a Container back","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":2823,"byte_end":2904,"line_start":9,"line_end":9,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3060,"byte_end":3079,"line_start":12,"line_end":12,"column_start":11,"column_end":30},"name":"OP_REMOVE_CONTAINER","qualname":"::blobstore::OP_REMOVE_CONTAINER","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a Container to the capability provider, lack of error indicates success\n","sig":null,"attributes":[{"value":"/ Guest sends a Container to the capability provider, lack of error indicates success","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":2962,"byte_end":3049,"line_start":11,"line_end":11,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3200,"byte_end":3216,"line_start":14,"line_end":14,"column_start":11,"column_end":27},"name":"OP_REMOVE_OBJECT","qualname":"::blobstore::OP_REMOVE_OBJECT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a Blob to the capability provider, lack of error indicates success\n","sig":null,"attributes":[{"value":"/ Guest sends a Blob to the capability provider, lack of error indicates success","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3107,"byte_end":3189,"line_start":13,"line_end":13,"column_start":1,"column_end":83}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3332,"byte_end":3347,"line_start":16,"line_end":16,"column_start":11,"column_end":26},"name":"OP_LIST_OBJECTS","qualname":"::blobstore::OP_LIST_OBJECTS","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a Container to the capability provider, receives a BlobList back\n","sig":null,"attributes":[{"value":"/ Guest sends a Container to the capability provider, receives a BlobList back","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3241,"byte_end":3321,"line_start":15,"line_end":15,"column_start":1,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3495,"byte_end":3510,"line_start":18,"line_end":18,"column_start":11,"column_end":26},"name":"OP_UPLOAD_CHUNK","qualname":"::blobstore::OP_UPLOAD_CHUNK","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a FileChunk to capability provider for storing as part of a Blob, lack of error indicates success\n","sig":null,"attributes":[{"value":"/ Guest sends a FileChunk to capability provider for storing as part of a Blob, lack of error indicates success","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3371,"byte_end":3484,"line_start":17,"line_end":17,"column_start":1,"column_end":114}}]},{"kind":"Const","id":{"krate":0,"index":29},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3755,"byte_end":3772,"line_start":21,"line_end":21,"column_start":11,"column_end":28},"name":"OP_START_DOWNLOAD","qualname":"::blobstore::OP_START_DOWNLOAD","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a StreamRequest to the capability provider, immediate termination w/success. Guest will then\n start receiving OP_RECEIVE_CHUNK operations from the provider as chunks are streamed to the guest\n","sig":null,"attributes":[{"value":"/ Guest sends a StreamRequest to the capability provider, immediate termination w/success. Guest will then","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3534,"byte_end":3642,"line_start":19,"line_end":19,"column_start":1,"column_end":109}},{"value":"/ start receiving OP_RECEIVE_CHUNK operations from the provider as chunks are streamed to the guest","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3643,"byte_end":3744,"line_start":20,"line_end":20,"column_start":1,"column_end":102}}]},{"kind":"Const","id":{"krate":0,"index":30},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3902,"byte_end":3917,"line_start":23,"line_end":23,"column_start":11,"column_end":26},"name":"OP_START_UPLOAD","qualname":"::blobstore::OP_START_UPLOAD","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest sends a metadata-carrying FileChunk to initiate an upload, lack of error is success\n","sig":null,"attributes":[{"value":"/ Guest sends a metadata-carrying FileChunk to initiate an upload, lack of error is success","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3798,"byte_end":3891,"line_start":22,"line_end":22,"column_start":1,"column_end":94}}]},{"kind":"Const","id":{"krate":0,"index":31},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4033,"byte_end":4049,"line_start":25,"line_end":25,"column_start":11,"column_end":27},"name":"OP_RECEIVE_CHUNK","qualname":"::blobstore::OP_RECEIVE_CHUNK","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Guest will receive a FileChunk for each piece of a file requested to download\n","sig":null,"attributes":[{"value":"/ Guest will receive a FileChunk for each piece of a file requested to download","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":3941,"byte_end":4022,"line_start":24,"line_end":24,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":32},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4196,"byte_end":4214,"line_start":27,"line_end":27,"column_start":11,"column_end":29},"name":"OP_GET_OBJECT_INFO","qualname":"::blobstore::OP_GET_OBJECT_INFO","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Query information on a single blob. Guest sends an incomplete blob struct and gets a complete one in return\n","sig":null,"attributes":[{"value":"/ Query information on a single blob. Guest sends an incomplete blob struct and gets a complete one in return","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4074,"byte_end":4185,"line_start":26,"line_end":26,"column_start":1,"column_end":112}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4396,"byte_end":4405,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"FileChunk","qualname":"::blobstore::FileChunk","value":"FileChunk { sequence_no, container, id, total_bytes, chunk_size, chunk_bytes }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" Represents a single chunk of a segmented file stream\n","sig":null,"attributes":[{"value":"/ Represents a single chunk of a segmented file stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4241,"byte_end":4297,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4350,"byte_end":4384,"line_start":31,"line_end":31,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":141},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4488,"byte_end":4499,"line_start":34,"line_end":34,"column_start":9,"column_end":20},"name":"sequence_no","qualname":"::blobstore::FileChunk::sequence_no","value":"u64","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" A sequence number that can be used for retry and ordering logic\n","sig":null,"attributes":[{"value":"/ A sequence number that can be used for retry and ordering logic","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4412,"byte_end":4479,"line_start":33,"line_end":33,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4562,"byte_end":4571,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"name":"container","qualname":"::blobstore::FileChunk::container","value":"std::string::String","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" The container in which this file exists\n","sig":null,"attributes":[{"value":"/ The container in which this file exists","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4510,"byte_end":4553,"line_start":35,"line_end":35,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":143},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4623,"byte_end":4625,"line_start":38,"line_end":38,"column_start":9,"column_end":11},"name":"id","qualname":"::blobstore::FileChunk::id","value":"std::string::String","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" The unique ID of the blob\n","sig":null,"attributes":[{"value":"/ The unique ID of the blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4585,"byte_end":4614,"line_start":37,"line_end":37,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":144},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4692,"byte_end":4703,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"total_bytes","qualname":"::blobstore::FileChunk::total_bytes","value":"u64","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Total number of bytes in the entire blob\n","sig":null,"attributes":[{"value":"/ Total number of bytes in the entire blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4639,"byte_end":4683,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":145},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4842,"byte_end":4852,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"name":"chunk_size","qualname":"::blobstore::FileChunk::chunk_size","value":"u64","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" The number of bytes within any given chunk. Note that the last chunk in a file stream may be less than `chunk_size`\n","sig":null,"attributes":[{"value":"/ The number of bytes within any given chunk. Note that the last chunk in a file stream may be less than `chunk_size`","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4714,"byte_end":4833,"line_start":41,"line_end":41,"column_start":5,"column_end":124}}]},{"kind":"Field","id":{"krate":0,"index":146},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4970,"byte_end":4981,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"name":"chunk_bytes","qualname":"::blobstore::FileChunk::chunk_bytes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" The raw bytes contained in this chunk\n","sig":null,"attributes":[{"value":"/ The raw bytes contained in this chunk","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4863,"byte_end":4904,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"serde(with = \"serde_bytes\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4909,"byte_end":4939,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":4944,"byte_end":4961,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":237},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5453,"byte_end":5462,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"Container","qualname":"::blobstore::Container","value":"Container { id }","parent":null,"children":[{"krate":0,"index":238}],"decl_id":null,"docs":" Represents a container within a blob store\n","sig":null,"attributes":[{"value":"/ Represents a container within a blob store","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5308,"byte_end":5354,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5407,"byte_end":5441,"line_start":64,"line_end":64,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":238},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5473,"byte_end":5475,"line_start":66,"line_end":66,"column_start":9,"column_end":11},"name":"id","qualname":"::blobstore::Container::id","value":"std::string::String","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":292},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5624,"byte_end":5637,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"ContainerList","qualname":"::blobstore::ContainerList","value":"ContainerList { containers }","parent":null,"children":[{"krate":0,"index":293}],"decl_id":null,"docs":" Used to hold a list of containers\n","sig":null,"attributes":[{"value":"/ Used to hold a list of containers","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5488,"byte_end":5525,"line_start":69,"line_end":69,"column_start":1,"column_end":38}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5578,"byte_end":5612,"line_start":71,"line_end":71,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5670,"byte_end":5680,"line_start":74,"line_end":74,"column_start":9,"column_end":19},"name":"containers","qualname":"::blobstore::ContainerList::containers","value":"std::vec::Vec<blobstore::Container>","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5644,"byte_end":5661,"line_start":73,"line_end":73,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6047,"byte_end":6051,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"Blob","qualname":"::blobstore::Blob","value":"Blob { id, container, byte_size }","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"decl_id":null,"docs":" Metadata about a blob, not the raw bytes\n","sig":null,"attributes":[{"value":"/ Metadata about a blob, not the raw bytes","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5904,"byte_end":5948,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6001,"byte_end":6035,"line_start":89,"line_end":89,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":348},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6092,"byte_end":6094,"line_start":92,"line_end":92,"column_start":9,"column_end":11},"name":"id","qualname":"::blobstore::Blob::id","value":"std::string::String","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" Unique ID of the blob\n","sig":null,"attributes":[{"value":"/ Unique ID of the blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6058,"byte_end":6083,"line_start":91,"line_end":91,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":349},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6156,"byte_end":6165,"line_start":94,"line_end":94,"column_start":9,"column_end":18},"name":"container","qualname":"::blobstore::Blob::container","value":"std::string::String","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" Container in which the blob resides\n","sig":null,"attributes":[{"value":"/ Container in which the blob resides","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6108,"byte_end":6147,"line_start":93,"line_end":93,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":350},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6237,"byte_end":6246,"line_start":96,"line_end":96,"column_start":9,"column_end":18},"name":"byte_size","qualname":"::blobstore::Blob::byte_size","value":"u64","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" Total number of bytes of the blob (file size)\n","sig":null,"attributes":[{"value":"/ Total number of bytes of the blob (file size)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6179,"byte_end":6228,"line_start":95,"line_end":95,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6388,"byte_end":6396,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"BlobList","qualname":"::blobstore::BlobList","value":"BlobList { blobs }","parent":null,"children":[{"krate":0,"index":409}],"decl_id":null,"docs":" A wrapper for a list of blobs\n","sig":null,"attributes":[{"value":"/ A wrapper for a list of blobs","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6256,"byte_end":6289,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6342,"byte_end":6376,"line_start":101,"line_end":101,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":409},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6429,"byte_end":6434,"line_start":104,"line_end":104,"column_start":9,"column_end":14},"name":"blobs","qualname":"::blobstore::BlobList::blobs","value":"std::vec::Vec<blobstore::Blob>","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6403,"byte_end":6420,"line_start":103,"line_end":103,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":463},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6603,"byte_end":6616,"line_start":110,"line_end":110,"column_start":12,"column_end":25},"name":"StreamRequest","qualname":"::blobstore::StreamRequest","value":"StreamRequest { id, container, chunk_size }","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"decl_id":null,"docs":" A request to begin downloading a stream for a blob\n","sig":null,"attributes":[{"value":"/ A request to begin downloading a stream for a blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6450,"byte_end":6504,"line_start":107,"line_end":107,"column_start":1,"column_end":55}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6557,"byte_end":6591,"line_start":109,"line_end":109,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":464},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6671,"byte_end":6673,"line_start":112,"line_end":112,"column_start":9,"column_end":11},"name":"id","qualname":"::blobstore::StreamRequest::id","value":"std::string::String","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" The unique ID of the requested blob\n","sig":null,"attributes":[{"value":"/ The unique ID of the requested blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6623,"byte_end":6662,"line_start":111,"line_end":111,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":465},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6735,"byte_end":6744,"line_start":114,"line_end":114,"column_start":9,"column_end":18},"name":"container","qualname":"::blobstore::StreamRequest::container","value":"std::string::String","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" The container of the requested blob\n","sig":null,"attributes":[{"value":"/ The container of the requested blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6687,"byte_end":6726,"line_start":113,"line_end":113,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":466},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6887,"byte_end":6897,"line_start":116,"line_end":116,"column_start":9,"column_end":19},"name":"chunk_size","qualname":"::blobstore::StreamRequest::chunk_size","value":"u64","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" The preferred size of chunks to be delivered. Consumers must not assume this is the size of the chunks they will get\n","sig":null,"attributes":[{"value":"/ The preferred size of chunks to be delivered. Consumers must not assume this is the size of the chunks they will get","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6758,"byte_end":6878,"line_start":115,"line_end":115,"column_start":5,"column_end":125}}]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7053,"byte_end":7061,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"Transfer","qualname":"::blobstore::Transfer","value":"Transfer { blob_id, container, chunk_size, total_size, total_chunks }","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" Metadata about an in-progress file transfer\n","sig":null,"attributes":[{"value":"/ Metadata about an in-progress file transfer","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":6907,"byte_end":6954,"line_start":119,"line_end":119,"column_start":1,"column_end":48}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7007,"byte_end":7041,"line_start":121,"line_end":121,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":525},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7102,"byte_end":7109,"line_start":124,"line_end":124,"column_start":9,"column_end":16},"name":"blob_id","qualname":"::blobstore::Transfer::blob_id","value":"std::string::String","parent":{"krate":0,"index":524},"children":[],"decl_id":null,"docs":" Unique ID of the blob\n","sig":null,"attributes":[{"value":"/ Unique ID of the blob","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7068,"byte_end":7093,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":526},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7155,"byte_end":7164,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"container","qualname":"::blobstore::Transfer::container","value":"std::string::String","parent":{"krate":0,"index":524},"children":[],"decl_id":null,"docs":" ID of the container\n","sig":null,"attributes":[{"value":"/ ID of the container","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7123,"byte_end":7146,"line_start":125,"line_end":125,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":527},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7223,"byte_end":7233,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"chunk_size","qualname":"::blobstore::Transfer::chunk_size","value":"u64","parent":{"krate":0,"index":524},"children":[],"decl_id":null,"docs":" Size of chunks being transferred\n","sig":null,"attributes":[{"value":"/ Size of chunks being transferred","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7178,"byte_end":7214,"line_start":127,"line_end":127,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":528},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7296,"byte_end":7306,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"total_size","qualname":"::blobstore::Transfer::total_size","value":"u64","parent":{"krate":0,"index":524},"children":[],"decl_id":null,"docs":" Total number of bytes being transferred\n","sig":null,"attributes":[{"value":"/ Total number of bytes being transferred","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7244,"byte_end":7287,"line_start":129,"line_end":129,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":529},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7370,"byte_end":7382,"line_start":132,"line_end":132,"column_start":9,"column_end":21},"name":"total_chunks","qualname":"::blobstore::Transfer::total_chunks","value":"u64","parent":{"krate":0,"index":524},"children":[],"decl_id":null,"docs":" Total number of chunks being transferred\n","sig":null,"attributes":[{"value":"/ Total number of chunks being transferred","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":7317,"byte_end":7361,"line_start":131,"line_end":131,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":37},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"capabilities","qualname":"::capabilities","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":591},{"krate":0,"index":663},{"krate":0,"index":661},{"krate":0,"index":655},{"krate":0,"index":604},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":598},{"krate":0,"index":43},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":45},{"krate":0,"index":669},{"krate":0,"index":730},{"krate":0,"index":728},{"krate":0,"index":722},{"krate":0,"index":677},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":54},{"krate":0,"index":732},{"krate":0,"index":791},{"krate":0,"index":789},{"krate":0,"index":783},{"krate":0,"index":742},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":" # Common types used for managing native capability providers\n","sig":null,"attributes":[{"value":"/ # Common types used for managing native capability providers","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":7996,"byte_end":8060,"line_start":15,"line_end":15,"column_start":1,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":40},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8238,"byte_end":8266,"line_start":23,"line_end":23,"column_start":11,"column_end":39},"name":"OP_GET_CAPABILITY_DESCRIPTOR","qualname":"::capabilities::OP_GET_CAPABILITY_DESCRIPTOR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" All capability providers must respond to this operation, which will be requested by\n the host (the `system` actor)\n","sig":null,"attributes":[{"value":"/ All capability providers must respond to this operation, which will be requested by","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8106,"byte_end":8193,"line_start":21,"line_end":21,"column_start":1,"column_end":88}},{"value":"/ the host (the `system` actor)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8194,"byte_end":8227,"line_start":22,"line_end":22,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8466,"byte_end":8476,"line_start":27,"line_end":27,"column_start":11,"column_end":21},"name":"Dispatcher","qualname":"::capabilities::Dispatcher","value":"Dispatcher: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" The dispatcher is used by a native capability provider to send commands to an actor module, expecting\n a result containing a byte array in return\n","sig":null,"attributes":[{"value":"/ The dispatcher is used by a native capability provider to send commands to an actor module, expecting","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8303,"byte_end":8408,"line_start":25,"line_end":25,"column_start":1,"column_end":106}},{"value":"/ a result containing a byte array in return","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8409,"byte_end":8455,"line_start":26,"line_end":26,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8505,"byte_end":8513,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"dispatch","qualname":"::capabilities::Dispatcher::dispatch","value":"pub fn dispatch(&Self, &str, &str, &[u8]) -> Result<Vec<u8>, Box<Error>>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":591},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8764,"byte_end":8784,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CapabilityDescriptor","qualname":"::capabilities::CapabilityDescriptor","value":"CapabilityDescriptor { id, name, version, revision, long_description, supported_operations }","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597}],"decl_id":null,"docs":" Metadata describing the capability provider and the operations it supports\n","sig":null,"attributes":[{"value":"/ Metadata describing the capability provider and the operations it supports","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8595,"byte_end":8673,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"repr(C)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8674,"byte_end":8684,"line_start":32,"line_end":32,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":592},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8890,"byte_end":8892,"line_start":36,"line_end":36,"column_start":9,"column_end":11},"name":"id","qualname":"::capabilities::CapabilityDescriptor::id","value":"std::string::String","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" The capability ID of the provider, e.g. `wascc:messaging` or `thirdparty:someprovider`\n","sig":null,"attributes":[{"value":"/ The capability ID of the provider, e.g. `wascc:messaging` or `thirdparty:someprovider`","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8791,"byte_end":8881,"line_start":35,"line_end":35,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":593},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9003,"byte_end":9007,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"name","qualname":"::capabilities::CapabilityDescriptor::name","value":"std::string::String","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" The human-friendly name of the provider, displayed in short messages and log entries\n","sig":null,"attributes":[{"value":"/ The human-friendly name of the provider, displayed in short messages and log entries","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8906,"byte_end":8994,"line_start":37,"line_end":37,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":594},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9097,"byte_end":9104,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"name":"version","qualname":"::capabilities::CapabilityDescriptor::version","value":"std::string::String","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" A semver string representing the version of the provider module\n","sig":null,"attributes":[{"value":"/ A semver string representing the version of the provider module","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9021,"byte_end":9088,"line_start":39,"line_end":39,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":595},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9172,"byte_end":9180,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"name":"revision","qualname":"::capabilities::CapabilityDescriptor::revision","value":"u32","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" A monotonicaly increasing revision number\n","sig":null,"attributes":[{"value":"/ A monotonicaly increasing revision number","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9118,"byte_end":9163,"line_start":41,"line_end":41,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":596},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9266,"byte_end":9282,"line_start":44,"line_end":44,"column_start":9,"column_end":25},"name":"long_description","qualname":"::capabilities::CapabilityDescriptor::long_description","value":"std::string::String","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" A longer, documentation-friendly, description of this provider\n","sig":null,"attributes":[{"value":"/ A longer, documentation-friendly, description of this provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9191,"byte_end":9257,"line_start":43,"line_end":43,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":597},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9367,"byte_end":9387,"line_start":46,"line_end":46,"column_start":9,"column_end":29},"name":"supported_operations","qualname":"::capabilities::CapabilityDescriptor::supported_operations","value":"std::vec::Vec<capabilities::OperationDescriptor>","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" A list of all of the operations supported by this provider\n","sig":null,"attributes":[{"value":"/ A list of all of the operations supported by this provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9296,"byte_end":9358,"line_start":45,"line_end":45,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9457,"byte_end":9464,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"builder","qualname":"<CapabilityDescriptor>::builder","value":"pub fn builder() -> CapabilityDescriptorBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":665},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9647,"byte_end":9674,"line_start":57,"line_end":57,"column_start":12,"column_end":39},"name":"CapabilityDescriptorBuilder","qualname":"::capabilities::CapabilityDescriptorBuilder","value":"CapabilityDescriptorBuilder {  }","parent":null,"children":[{"krate":0,"index":666}],"decl_id":null,"docs":" A fluent syntax builder for creating a capability descriptor\n","sig":null,"attributes":[{"value":"/ A fluent syntax builder for creating a capability descriptor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9552,"byte_end":9616,"line_start":55,"line_end":55,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9988,"byte_end":9990,"line_start":68,"line_end":68,"column_start":12,"column_end":14},"name":"id","qualname":"<CapabilityDescriptorBuilder>::id","value":"pub fn id(Self, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the capability ID (e.g. `wascc:messaging`) of the provider\n","sig":null,"attributes":[{"value":"/ Sets the capability ID (e.g. `wascc:messaging`) of the provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9909,"byte_end":9976,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":10265,"byte_end":10269,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"name","qualname":"<CapabilityDescriptorBuilder>::name","value":"pub fn name(Self, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the capability provider.\n","sig":null,"attributes":[{"value":"/ Sets the name of the capability provider.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":10208,"byte_end":10253,"line_start":77,"line_end":77,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":10574,"byte_end":10590,"line_start":88,"line_end":88,"column_start":12,"column_end":28},"name":"long_description","qualname":"<CapabilityDescriptorBuilder>::long_description","value":"pub fn long_description(Self, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a longer, documentation-friendly description of the provider\n","sig":null,"attributes":[{"value":"/ Sets a longer, documentation-friendly description of the provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":10493,"byte_end":10562,"line_start":87,"line_end":87,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":10904,"byte_end":10911,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"version","qualname":"<CapabilityDescriptorBuilder>::version","value":"pub fn version(Self, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the version string (semver by convention) of the provider\n","sig":null,"attributes":[{"value":"/ Sets the version string (semver by convention) of the provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":10826,"byte_end":10892,"line_start":97,"line_end":97,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":11263,"byte_end":11271,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"revision","qualname":"<CapabilityDescriptorBuilder>::revision","value":"pub fn revision(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the monotonically increasing, numeric revision number of a provider. Used when comparing provider versions\n","sig":null,"attributes":[{"value":"/ Sets the monotonically increasing, numeric revision number of a provider. Used when comparing provider versions","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":11136,"byte_end":11251,"line_start":107,"line_end":107,"column_start":5,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":11556,"byte_end":11570,"line_start":118,"line_end":118,"column_start":12,"column_end":26},"name":"with_operation","qualname":"<CapabilityDescriptorBuilder>::with_operation","value":"pub fn with_operation(Self, &str, OperationDirection, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an operation descriptor to the provider descriptor.\n","sig":null,"attributes":[{"value":"/ Adds an operation descriptor to the provider descriptor.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":11484,"byte_end":11544,"line_start":117,"line_end":117,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12067,"byte_end":12072,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"build","qualname":"<CapabilityDescriptorBuilder>::build","value":"pub fn build(Self) -> CapabilityDescriptor","parent":null,"children":[],"decl_id":null,"docs":" Produces a new capability descriptor from the builder's configuration\n","sig":null,"attributes":[{"value":"/ Produces a new capability descriptor from the builder's configuration","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":11982,"byte_end":12055,"line_start":129,"line_end":129,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":669},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12294,"byte_end":12313,"line_start":138,"line_end":138,"column_start":12,"column_end":31},"name":"OperationDescriptor","qualname":"::capabilities::OperationDescriptor","value":"OperationDescriptor { name, direction, doctext }","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672}],"decl_id":null,"docs":" A description of a single operation supported by a capability provider\n","sig":null,"attributes":[{"value":"/ A description of a single operation supported by a capability provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12138,"byte_end":12212,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"repr(C)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12213,"byte_end":12223,"line_start":136,"line_end":136,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":670},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12397,"byte_end":12401,"line_start":140,"line_end":140,"column_start":9,"column_end":13},"name":"name","qualname":"::capabilities::OperationDescriptor::name","value":"std::string::String","parent":{"krate":0,"index":669},"children":[],"decl_id":null,"docs":" The name of the operation. This must be unique per capability ID\n","sig":null,"attributes":[{"value":"/ The name of the operation. This must be unique per capability ID","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12320,"byte_end":12388,"line_start":139,"line_end":139,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":671},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12492,"byte_end":12501,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"name":"direction","qualname":"::capabilities::OperationDescriptor::direction","value":"capabilities::OperationDirection","parent":{"krate":0,"index":669},"children":[],"decl_id":null,"docs":" Indicates the direction of the operation (can be bi-directional)\n","sig":null,"attributes":[{"value":"/ Indicates the direction of the operation (can be bi-directional)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12415,"byte_end":12483,"line_start":141,"line_end":141,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":672},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12586,"byte_end":12593,"line_start":144,"line_end":144,"column_start":9,"column_end":16},"name":"doctext","qualname":"::capabilities::OperationDescriptor::doctext","value":"std::string::String","parent":{"krate":0,"index":669},"children":[],"decl_id":null,"docs":" Documentation-suitable text for this operation\n","sig":null,"attributes":[{"value":"/ Documentation-suitable text for this operation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12527,"byte_end":12577,"line_start":143,"line_end":143,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12687,"byte_end":12690,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"new","qualname":"<OperationDescriptor>::new","value":"pub fn new(&str, OperationDirection, &str) -> OperationDescriptor","parent":null,"children":[],"decl_id":null,"docs":" Creates a new operation descriptor\n","sig":null,"attributes":[{"value":"/ Creates a new operation descriptor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12637,"byte_end":12675,"line_start":148,"line_end":148,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":733},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13120,"byte_end":13127,"line_start":163,"line_end":163,"column_start":5,"column_end":12},"name":"ToActor","qualname":"::capabilities::OperationDirection::ToActor","value":"OperationDirection::ToActor","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":735},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13133,"byte_end":13143,"line_start":164,"line_end":164,"column_start":5,"column_end":15},"name":"ToProvider","qualname":"::capabilities::OperationDirection::ToProvider","value":"OperationDirection::ToProvider","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":737},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13149,"byte_end":13153,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"Both","qualname":"::capabilities::OperationDirection::Both","value":"OperationDirection::Both","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":732},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13095,"byte_end":13113,"line_start":162,"line_end":162,"column_start":10,"column_end":28},"name":"OperationDirection","qualname":"::capabilities::OperationDirection","value":"pub enum OperationDirection { ToActor, ToProvider, Both, }","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737}],"decl_id":null,"docs":" Represents the direction of an operation invocation\n","sig":null,"attributes":[{"value":"/ Represents the direction of an operation invocation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12924,"byte_end":12979,"line_start":158,"line_end":158,"column_start":1,"column_end":56}},{"value":"repr(C)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12980,"byte_end":12990,"line_start":159,"line_end":159,"column_start":1,"column_end":11}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13050,"byte_end":13085,"line_start":161,"line_end":161,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":793},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13476,"byte_end":13490,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"NullDispatcher","qualname":"::capabilities::NullDispatcher","value":"NullDispatcher {  }","parent":null,"children":[],"decl_id":null,"docs":" The NullDispatcher is as its name implies--a dispatcher that does nothing. This is convenient for\n initializing a capability provider with a null dispatcher, and then swapping it for a real dispatcher\n when the host runtime provides one configured with the appropriate channels\n","sig":null,"attributes":[{"value":"/ The NullDispatcher is as its name implies--a dispatcher that does nothing. This is convenient for","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13158,"byte_end":13259,"line_start":168,"line_end":168,"column_start":1,"column_end":102}},{"value":"/ initializing a capability provider with a null dispatcher, and then swapping it for a real dispatcher","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13260,"byte_end":13365,"line_start":169,"line_end":169,"column_start":1,"column_end":106}},{"value":"/ when the host runtime provides one configured with the appropriate channels","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13366,"byte_end":13445,"line_start":170,"line_end":170,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13528,"byte_end":13531,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<NullDispatcher>::new","value":"pub fn new() -> NullDispatcher","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":60},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13991,"byte_end":14009,"line_start":188,"line_end":188,"column_start":11,"column_end":29},"name":"CapabilityProvider","qualname":"::capabilities::CapabilityProvider","value":"CapabilityProvider: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Every native capability provider must implement this trait. Both portable and native capability providers\n must respond to the following operations: `OP_BIND_ACTOR`, `OP_REMOVE_ACTOR`, `OP_GET_CAPABILITY_DESCRIPTOR`\n","sig":null,"attributes":[{"value":"/ Every native capability provider must implement this trait. Both portable and native capability providers","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13758,"byte_end":13867,"line_start":186,"line_end":186,"column_start":1,"column_end":110}},{"value":"/ must respond to the following operations: `OP_BIND_ACTOR`, `OP_REMOVE_ACTOR`, `OP_GET_CAPABILITY_DESCRIPTOR`","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13868,"byte_end":13980,"line_start":187,"line_end":187,"column_start":1,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":14292,"byte_end":14310,"line_start":191,"line_end":191,"column_start":8,"column_end":26},"name":"configure_dispatch","qualname":"::capabilities::CapabilityProvider::configure_dispatch","value":"pub fn configure_dispatch(&Self, Box<Dispatcher>) -> Result<(), Box<Error>>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" This function will be called on the provider when the host runtime is ready and has configured a dispatcher. This function is only ever\n called _once_ for a capability provider, regardless of the number of actors being managed in the host\n","sig":null,"attributes":[{"value":"/ This function will be called on the provider when the host runtime is ready and has configured a dispatcher. This function is only ever","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":14035,"byte_end":14174,"line_start":189,"line_end":189,"column_start":5,"column_end":144}},{"value":"/ called _once_ for a capability provider, regardless of the number of actors being managed in the host","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":14179,"byte_end":14284,"line_start":190,"line_end":190,"column_start":5,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":14475,"byte_end":14486,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"handle_call","qualname":"::capabilities::CapabilityProvider::handle_call","value":"pub fn handle_call(&Self, &str, &str, &[u8]) -> Result<Vec<u8>, Box<Error>>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Invoked when an actor has requested that a provider perform a given operation\n","sig":null,"attributes":[{"value":"/ Invoked when an actor has requested that a provider perform a given operation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":14386,"byte_end":14467,"line_start":192,"line_end":192,"column_start":5,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":64},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::core","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":796},{"krate":0,"index":849},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":804},{"krate":0,"index":798},{"krate":0,"index":851},{"krate":0,"index":904},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":859},{"krate":0,"index":853},{"krate":0,"index":906},{"krate":0,"index":964},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":917},{"krate":0,"index":911},{"krate":0,"index":909}],"decl_id":null,"docs":" # Core data types","sig":null,"attributes":[{"value":"/ # Core data types","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16219,"byte_end":16240,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16241,"byte_end":16244,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types used for wascc actor module and host runtime communications","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16245,"byte_end":16340,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ that is not specific to any given capability provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16341,"byte_end":16398,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":66},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16442,"byte_end":16464,"line_start":8,"line_end":8,"column_start":11,"column_end":33},"name":"OP_PERFORM_LIVE_UPDATE","qualname":"::core::OP_PERFORM_LIVE_UPDATE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":67},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16504,"byte_end":16526,"line_start":9,"line_end":9,"column_start":11,"column_end":33},"name":"OP_IDENTIFY_CAPABILITY","qualname":"::core::OP_IDENTIFY_CAPABILITY","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":68},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16567,"byte_end":16584,"line_start":10,"line_end":10,"column_start":11,"column_end":28},"name":"OP_HEALTH_REQUEST","qualname":"::core::OP_HEALTH_REQUEST","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":69},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16620,"byte_end":16633,"line_start":11,"line_end":11,"column_start":11,"column_end":24},"name":"OP_INITIALIZE","qualname":"::core::OP_INITIALIZE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":70},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16666,"byte_end":16679,"line_start":12,"line_end":12,"column_start":11,"column_end":24},"name":"OP_BIND_ACTOR","qualname":"::core::OP_BIND_ACTOR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":71},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16711,"byte_end":16726,"line_start":13,"line_end":13,"column_start":11,"column_end":26},"name":"OP_REMOVE_ACTOR","qualname":"::core::OP_REMOVE_ACTOR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":72},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16846,"byte_end":16872,"line_start":17,"line_end":17,"column_start":11,"column_end":37},"name":"CONFIG_WASCC_CLAIMS_ISSUER","qualname":"::core::CONFIG_WASCC_CLAIMS_ISSUER","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":73},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16909,"byte_end":16941,"line_start":18,"line_end":18,"column_start":11,"column_end":43},"name":"CONFIG_WASCC_CLAIMS_CAPABILITIES","qualname":"::core::CONFIG_WASCC_CLAIMS_CAPABILITIES","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":16984,"byte_end":17008,"line_start":19,"line_end":19,"column_start":11,"column_end":35},"name":"CONFIG_WASCC_CLAIMS_NAME","qualname":"::core::CONFIG_WASCC_CLAIMS_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17043,"byte_end":17070,"line_start":20,"line_end":20,"column_start":11,"column_end":38},"name":"CONFIG_WASCC_CLAIMS_EXPIRES","qualname":"::core::CONFIG_WASCC_CLAIMS_EXPIRES","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":76},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17108,"byte_end":17132,"line_start":21,"line_end":21,"column_start":11,"column_end":35},"name":"CONFIG_WASCC_CLAIMS_TAGS","qualname":"::core::CONFIG_WASCC_CLAIMS_TAGS","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":796},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17454,"byte_end":17464,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"LiveUpdate","qualname":"::core::LiveUpdate","value":"LiveUpdate { new_module }","parent":null,"children":[{"krate":0,"index":797}],"decl_id":null,"docs":" LiveUpdate is used when a module is being replaced. The bytes contained in this message will, if valid,\n replace the existing actor. This message is sent to an actor from the \"system\" origin\n","sig":null,"attributes":[{"value":"/ LiveUpdate is used when a module is being replaced. The bytes contained in this message will, if valid,","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17158,"byte_end":17265,"line_start":23,"line_end":23,"column_start":1,"column_end":108}},{"value":"/ replace the existing actor. This message is sent to an actor from the \"system\" origin","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17266,"byte_end":17355,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17408,"byte_end":17442,"line_start":26,"line_end":26,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":797},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17510,"byte_end":17520,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"name":"new_module","qualname":"::core::LiveUpdate::new_module","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":" Raw bytes of the new actor\n","sig":null,"attributes":[{"value":"/ Raw bytes of the new actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17471,"byte_end":17501,"line_start":28,"line_end":28,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":851},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17860,"byte_end":17873,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"HealthRequest","qualname":"::core::HealthRequest","value":"HealthRequest { placeholder }","parent":null,"children":[{"krate":0,"index":852}],"decl_id":null,"docs":" A health request is passed to an actor to allow it to return an empty result. If the guest module\n returns the empty result, it is considered healthy. More fields may be added to this message in the future\n to support more fine-grained health detection\n","sig":null,"attributes":[{"value":"/ A health request is passed to an actor to allow it to return an empty result. If the guest module","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17534,"byte_end":17635,"line_start":32,"line_end":32,"column_start":1,"column_end":102}},{"value":"/ returns the empty result, it is considered healthy. More fields may be added to this message in the future","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17636,"byte_end":17746,"line_start":33,"line_end":33,"column_start":1,"column_end":111}},{"value":"/ to support more fine-grained health detection","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17747,"byte_end":17796,"line_start":34,"line_end":34,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":852},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17943,"byte_end":17954,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"name":"placeholder","qualname":"::core::HealthRequest::placeholder","value":"bool","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" A placeholder not currently used for health checks\n","sig":null,"attributes":[{"value":"/ A placeholder not currently used for health checks","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17880,"byte_end":17934,"line_start":37,"line_end":37,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":906},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":18303,"byte_end":18326,"line_start":45,"line_end":45,"column_start":12,"column_end":35},"name":"CapabilityConfiguration","qualname":"::core::CapabilityConfiguration","value":"CapabilityConfiguration { module, values }","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"decl_id":null,"docs":" Capability providers must be able to accept configuration values on a per-actor basis. The module\n field will be the public key of the actor (the `sub` field of its embedded JWT), though providers\n should treat this string as opaque data to be used as a key\n","sig":null,"attributes":[{"value":"/ Capability providers must be able to accept configuration values on a per-actor basis. The module","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":17965,"byte_end":18066,"line_start":41,"line_end":41,"column_start":1,"column_end":102}},{"value":"/ field will be the public key of the actor (the `sub` field of its embedded JWT), though providers","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":18067,"byte_end":18168,"line_start":42,"line_end":42,"column_start":1,"column_end":102}},{"value":"/ should treat this string as opaque data to be used as a key","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":18169,"byte_end":18232,"line_start":43,"line_end":43,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":907},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":18433,"byte_end":18439,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"module","qualname":"::core::CapabilityConfiguration::module","value":"std::string::String","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" The key to be used to distinguish actor configuration, this is the subject's public key\n","sig":null,"attributes":[{"value":"/ The key to be used to distinguish actor configuration, this is the subject's public key","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":18333,"byte_end":18424,"line_start":46,"line_end":46,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":908},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":18512,"byte_end":18518,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"name":"values","qualname":"::core::CapabilityConfiguration::values","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Raw configuration values\n","sig":null,"attributes":[{"value":"/ Raw configuration values","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":18453,"byte_end":18481,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/core.rs","byte_start":18486,"byte_end":18503,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":77},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"eventstreams","qualname":"::eventstreams","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":966},{"krate":0,"index":1027},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":978},{"krate":0,"index":972},{"krate":0,"index":970},{"krate":0,"index":1029},{"krate":0,"index":1082},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1037},{"krate":0,"index":1031},{"krate":0,"index":1084},{"krate":0,"index":1143},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1094},{"krate":0,"index":1088},{"krate":0,"index":83},{"krate":0,"index":1145},{"krate":0,"index":1200},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1155},{"krate":0,"index":1149},{"krate":0,"index":1147},{"krate":0,"index":1202},{"krate":0,"index":1258},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1211},{"krate":0,"index":1205}],"decl_id":null,"docs":" # Event Streaming","sig":null,"attributes":[{"value":"/ # Event Streaming","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":18548,"byte_end":18569,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":18570,"byte_end":18573,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types and operation constants for the `wascc:eventstreams` capability.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":18574,"byte_end":18674,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"/ For more information on append-only event streams, event sourcing, and how they apply","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":18675,"byte_end":18764,"line_start":4,"line_end":4,"column_start":1,"column_end":90}},{"value":"/ to waSCC actor development, check the documentation on [waSCC.dev](https://wascc.dev)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":18765,"byte_end":18854,"line_start":5,"line_end":5,"column_start":1,"column_end":90}}]},{"kind":"Const","id":{"krate":0,"index":80},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":18993,"byte_end":19009,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"OP_DELIVER_EVENT","qualname":"::eventstreams::OP_DELIVER_EVENT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Capability provider uses this operation to deliver an event to an actor\n","sig":null,"attributes":[{"value":"/ Capability provider uses this operation to deliver an event to an actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":18907,"byte_end":18982,"line_start":10,"line_end":10,"column_start":1,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":81},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19131,"byte_end":19145,"line_start":13,"line_end":13,"column_start":11,"column_end":25},"name":"OP_WRITE_EVENT","qualname":"::eventstreams::OP_WRITE_EVENT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Actor invokes this operation on provider to write an event to a given event stream\n","sig":null,"attributes":[{"value":"/ Actor invokes this operation on provider to write an event to a given event stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19034,"byte_end":19120,"line_start":12,"line_end":12,"column_start":1,"column_end":87}}]},{"kind":"Const","id":{"krate":0,"index":82},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19254,"byte_end":19269,"line_start":15,"line_end":15,"column_start":11,"column_end":26},"name":"OP_QUERY_STREAM","qualname":"::eventstreams::OP_QUERY_STREAM","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Actor invokes this operation to execute a query against an event stream\n","sig":null,"attributes":[{"value":"/ Actor invokes this operation to execute a query against an event stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19168,"byte_end":19243,"line_start":14,"line_end":14,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19449,"byte_end":19454,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Event","qualname":"::eventstreams::Event","value":"Event { event_id, stream, values }","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969}],"decl_id":null,"docs":" Represents an immutable event within a stream\n","sig":null,"attributes":[{"value":"/ Represents an immutable event within a stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19294,"byte_end":19343,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19403,"byte_end":19437,"line_start":19,"line_end":19,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":967},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19500,"byte_end":19508,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"name":"event_id","qualname":"::eventstreams::Event::event_id","value":"std::string::String","parent":{"krate":0,"index":966},"children":[],"decl_id":null,"docs":" The unique ID of the event\n","sig":null,"attributes":[{"value":"/ The unique ID of the event","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19461,"byte_end":19491,"line_start":21,"line_end":21,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":968},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19571,"byte_end":19577,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"stream","qualname":"::eventstreams::Event::stream","value":"std::string::String","parent":{"krate":0,"index":966},"children":[],"decl_id":null,"docs":" The stream in which the event occurs\n","sig":null,"attributes":[{"value":"/ The stream in which the event occurs","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19522,"byte_end":19562,"line_start":23,"line_end":23,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":969},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19617,"byte_end":19623,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"values","qualname":"::eventstreams::Event::values","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19591,"byte_end":19608,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1029},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19821,"byte_end":19834,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"WriteResponse","qualname":"::eventstreams::WriteResponse","value":"WriteResponse { event_id }","parent":null,"children":[{"krate":0,"index":1030}],"decl_id":null,"docs":" The response from the provider after writing an event to a stream\n","sig":null,"attributes":[{"value":"/ The response from the provider after writing an event to a stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19653,"byte_end":19722,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19775,"byte_end":19809,"line_start":31,"line_end":31,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1030},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19884,"byte_end":19892,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"name":"event_id","qualname":"::eventstreams::WriteResponse::event_id","value":"std::string::String","parent":{"krate":0,"index":1029},"children":[],"decl_id":null,"docs":" Unique ID of the event written\n","sig":null,"attributes":[{"value":"/ Unique ID of the event written","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19841,"byte_end":19875,"line_start":33,"line_end":33,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1084},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20038,"byte_end":20049,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"StreamQuery","qualname":"::eventstreams::StreamQuery","value":"StreamQuery { stream_id, range, count }","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1086}],"decl_id":null,"docs":" A query against a given stream\n","sig":null,"attributes":[{"value":"/ A query against a given stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19905,"byte_end":19939,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":19992,"byte_end":20026,"line_start":39,"line_end":39,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1085},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20094,"byte_end":20103,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"name":"stream_id","qualname":"::eventstreams::StreamQuery::stream_id","value":"std::string::String","parent":{"krate":0,"index":1084},"children":[],"decl_id":null,"docs":" ID of the stream to query\n","sig":null,"attributes":[{"value":"/ ID of the stream to query","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20056,"byte_end":20085,"line_start":41,"line_end":41,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1087},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20210,"byte_end":20215,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"range","qualname":"::eventstreams::StreamQuery::range","value":"std::option::Option<eventstreams::TimeRange>","parent":{"krate":0,"index":1084},"children":[],"decl_id":null,"docs":" An optional time range limiter on the results of the query\n","sig":null,"attributes":[{"value":"/ An optional time range limiter on the results of the query","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20117,"byte_end":20179,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20184,"byte_end":20201,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1086},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20444,"byte_end":20449,"line_start":48,"line_end":48,"column_start":9,"column_end":14},"name":"count","qualname":"::eventstreams::StreamQuery::count","value":"u64","parent":{"krate":0,"index":1084},"children":[],"decl_id":null,"docs":" A maximum count to return from the query. 0 will return the maximum available\n (which may not include all events--consult the individual provider documentation to verify this behavior)\n","sig":null,"attributes":[{"value":"/ A maximum count to return from the query. 0 will return the maximum available","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20240,"byte_end":20321,"line_start":46,"line_end":46,"column_start":5,"column_end":86}},{"value":"/ (which may not include all events--consult the individual provider documentation to verify this behavior)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20326,"byte_end":20435,"line_start":47,"line_end":47,"column_start":5,"column_end":114}}]},{"kind":"Struct","id":{"krate":0,"index":1145},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20873,"byte_end":20886,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"StreamResults","qualname":"::eventstreams::StreamResults","value":"StreamResults { events }","parent":null,"children":[{"krate":0,"index":1146}],"decl_id":null,"docs":" Results of a stream query\n","sig":null,"attributes":[{"value":"/ Results of a stream query","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20738,"byte_end":20767,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20827,"byte_end":20861,"line_start":66,"line_end":66,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1146},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20968,"byte_end":20974,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"name":"events","qualname":"::eventstreams::StreamResults::events","value":"std::vec::Vec<eventstreams::Event>","parent":{"krate":0,"index":1145},"children":[],"decl_id":null,"docs":" The list of events returned by the query\n","sig":null,"attributes":[{"value":"/ The list of events returned by the query","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20893,"byte_end":20937,"line_start":68,"line_end":68,"column_start":5,"column_end":49}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20942,"byte_end":20959,"line_start":69,"line_end":69,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":21135,"byte_end":21144,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"TimeRange","qualname":"::eventstreams::TimeRange","value":"TimeRange { min_time, max_time }","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204}],"decl_id":null,"docs":" Represents a timeslice range for a stream\n","sig":null,"attributes":[{"value":"/ Represents a timeslice range for a stream","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20991,"byte_end":21036,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":21089,"byte_end":21123,"line_start":75,"line_end":75,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1203},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":21261,"byte_end":21269,"line_start":78,"line_end":78,"column_start":9,"column_end":17},"name":"min_time","qualname":"::eventstreams::TimeRange::min_time","value":"u64","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" Minimum time after which events must have occurred to be in the results (seconds since the epoch)\n","sig":null,"attributes":[{"value":"/ Minimum time after which events must have occurred to be in the results (seconds since the epoch)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":21151,"byte_end":21252,"line_start":77,"line_end":77,"column_start":5,"column_end":106}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":21391,"byte_end":21399,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"max_time","qualname":"::eventstreams::TimeRange::max_time","value":"u64","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" Maximum time before which events must have occurred to be in the results (seconds since the epoch)\n","sig":null,"attributes":[{"value":"/ Maximum time before which events must have occurred to be in the results (seconds since the epoch)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":21280,"byte_end":21382,"line_start":79,"line_end":79,"column_start":5,"column_end":107}}]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"extras","qualname":"::extras","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":1260},{"krate":0,"index":1321},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1272},{"krate":0,"index":1266},{"krate":0,"index":1264},{"krate":0,"index":90},{"krate":0,"index":1323},{"krate":0,"index":1388},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1335},{"krate":0,"index":1329}],"decl_id":null,"docs":" # Extras","sig":null,"attributes":[{"value":"/ # Extras","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21409,"byte_end":21421,"line_start":1,"line_end":1,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21422,"byte_end":21425,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Miscellaneous operations that might be common across many different types of actors that","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21426,"byte_end":21518,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ shouldn't require a full capability provider plugin, like random numbers, sequence","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21519,"byte_end":21605,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ numbers, etc.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21606,"byte_end":21623,"line_start":5,"line_end":5,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":87},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21709,"byte_end":21724,"line_start":10,"line_end":10,"column_start":11,"column_end":26},"name":"OP_REQUEST_GUID","qualname":"::extras::OP_REQUEST_GUID","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation to request the generation of a GUID\n","sig":null,"attributes":[{"value":"/ The operation to request the generation of a GUID","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21645,"byte_end":21698,"line_start":9,"line_end":9,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":88},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21809,"byte_end":21828,"line_start":12,"line_end":12,"column_start":11,"column_end":30},"name":"OP_REQUEST_SEQUENCE","qualname":"::extras::OP_REQUEST_SEQUENCE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation to request a new sequence number\n","sig":null,"attributes":[{"value":"/ The operation to request a new sequence number","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21748,"byte_end":21798,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":89},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21934,"byte_end":21951,"line_start":14,"line_end":14,"column_start":11,"column_end":28},"name":"OP_REQUEST_RANDOM","qualname":"::extras::OP_REQUEST_RANDOM","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation to request a random number with an optional range\n","sig":null,"attributes":[{"value":"/ The operation to request a random number with an optional range","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21856,"byte_end":21923,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1260},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22319,"byte_end":22334,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"GeneratorResult","qualname":"::extras::GeneratorResult","value":"GeneratorResult { guid, sequence_number, random_number }","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263}],"decl_id":null,"docs":" The results of a generation request. The struct has been flattened rather than\n using an enum variant in order to make serialization compatibility easier\n with other parsers that might not handle enums in a predictable way.\n","sig":null,"attributes":[{"value":"/ The results of a generation request. The struct has been flattened rather than","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":21978,"byte_end":22060,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/ using an enum variant in order to make serialization compatibility easier","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22061,"byte_end":22138,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ with other parsers that might not handle enums in a predictable way.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22139,"byte_end":22211,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22273,"byte_end":22307,"line_start":20,"line_end":20,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1261},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22386,"byte_end":22390,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"guid","qualname":"::extras::GeneratorResult::guid","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" The requested GUID, if it exists\n","sig":null,"attributes":[{"value":"/ The requested GUID, if it exists","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22341,"byte_end":22377,"line_start":22,"line_end":22,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1262},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22475,"byte_end":22490,"line_start":25,"line_end":25,"column_start":9,"column_end":24},"name":"sequence_number","qualname":"::extras::GeneratorResult::sequence_number","value":"u64","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" The requested sequence number (0 if not requested)\n","sig":null,"attributes":[{"value":"/ The requested sequence number (0 if not requested)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22412,"byte_end":22466,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1263},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22562,"byte_end":22575,"line_start":27,"line_end":27,"column_start":9,"column_end":22},"name":"random_number","qualname":"::extras::GeneratorResult::random_number","value":"u32","parent":{"krate":0,"index":1260},"children":[],"decl_id":null,"docs":" The requested random number (0 if not requested)\n","sig":null,"attributes":[{"value":"/ The requested random number (0 if not requested)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22501,"byte_end":22553,"line_start":26,"line_end":26,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23240,"byte_end":23256,"line_start":47,"line_end":47,"column_start":12,"column_end":28},"name":"GeneratorRequest","qualname":"::extras::GeneratorRequest","value":"GeneratorRequest { guid, sequence, random, min, max }","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328}],"decl_id":null,"docs":" A request for the generation of numbers that standalone actors cannot\n normally produce because they require random numbers or cryptography\n libraries. This struct has been flattened and avoids enum variants\n to maintain a high level of msgpack serialization compatibility with\n other languages and parsers.\n","sig":null,"attributes":[{"value":"/ A request for the generation of numbers that standalone actors cannot","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22818,"byte_end":22891,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ normally produce because they require random numbers or cryptography","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22892,"byte_end":22964,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ libraries. This struct has been flattened and avoids enum variants","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22965,"byte_end":23035,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ to maintain a high level of msgpack serialization compatibility with","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23036,"byte_end":23108,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/ other languages and parsers.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23109,"byte_end":23141,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23194,"byte_end":23228,"line_start":46,"line_end":46,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1324},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23306,"byte_end":23310,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"guid","qualname":"::extras::GeneratorRequest::guid","value":"bool","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Indicates a request for a GUID\n","sig":null,"attributes":[{"value":"/ Indicates a request for a GUID","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23263,"byte_end":23297,"line_start":48,"line_end":48,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1325},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23376,"byte_end":23384,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"sequence","qualname":"::extras::GeneratorRequest::sequence","value":"bool","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Indicates a request for a sequence number\n","sig":null,"attributes":[{"value":"/ Indicates a request for a sequence number","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23322,"byte_end":23367,"line_start":50,"line_end":50,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1326},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23448,"byte_end":23454,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"random","qualname":"::extras::GeneratorRequest::random","value":"bool","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Indicates a request for a random number\n","sig":null,"attributes":[{"value":"/ Indicates a request for a random number","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23396,"byte_end":23439,"line_start":52,"line_end":52,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1327},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23520,"byte_end":23523,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"name":"min","qualname":"::extras::GeneratorRequest::min","value":"u32","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Minimum value for a random number request\n","sig":null,"attributes":[{"value":"/ Minimum value for a random number request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23466,"byte_end":23511,"line_start":54,"line_end":54,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1328},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23588,"byte_end":23591,"line_start":57,"line_end":57,"column_start":9,"column_end":12},"name":"max","qualname":"::extras::GeneratorRequest::max","value":"u32","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Maximum value for a random number request\n","sig":null,"attributes":[{"value":"/ Maximum value for a random number request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":23534,"byte_end":23579,"line_start":56,"line_end":56,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":92},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"http","qualname":"::http","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":1390},{"krate":0,"index":1484},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1412},{"krate":0,"index":1398},{"krate":0,"index":1396},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":1486},{"krate":0,"index":1577},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1507},{"krate":0,"index":1493},{"krate":0,"index":1491},{"krate":0,"index":101},{"krate":0,"index":103}],"decl_id":null,"docs":" # HTTP server capability data structures","sig":null,"attributes":[{"value":"/ # HTTP server capability data structures","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":23601,"byte_end":23645,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":23646,"byte_end":23649,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types for the `wascc:http_server` and `wascc:httpclient` capabilities","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":23650,"byte_end":23749,"line_start":3,"line_end":3,"column_start":1,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":96},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":23898,"byte_end":23916,"line_start":10,"line_end":10,"column_start":11,"column_end":29},"name":"OP_PERFORM_REQUEST","qualname":"::http::OP_PERFORM_REQUEST","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Operation invoked on a host to perform an HTTP request\n","sig":null,"attributes":[{"value":"/ Operation invoked on a host to perform an HTTP request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":23829,"byte_end":23887,"line_start":9,"line_end":9,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":97},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24026,"byte_end":24043,"line_start":12,"line_end":12,"column_start":11,"column_end":28},"name":"OP_HANDLE_REQUEST","qualname":"::http::OP_HANDLE_REQUEST","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Operation invoked on an actor in response to an inbound HTTP request\n","sig":null,"attributes":[{"value":"/ Operation invoked on an actor in response to an inbound HTTP request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":23943,"byte_end":24015,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1390},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24207,"byte_end":24214,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"Request","qualname":"::http::Request","value":"Request { method, path, query_string, header, body }","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395}],"decl_id":null,"docs":" Describes an HTTP request\n","sig":null,"attributes":[{"value":"/ Describes an HTTP request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24070,"byte_end":24099,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24161,"byte_end":24195,"line_start":16,"line_end":16,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1391},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24273,"byte_end":24279,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"method","qualname":"::http::Request::method","value":"std::string::String","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":" The HTTP method (e.g. GET, PUT, DELETE)\n","sig":null,"attributes":[{"value":"/ The HTTP method (e.g. GET, PUT, DELETE)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24221,"byte_end":24264,"line_start":18,"line_end":18,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1392},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24372,"byte_end":24376,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"path","qualname":"::http::Request::path","value":"std::string::String","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":" The path or URL of the request, leading slashes may not be trimmed\n","sig":null,"attributes":[{"value":"/ The path or URL of the request, leading slashes may not be trimmed","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24293,"byte_end":24363,"line_start":20,"line_end":20,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1393},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24438,"byte_end":24450,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"name":"query_string","qualname":"::http::Request::query_string","value":"std::string::String","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":" The query string portion of the URL\n","sig":null,"attributes":[{"value":"/ The query string portion of the URL","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24390,"byte_end":24429,"line_start":22,"line_end":22,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1394},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24546,"byte_end":24552,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"header","qualname":"::http::Request::header","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":" The request headers as a map of key-value pairs\n","sig":null,"attributes":[{"value":"/ The request headers as a map of key-value pairs","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24464,"byte_end":24515,"line_start":24,"line_end":24,"column_start":5,"column_end":56}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24520,"byte_end":24537,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1395},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24686,"byte_end":24690,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"body","qualname":"::http::Request::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1390},"children":[],"decl_id":null,"docs":" The raw bytes of the request body\n","sig":null,"attributes":[{"value":"/ The raw bytes of the request body","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24583,"byte_end":24620,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"serde(with = \"serde_bytes\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24625,"byte_end":24655,"line_start":28,"line_end":28,"column_start":5,"column_end":35}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24660,"byte_end":24677,"line_start":29,"line_end":29,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1486},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25374,"byte_end":25382,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"Response","qualname":"::http::Response","value":"Response { status_code, status, header, body }","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490}],"decl_id":null,"docs":" Represents an HTTP response\n","sig":null,"attributes":[{"value":"/ Represents an HTTP response","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25235,"byte_end":25266,"line_start":53,"line_end":53,"column_start":1,"column_end":32}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25328,"byte_end":25362,"line_start":55,"line_end":55,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1487},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25449,"byte_end":25460,"line_start":58,"line_end":58,"column_start":9,"column_end":20},"name":"status_code","qualname":"::http::Response::status_code","value":"u32","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" The response's numerical status code (e.g. 200)\n","sig":null,"attributes":[{"value":"/ The response's numerical status code (e.g. 200)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25389,"byte_end":25440,"line_start":57,"line_end":57,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1488},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25528,"byte_end":25534,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"status","qualname":"::http::Response::status","value":"std::string::String","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" The string version of the status (e.g. 'OK')\n","sig":null,"attributes":[{"value":"/ The string version of the status (e.g. 'OK')","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25471,"byte_end":25519,"line_start":59,"line_end":59,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1489},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25624,"byte_end":25630,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"name":"header","qualname":"::http::Response::header","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" HTTP response headers as key-value pairs.\n","sig":null,"attributes":[{"value":"/ HTTP response headers as key-value pairs.","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25570,"byte_end":25615,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25548,"byte_end":25565,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1490},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25756,"byte_end":25760,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"name":"body","qualname":"::http::Response::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1486},"children":[],"decl_id":null,"docs":" The raw bytes of the body\n","sig":null,"attributes":[{"value":"/ The raw bytes of the body","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25661,"byte_end":25690,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"serde(with = \"serde_bytes\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25695,"byte_end":25725,"line_start":65,"line_end":65,"column_start":5,"column_end":35}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25730,"byte_end":25747,"line_start":66,"line_end":66,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":26152,"byte_end":26156,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"json","qualname":"<Response>::json","value":"pub fn json<T>(T, u32, &str) -> Response where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Creates a response with a given status code and serializes the given payload as JSON\n","sig":null,"attributes":[{"value":"/ Creates a response with a given status code and serializes the given payload as JSON","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":26052,"byte_end":26140,"line_start":82,"line_end":82,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":26536,"byte_end":26545,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"not_found","qualname":"<Response>::not_found","value":"pub fn not_found() -> Response","parent":null,"children":[],"decl_id":null,"docs":" Handy shortcut for creating a 404/Not Found response\n","sig":null,"attributes":[{"value":"/ Handy shortcut for creating a 404/Not Found response","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":26468,"byte_end":26524,"line_start":95,"line_end":95,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":26772,"byte_end":26774,"line_start":105,"line_end":105,"column_start":12,"column_end":14},"name":"ok","qualname":"<Response>::ok","value":"pub fn ok() -> Response","parent":null,"children":[],"decl_id":null,"docs":" Useful shortcut for creating a 200/OK response\n","sig":null,"attributes":[{"value":"/ Useful shortcut for creating a 200/OK response","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":26710,"byte_end":26760,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":27013,"byte_end":27034,"line_start":114,"line_end":114,"column_start":12,"column_end":33},"name":"internal_server_error","qualname":"<Response>::internal_server_error","value":"pub fn internal_server_error(&str) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Useful shortcut for creating a 500/Internal Server Error response\n","sig":null,"attributes":[{"value":"/ Useful shortcut for creating a 500/Internal Server Error response","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":26932,"byte_end":27001,"line_start":113,"line_end":113,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":27337,"byte_end":27348,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"bad_request","qualname":"<Response>::bad_request","value":"pub fn bad_request() -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shortcut for creating a 400/Bad Request response\n","sig":null,"attributes":[{"value":"/ Shortcut for creating a 400/Bad Request response","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":27273,"byte_end":27325,"line_start":123,"line_end":123,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":110},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"keyvalue","qualname":"::keyvalue","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":1579},{"krate":0,"index":1632},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1587},{"krate":0,"index":1581},{"krate":0,"index":1634},{"krate":0,"index":1690},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1643},{"krate":0,"index":1637},{"krate":0,"index":1692},{"krate":0,"index":1751},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1702},{"krate":0,"index":1696},{"krate":0,"index":126},{"krate":0,"index":1753},{"krate":0,"index":1806},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1761},{"krate":0,"index":1755},{"krate":0,"index":1808},{"krate":0,"index":1861},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1816},{"krate":0,"index":1810},{"krate":0,"index":1863},{"krate":0,"index":1916},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1871},{"krate":0,"index":1865},{"krate":0,"index":1918},{"krate":0,"index":1974},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1927},{"krate":0,"index":1921},{"krate":0,"index":1976},{"krate":0,"index":2029},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":1984},{"krate":0,"index":1978},{"krate":0,"index":2031},{"krate":0,"index":2087},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2040},{"krate":0,"index":2034},{"krate":0,"index":2089},{"krate":0,"index":2145},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2098},{"krate":0,"index":2092},{"krate":0,"index":2147},{"krate":0,"index":2200},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2155},{"krate":0,"index":2149},{"krate":0,"index":2202},{"krate":0,"index":2261},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2212},{"krate":0,"index":2206},{"krate":0,"index":2263},{"krate":0,"index":2316},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2271},{"krate":0,"index":2265},{"krate":0,"index":2318},{"krate":0,"index":2371},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2326},{"krate":0,"index":2320},{"krate":0,"index":2373},{"krate":0,"index":2429},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2382},{"krate":0,"index":2376},{"krate":0,"index":2431},{"krate":0,"index":2487},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2440},{"krate":0,"index":2434},{"krate":0,"index":2489},{"krate":0,"index":2542},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2497},{"krate":0,"index":2491},{"krate":0,"index":2544},{"krate":0,"index":2597},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2552},{"krate":0,"index":2546},{"krate":0,"index":2599},{"krate":0,"index":2652},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2607},{"krate":0,"index":2601},{"krate":0,"index":2654},{"krate":0,"index":2707},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2662},{"krate":0,"index":2656},{"krate":0,"index":2709},{"krate":0,"index":2762},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2717},{"krate":0,"index":2711},{"krate":0,"index":2764},{"krate":0,"index":2817},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2772},{"krate":0,"index":2766}],"decl_id":null,"docs":" # Key-Value Store Data Types","sig":null,"attributes":[{"value":"/ # Key-Value Store Data Types","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27513,"byte_end":27545,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27546,"byte_end":27549,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types for the `wascc:keyvalue` capability provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27550,"byte_end":27630,"line_start":3,"line_end":3,"column_start":1,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":112},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27662,"byte_end":27668,"line_start":7,"line_end":7,"column_start":11,"column_end":17},"name":"OP_ADD","qualname":"::keyvalue::OP_ADD","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":113},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27694,"byte_end":27700,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"OP_GET","qualname":"::keyvalue::OP_GET","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":114},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27726,"byte_end":27732,"line_start":9,"line_end":9,"column_start":11,"column_end":17},"name":"OP_SET","qualname":"::keyvalue::OP_SET","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":115},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27758,"byte_end":27764,"line_start":10,"line_end":10,"column_start":11,"column_end":17},"name":"OP_DEL","qualname":"::keyvalue::OP_DEL","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":116},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27790,"byte_end":27798,"line_start":11,"line_end":11,"column_start":11,"column_end":19},"name":"OP_CLEAR","qualname":"::keyvalue::OP_CLEAR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":117},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27826,"byte_end":27834,"line_start":12,"line_end":12,"column_start":11,"column_end":19},"name":"OP_RANGE","qualname":"::keyvalue::OP_RANGE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":118},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27862,"byte_end":27869,"line_start":13,"line_end":13,"column_start":11,"column_end":18},"name":"OP_PUSH","qualname":"::keyvalue::OP_PUSH","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":119},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27896,"byte_end":27907,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"OP_LIST_DEL","qualname":"::keyvalue::OP_LIST_DEL","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":120},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27945,"byte_end":27955,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"OP_SET_ADD","qualname":"::keyvalue::OP_SET_ADD","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":121},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":27984,"byte_end":27997,"line_start":17,"line_end":17,"column_start":11,"column_end":24},"name":"OP_SET_REMOVE","qualname":"::keyvalue::OP_SET_REMOVE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":122},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28029,"byte_end":28041,"line_start":18,"line_end":18,"column_start":11,"column_end":23},"name":"OP_SET_UNION","qualname":"::keyvalue::OP_SET_UNION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":123},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28072,"byte_end":28088,"line_start":19,"line_end":19,"column_start":11,"column_end":27},"name":"OP_SET_INTERSECT","qualname":"::keyvalue::OP_SET_INTERSECT","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":124},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28126,"byte_end":28138,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"OP_SET_QUERY","qualname":"::keyvalue::OP_SET_QUERY","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":125},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28169,"byte_end":28182,"line_start":21,"line_end":21,"column_start":11,"column_end":24},"name":"OP_KEY_EXISTS","qualname":"::keyvalue::OP_KEY_EXISTS","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1579},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28358,"byte_end":28368,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"GetRequest","qualname":"::keyvalue::GetRequest","value":"GetRequest { key }","parent":null,"children":[{"krate":0,"index":1580}],"decl_id":null,"docs":" A request to get a single value from the K/V store\n","sig":null,"attributes":[{"value":"/ A request to get a single value from the K/V store","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28205,"byte_end":28259,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28312,"byte_end":28346,"line_start":25,"line_end":25,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1580},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28379,"byte_end":28382,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::GetRequest::key","value":"std::string::String","parent":{"krate":0,"index":1579},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1634},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28525,"byte_end":28536,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"GetResponse","qualname":"::keyvalue::GetResponse","value":"GetResponse { value, exists }","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636}],"decl_id":null,"docs":" The result of a get request\n","sig":null,"attributes":[{"value":"/ The result of a get request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28395,"byte_end":28426,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28479,"byte_end":28513,"line_start":32,"line_end":32,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1635},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28594,"byte_end":28599,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::GetResponse::value","value":"std::string::String","parent":{"krate":0,"index":1634},"children":[],"decl_id":null,"docs":" The value returned from the data store\n","sig":null,"attributes":[{"value":"/ The value returned from the data store","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28543,"byte_end":28585,"line_start":34,"line_end":34,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1636},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28659,"byte_end":28665,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"exists","qualname":"::keyvalue::GetResponse::exists","value":"bool","parent":{"krate":0,"index":1634},"children":[],"decl_id":null,"docs":" Indicates whether the key existed\n","sig":null,"attributes":[{"value":"/ Indicates whether the key existed","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28613,"byte_end":28650,"line_start":36,"line_end":36,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1692},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28803,"byte_end":28813,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"SetRequest","qualname":"::keyvalue::SetRequest","value":"SetRequest { key, value, expires_s }","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695}],"decl_id":null,"docs":" A request to set a value\n","sig":null,"attributes":[{"value":"/ A request to set a value","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28676,"byte_end":28704,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28757,"byte_end":28791,"line_start":42,"line_end":42,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1693},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28855,"byte_end":28858,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::SetRequest::key","value":"std::string::String","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Key of the item to set\n","sig":null,"attributes":[{"value":"/ Key of the item to set","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28820,"byte_end":28846,"line_start":44,"line_end":44,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1694},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28909,"byte_end":28914,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::SetRequest::value","value":"std::string::String","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Value of the item to set\n","sig":null,"attributes":[{"value":"/ Value of the item to set","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28872,"byte_end":28900,"line_start":46,"line_end":46,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1695},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29032,"byte_end":29041,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"name":"expires_s","qualname":"::keyvalue::SetRequest::expires_s","value":"i32","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":" Seconds after which the key will expire, 0 - no expiration\n","sig":null,"attributes":[{"value":"/ Seconds after which the key will expire, 0 - no expiration","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28928,"byte_end":28990,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"serde(rename = \"expires\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":28995,"byte_end":29023,"line_start":49,"line_end":49,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1753},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29380,"byte_end":29390,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"DelRequest","qualname":"::keyvalue::DelRequest","value":"DelRequest { key }","parent":null,"children":[{"krate":0,"index":1754}],"decl_id":null,"docs":" A request to delete a key\n","sig":null,"attributes":[{"value":"/ A request to delete a key","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29252,"byte_end":29281,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29334,"byte_end":29368,"line_start":65,"line_end":65,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1754},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29401,"byte_end":29404,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::DelRequest::key","value":"std::string::String","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1808},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29515,"byte_end":29526,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"DelResponse","qualname":"::keyvalue::DelResponse","value":"DelResponse { key }","parent":null,"children":[{"krate":0,"index":1809}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29469,"byte_end":29503,"line_start":71,"line_end":71,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1809},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29537,"byte_end":29540,"line_start":73,"line_end":73,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::DelResponse::key","value":"std::string::String","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1863},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29681,"byte_end":29692,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"SetResponse","qualname":"::keyvalue::SetResponse","value":"SetResponse { value }","parent":null,"children":[{"krate":0,"index":1864}],"decl_id":null,"docs":" Response to a set request\n","sig":null,"attributes":[{"value":"/ Response to a set request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29553,"byte_end":29582,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29635,"byte_end":29669,"line_start":78,"line_end":78,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1864},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29703,"byte_end":29708,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::SetResponse::value","value":"std::string::String","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1918},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29868,"byte_end":29878,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"AddRequest","qualname":"::keyvalue::AddRequest","value":"AddRequest { key, value }","parent":null,"children":[{"krate":0,"index":1919},{"krate":0,"index":1920}],"decl_id":null,"docs":" A request to perform an atomic add operation\n","sig":null,"attributes":[{"value":"/ A request to perform an atomic add operation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29721,"byte_end":29769,"line_start":83,"line_end":83,"column_start":1,"column_end":49}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29822,"byte_end":29856,"line_start":85,"line_end":85,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1919},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29889,"byte_end":29892,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::AddRequest::key","value":"std::string::String","parent":{"krate":0,"index":1918},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1920},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29910,"byte_end":29915,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::AddRequest::value","value":"i32","parent":{"krate":0,"index":1918},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1976},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30061,"byte_end":30072,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"AddResponse","qualname":"::keyvalue::AddResponse","value":"AddResponse { value }","parent":null,"children":[{"krate":0,"index":1977}],"decl_id":null,"docs":" Result of an atomic add operation\n","sig":null,"attributes":[{"value":"/ Result of an atomic add operation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29925,"byte_end":29962,"line_start":91,"line_end":91,"column_start":1,"column_end":38}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30015,"byte_end":30049,"line_start":93,"line_end":93,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1977},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30083,"byte_end":30088,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::AddResponse::value","value":"i32","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2031},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30246,"byte_end":30261,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"ListPushRequest","qualname":"::keyvalue::ListPushRequest","value":"ListPushRequest { key, value }","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2033}],"decl_id":null,"docs":" A request to add an item to the end of a list\n","sig":null,"attributes":[{"value":"/ A request to add an item to the end of a list","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30098,"byte_end":30147,"line_start":98,"line_end":98,"column_start":1,"column_end":50}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30200,"byte_end":30234,"line_start":100,"line_end":100,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2032},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30272,"byte_end":30275,"line_start":102,"line_end":102,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::ListPushRequest::key","value":"std::string::String","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2033},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30293,"byte_end":30298,"line_start":103,"line_end":103,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::ListPushRequest::value","value":"std::string::String","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2089},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30471,"byte_end":30489,"line_start":109,"line_end":109,"column_start":12,"column_end":30},"name":"ListDelItemRequest","qualname":"::keyvalue::ListDelItemRequest","value":"ListDelItemRequest { key, value }","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091}],"decl_id":null,"docs":" A request to delete all occurences of an item from a list\n","sig":null,"attributes":[{"value":"/ A request to delete all occurences of an item from a list","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30311,"byte_end":30372,"line_start":106,"line_end":106,"column_start":1,"column_end":62}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30425,"byte_end":30459,"line_start":108,"line_end":108,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2090},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30500,"byte_end":30503,"line_start":110,"line_end":110,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::ListDelItemRequest::key","value":"std::string::String","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2091},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30521,"byte_end":30526,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::ListDelItemRequest::value","value":"std::string::String","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2147},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30682,"byte_end":30698,"line_start":117,"line_end":117,"column_start":12,"column_end":28},"name":"ListClearRequest","qualname":"::keyvalue::ListClearRequest","value":"ListClearRequest { key }","parent":null,"children":[{"krate":0,"index":2148}],"decl_id":null,"docs":" A request to clear a list at a given key\n","sig":null,"attributes":[{"value":"/ A request to clear a list at a given key","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30539,"byte_end":30583,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30636,"byte_end":30670,"line_start":116,"line_end":116,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2148},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30709,"byte_end":30712,"line_start":118,"line_end":118,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::ListClearRequest::key","value":"std::string::String","parent":{"krate":0,"index":2147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2202},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30879,"byte_end":30895,"line_start":124,"line_end":124,"column_start":12,"column_end":28},"name":"ListRangeRequest","qualname":"::keyvalue::ListRangeRequest","value":"ListRangeRequest { key, start, stop }","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205}],"decl_id":null,"docs":" A request to retrieve a range of values from a list\n","sig":null,"attributes":[{"value":"/ A request to retrieve a range of values from a list","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30725,"byte_end":30780,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30833,"byte_end":30867,"line_start":123,"line_end":123,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2203},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30906,"byte_end":30909,"line_start":125,"line_end":125,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::ListRangeRequest::key","value":"std::string::String","parent":{"krate":0,"index":2202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2204},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30927,"byte_end":30932,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"name":"start","qualname":"::keyvalue::ListRangeRequest::start","value":"i32","parent":{"krate":0,"index":2202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2205},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30947,"byte_end":30951,"line_start":127,"line_end":127,"column_start":9,"column_end":13},"name":"stop","qualname":"::keyvalue::ListRangeRequest::stop","value":"i32","parent":{"krate":0,"index":2202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2263},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31108,"byte_end":31125,"line_start":133,"line_end":133,"column_start":12,"column_end":29},"name":"ListRangeResponse","qualname":"::keyvalue::ListRangeResponse","value":"ListRangeResponse { values }","parent":null,"children":[{"krate":0,"index":2264}],"decl_id":null,"docs":" List of values returned from a range request\n","sig":null,"attributes":[{"value":"/ List of values returned from a range request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":30961,"byte_end":31009,"line_start":130,"line_end":130,"column_start":1,"column_end":49}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31062,"byte_end":31096,"line_start":132,"line_end":132,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2264},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31158,"byte_end":31164,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"name":"values","qualname":"::keyvalue::ListRangeResponse::values","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31132,"byte_end":31149,"line_start":134,"line_end":134,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2318},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31349,"byte_end":31361,"line_start":141,"line_end":141,"column_start":12,"column_end":24},"name":"ListResponse","qualname":"::keyvalue::ListResponse","value":"ListResponse { new_count }","parent":null,"children":[{"krate":0,"index":2319}],"decl_id":null,"docs":" Return response from non-range list requests like push and clear\n","sig":null,"attributes":[{"value":"/ Return response from non-range list requests like push and clear","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31182,"byte_end":31250,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31303,"byte_end":31337,"line_start":140,"line_end":140,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2319},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31372,"byte_end":31381,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"name":"new_count","qualname":"::keyvalue::ListResponse::new_count","value":"i32","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2373},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31525,"byte_end":31538,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"SetAddRequest","qualname":"::keyvalue::SetAddRequest","value":"SetAddRequest { key, value }","parent":null,"children":[{"krate":0,"index":2374},{"krate":0,"index":2375}],"decl_id":null,"docs":" Request to add an item to a set\n","sig":null,"attributes":[{"value":"/ Request to add an item to a set","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31391,"byte_end":31426,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31479,"byte_end":31513,"line_start":147,"line_end":147,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2374},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31549,"byte_end":31552,"line_start":149,"line_end":149,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::SetAddRequest::key","value":"std::string::String","parent":{"krate":0,"index":2373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2375},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31570,"byte_end":31575,"line_start":150,"line_end":150,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::SetAddRequest::value","value":"std::string::String","parent":{"krate":0,"index":2373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2431},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31736,"byte_end":31752,"line_start":156,"line_end":156,"column_start":12,"column_end":28},"name":"SetRemoveRequest","qualname":"::keyvalue::SetRemoveRequest","value":"SetRemoveRequest { key, value }","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2433}],"decl_id":null,"docs":" Request to remove a specific value from a set\n","sig":null,"attributes":[{"value":"/ Request to remove a specific value from a set","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31588,"byte_end":31637,"line_start":153,"line_end":153,"column_start":1,"column_end":50}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31690,"byte_end":31724,"line_start":155,"line_end":155,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2432},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31763,"byte_end":31766,"line_start":157,"line_end":157,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::SetRemoveRequest::key","value":"std::string::String","parent":{"krate":0,"index":2431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2433},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31784,"byte_end":31789,"line_start":158,"line_end":158,"column_start":9,"column_end":14},"name":"value","qualname":"::keyvalue::SetRemoveRequest::value","value":"std::string::String","parent":{"krate":0,"index":2431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2489},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31943,"byte_end":31958,"line_start":164,"line_end":164,"column_start":12,"column_end":27},"name":"SetQueryRequest","qualname":"::keyvalue::SetQueryRequest","value":"SetQueryRequest { key }","parent":null,"children":[{"krate":0,"index":2490}],"decl_id":null,"docs":" Request to query the contents of a set\n","sig":null,"attributes":[{"value":"/ Request to query the contents of a set","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31802,"byte_end":31844,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31897,"byte_end":31931,"line_start":163,"line_end":163,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2490},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31969,"byte_end":31972,"line_start":165,"line_end":165,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::SetQueryRequest::key","value":"std::string::String","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2544},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32170,"byte_end":32186,"line_start":171,"line_end":171,"column_start":12,"column_end":28},"name":"SetQueryResponse","qualname":"::keyvalue::SetQueryResponse","value":"SetQueryResponse { values }","parent":null,"children":[{"krate":0,"index":2545}],"decl_id":null,"docs":" Response to an operation that requests members of a list (query, intersect, union)\n","sig":null,"attributes":[{"value":"/ Response to an operation that requests members of a list (query, intersect, union)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":31985,"byte_end":32071,"line_start":168,"line_end":168,"column_start":1,"column_end":87}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32124,"byte_end":32158,"line_start":170,"line_end":170,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2545},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32219,"byte_end":32225,"line_start":173,"line_end":173,"column_start":9,"column_end":15},"name":"values","qualname":"::keyvalue::SetQueryResponse::values","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32193,"byte_end":32210,"line_start":172,"line_end":172,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2599},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32391,"byte_end":32413,"line_start":179,"line_end":179,"column_start":12,"column_end":34},"name":"SetIntersectionRequest","qualname":"::keyvalue::SetIntersectionRequest","value":"SetIntersectionRequest { keys }","parent":null,"children":[{"krate":0,"index":2600}],"decl_id":null,"docs":" Request for the intersection of multiple sets\n","sig":null,"attributes":[{"value":"/ Request for the intersection of multiple sets","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32243,"byte_end":32292,"line_start":176,"line_end":176,"column_start":1,"column_end":50}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32345,"byte_end":32379,"line_start":178,"line_end":178,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2600},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32446,"byte_end":32450,"line_start":181,"line_end":181,"column_start":9,"column_end":13},"name":"keys","qualname":"::keyvalue::SetIntersectionRequest::keys","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32420,"byte_end":32437,"line_start":180,"line_end":180,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2654},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32609,"byte_end":32624,"line_start":187,"line_end":187,"column_start":12,"column_end":27},"name":"SetUnionRequest","qualname":"::keyvalue::SetUnionRequest","value":"SetUnionRequest { keys }","parent":null,"children":[{"krate":0,"index":2655}],"decl_id":null,"docs":" Request for the union of multiple sets\n","sig":null,"attributes":[{"value":"/ Request for the union of multiple sets","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32468,"byte_end":32510,"line_start":184,"line_end":184,"column_start":1,"column_end":43}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32563,"byte_end":32597,"line_start":186,"line_end":186,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2655},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32657,"byte_end":32661,"line_start":189,"line_end":189,"column_start":9,"column_end":13},"name":"keys","qualname":"::keyvalue::SetUnionRequest::keys","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2654},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32631,"byte_end":32648,"line_start":188,"line_end":188,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2709},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32821,"byte_end":32841,"line_start":195,"line_end":195,"column_start":12,"column_end":32},"name":"SetOperationResponse","qualname":"::keyvalue::SetOperationResponse","value":"SetOperationResponse { new_count }","parent":null,"children":[{"krate":0,"index":2710}],"decl_id":null,"docs":" Response to a set query, add, or delete\n","sig":null,"attributes":[{"value":"/ Response to a set query, add, or delete","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32679,"byte_end":32722,"line_start":192,"line_end":192,"column_start":1,"column_end":44}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32775,"byte_end":32809,"line_start":194,"line_end":194,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2710},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32852,"byte_end":32861,"line_start":196,"line_end":196,"column_start":9,"column_end":18},"name":"new_count","qualname":"::keyvalue::SetOperationResponse::new_count","value":"i32","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2764},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":33005,"byte_end":33019,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"KeyExistsQuery","qualname":"::keyvalue::KeyExistsQuery","value":"KeyExistsQuery { key }","parent":null,"children":[{"krate":0,"index":2765}],"decl_id":null,"docs":" Test for the existence of a key\n","sig":null,"attributes":[{"value":"/ Test for the existence of a key","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32871,"byte_end":32906,"line_start":199,"line_end":199,"column_start":1,"column_end":36}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":32959,"byte_end":32993,"line_start":201,"line_end":201,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2765},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":33030,"byte_end":33033,"line_start":203,"line_end":203,"column_start":9,"column_end":12},"name":"key","qualname":"::keyvalue::KeyExistsQuery::key","value":"std::string::String","parent":{"krate":0,"index":2764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"logging","qualname":"::logging","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":2819},{"krate":0,"index":2875},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2828},{"krate":0,"index":2822},{"krate":0,"index":131}],"decl_id":null,"docs":" # Logging Data Types","sig":null,"attributes":[{"value":"/ # Logging Data Types","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33046,"byte_end":33070,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33071,"byte_end":33074,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types for the `wascc:logging` capability provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33075,"byte_end":33154,"line_start":3,"line_end":3,"column_start":1,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":130},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33226,"byte_end":33232,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"OP_LOG","qualname":"::logging::OP_LOG","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" An operation to request a log write\n","sig":null,"attributes":[{"value":"/ An operation to request a log write","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33176,"byte_end":33215,"line_start":7,"line_end":7,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2819},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33646,"byte_end":33661,"line_start":16,"line_end":16,"column_start":12,"column_end":27},"name":"WriteLogRequest","qualname":"::logging::WriteLogRequest","value":"WriteLogRequest { level, body }","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":2821}],"decl_id":null,"docs":" Represents a request to write a log entry. Use this type of log entry if you are\n pulling or aggregating logs on a per-actor basis from the host. If you just need\n to dump debug information to the log, use the built-in simple `println` or `consoleLog`\n function from the actor API\n","sig":null,"attributes":[{"value":"/ Represents a request to write a log entry. Use this type of log entry if you are","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33254,"byte_end":33338,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"/ pulling or aggregating logs on a per-actor basis from the host. If you just need","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33339,"byte_end":33423,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/ to dump debug information to the log, use the built-in simple `println` or `consoleLog`","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33424,"byte_end":33515,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ function from the actor API","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33516,"byte_end":33547,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33600,"byte_end":33634,"line_start":15,"line_end":15,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2820},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33787,"byte_end":33792,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"level","qualname":"::logging::WriteLogRequest::level","value":"u32","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" Corresponds to the log level","sig":null,"attributes":[{"value":"/ Corresponds to the log level","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33668,"byte_end":33700,"line_start":17,"line_end":17,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33705,"byte_end":33708,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ \"OFF\"=0 , \"ERROR\"=1, \"WARN\"=2, \"INFO\"=3, \"DEBUG\"=4, \"TRACE\"=5","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33713,"byte_end":33778,"line_start":19,"line_end":19,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2821},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33868,"byte_end":33872,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"body","qualname":"::logging::WriteLogRequest::body","value":"std::string::String","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" A string that represents the body of the log message\n","sig":null,"attributes":[{"value":"/ A string that represents the body of the log message","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33803,"byte_end":33859,"line_start":21,"line_end":21,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":133},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"messaging","qualname":"::messaging","value":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":2877},{"krate":0,"index":2963},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2895},{"krate":0,"index":2881},{"krate":0,"index":2965},{"krate":0,"index":3051},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":2983},{"krate":0,"index":2969},{"krate":0,"index":138}],"decl_id":null,"docs":" # Message Broker Data Types","sig":null,"attributes":[{"value":"/ # Message Broker Data Types","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34069,"byte_end":34100,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34101,"byte_end":34104,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains data types for the `wascc:messaging` capability provider","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34105,"byte_end":34186,"line_start":3,"line_end":3,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":135},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34271,"byte_end":34289,"line_start":8,"line_end":8,"column_start":11,"column_end":29},"name":"OP_PUBLISH_MESSAGE","qualname":"::messaging::OP_PUBLISH_MESSAGE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation to publish a message from an actor\n","sig":null,"attributes":[{"value":"/ The operation to publish a message from an actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34208,"byte_end":34260,"line_start":7,"line_end":7,"column_start":1,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":136},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34370,"byte_end":34388,"line_start":10,"line_end":10,"column_start":11,"column_end":29},"name":"OP_DELIVER_MESSAGE","qualname":"::messaging::OP_DELIVER_MESSAGE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation to deliver a message to an actor\n","sig":null,"attributes":[{"value":"/ The operation to deliver a message to an actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34309,"byte_end":34359,"line_start":9,"line_end":9,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":137},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34493,"byte_end":34511,"line_start":12,"line_end":12,"column_start":11,"column_end":29},"name":"OP_PERFORM_REQUEST","qualname":"::messaging::OP_PERFORM_REQUEST","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The operation for an actor to perform a request-reply operation\n","sig":null,"attributes":[{"value":"/ The operation for an actor to perform a request-reply operation","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34415,"byte_end":34482,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2877},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34671,"byte_end":34684,"line_start":17,"line_end":17,"column_start":12,"column_end":25},"name":"BrokerMessage","qualname":"::messaging::BrokerMessage","value":"BrokerMessage { subject, reply_to, body }","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880}],"decl_id":null,"docs":" A representation of a broker message\n","sig":null,"attributes":[{"value":"/ A representation of a broker message","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34532,"byte_end":34572,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34625,"byte_end":34659,"line_start":16,"line_end":16,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2878},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34732,"byte_end":34739,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"subject","qualname":"::messaging::BrokerMessage::subject","value":"std::string::String","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":" The message subject or topic\n","sig":null,"attributes":[{"value":"/ The message subject or topic","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34691,"byte_end":34723,"line_start":18,"line_end":18,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2879},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34848,"byte_end":34856,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"reply_to","qualname":"::messaging::BrokerMessage::reply_to","value":"std::string::String","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":" The reply-to field of the subject. This will be empty if there is no reply subject\n","sig":null,"attributes":[{"value":"/ The reply-to field of the subject. This will be empty if there is no reply subject","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34753,"byte_end":34839,"line_start":20,"line_end":20,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":2880},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35029,"byte_end":35033,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"name":"body","qualname":"::messaging::BrokerMessage::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":" The raw bytes of the message. Encoding/contents is determined by applications out of band\n","sig":null,"attributes":[{"value":"/ The raw bytes of the message. Encoding/contents is determined by applications out of band","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34870,"byte_end":34963,"line_start":22,"line_end":22,"column_start":5,"column_end":98}},{"value":"serde(with = \"serde_bytes\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":34968,"byte_end":34998,"line_start":23,"line_end":23,"column_start":5,"column_end":35}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35003,"byte_end":35020,"line_start":24,"line_end":24,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2965},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35296,"byte_end":35310,"line_start":32,"line_end":32,"column_start":12,"column_end":26},"name":"RequestMessage","qualname":"::messaging::RequestMessage","value":"RequestMessage { subject, body, timeout_ms }","parent":null,"children":[{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968}],"decl_id":null,"docs":" A request for the broker to make a request-and-reply publication. Inbox management\n is handled by the provider implementation, not by the actor\n","sig":null,"attributes":[{"value":"/ A request for the broker to make a request-and-reply publication. Inbox management","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35047,"byte_end":35133,"line_start":28,"line_end":28,"column_start":1,"column_end":87}},{"value":"/ is handled by the provider implementation, not by the actor","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35134,"byte_end":35197,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35250,"byte_end":35284,"line_start":31,"line_end":31,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2966},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35369,"byte_end":35376,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"subject","qualname":"::messaging::RequestMessage::subject","value":"std::string::String","parent":{"krate":0,"index":2965},"children":[],"decl_id":null,"docs":" Subject on which to publish the request\n","sig":null,"attributes":[{"value":"/ Subject on which to publish the request","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35317,"byte_end":35360,"line_start":33,"line_end":33,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2967},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35491,"byte_end":35495,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"body","qualname":"::messaging::RequestMessage::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2965},"children":[],"decl_id":null,"docs":" Raw body of the request message\n","sig":null,"attributes":[{"value":"/ Raw body of the request message","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35390,"byte_end":35425,"line_start":35,"line_end":35,"column_start":5,"column_end":40}},{"value":"serde(with = \"serde_bytes\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35430,"byte_end":35460,"line_start":36,"line_end":36,"column_start":5,"column_end":35}},{"value":"serde(default)","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35465,"byte_end":35482,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2968},"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35616,"byte_end":35626,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"name":"timeout_ms","qualname":"::messaging::RequestMessage::timeout_ms","value":"i64","parent":{"krate":0,"index":2965},"children":[],"decl_id":null,"docs":" The timeout (milliseconds) to await a reply before giving up\n","sig":null,"attributes":[{"value":"/ The timeout (milliseconds) to await a reply before giving up","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35510,"byte_end":35574,"line_start":39,"line_end":39,"column_start":5,"column_end":69}},{"value":"serde(rename = \"timeout\")","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35579,"byte_end":35607,"line_start":40,"line_end":40,"column_start":5,"column_end":33}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5011,"byte_end":5020,"line_start":49,"line_end":49,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5717,"byte_end":5730,"line_start":77,"line_end":77,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9423,"byte_end":9443,"line_start":49,"line_end":49,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9723,"byte_end":9750,"line_start":61,"line_end":61,"column_start":6,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12611,"byte_end":12630,"line_start":147,"line_end":147,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13500,"byte_end":13514,"line_start":174,"line_end":174,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13609,"byte_end":13623,"line_start":180,"line_end":180,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20475,"byte_end":20486,"line_start":51,"line_end":51,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22601,"byte_end":22616,"line_start":30,"line_end":30,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24720,"byte_end":24727,"line_start":33,"line_end":33,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25790,"byte_end":25798,"line_start":70,"line_end":70,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":26037,"byte_end":26045,"line_start":81,"line_end":81,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29067,"byte_end":29077,"line_start":53,"line_end":53,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33901,"byte_end":33916,"line_start":25,"line_end":25,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35652,"byte_end":35666,"line_start":44,"line_end":44,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2335,"byte_end":2344,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":22}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2354,"byte_end":2366,"line_start":65,"line_end":65,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":37}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2376,"byte_end":2380,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":64}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2390,"byte_end":2402,"line_start":67,"line_end":67,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":77}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2412,"byte_end":2418,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2428,"byte_end":2432,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":92}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2442,"byte_end":2450,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":110}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2460,"byte_end":2467,"line_start":71,"line_end":71,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/lib.rs","byte_start":2477,"byte_end":2486,"line_start":72,"line_end":72,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":133}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5011,"byte_end":5020,"line_start":49,"line_end":49,"column_start":17,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/blobstore.rs","byte_start":5717,"byte_end":5730,"line_start":77,"line_end":77,"column_start":17,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":292},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8478,"byte_end":8481,"line_start":27,"line_end":27,"column_start":23,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8484,"byte_end":8488,"line_start":27,"line_end":27,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":8491,"byte_end":8495,"line_start":27,"line_end":27,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9423,"byte_end":9443,"line_start":49,"line_end":49,"column_start":6,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":9723,"byte_end":9750,"line_start":61,"line_end":61,"column_start":6,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":12611,"byte_end":12630,"line_start":147,"line_end":147,"column_start":6,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13500,"byte_end":13514,"line_start":174,"line_end":174,"column_start":6,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":13609,"byte_end":13623,"line_start":180,"line_end":180,"column_start":21,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":793},"to":{"krate":0,"index":41}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":14011,"byte_end":14014,"line_start":188,"line_end":188,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":14017,"byte_end":14021,"line_start":188,"line_end":188,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/capabilities.rs","byte_start":14024,"byte_end":14028,"line_start":188,"line_end":188,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/eventstreams.rs","byte_start":20475,"byte_end":20486,"line_start":51,"line_end":51,"column_start":17,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1084},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/extras.rs","byte_start":22601,"byte_end":22616,"line_start":30,"line_end":30,"column_start":17,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1260},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":24720,"byte_end":24727,"line_start":33,"line_end":33,"column_start":17,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1390},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":25790,"byte_end":25798,"line_start":70,"line_end":70,"column_start":17,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1486},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/http.rs","byte_start":26037,"byte_end":26045,"line_start":81,"line_end":81,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/keyvalue.rs","byte_start":29067,"byte_end":29077,"line_start":53,"line_end":53,"column_start":17,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1692},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/logging.rs","byte_start":33901,"byte_end":33916,"line_start":25,"line_end":25,"column_start":17,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2819},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/suru/.cargo/registry/src/github.com-1ecc6299db9ec823/wascc-codec-0.7.2/src/messaging.rs","byte_start":35652,"byte_end":35666,"line_start":44,"line_end":44,"column_start":17,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2965},"to":{"krate":0,"index":20}}]}